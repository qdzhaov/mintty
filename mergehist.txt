2022/12/11 merge from master,889d0044cd95dd1cd751e98757624ebd3b202e32
3.6.2
    wiki Tips: MSYS2 releases since 2022-10-28 enable ConPTY by default
    wiki Tips: add option to configure MSYS2/Git-Bash to enable ConPTY (#1188)
    fix crash in Options dialog when Printer Service is stopped (#1185)
    overstrike also switched with DECSET 20 (VK100, #1184)
    fix auto-wrap behaviour in double-width lines
    WrapTab setting 2 also causes TAB at line end to set pending wrap (~#1182)
    TAB may wrap to next line if enabled (~#1182), option WrapTab
    fix double-width characters not to wrap if auto-wrap disabled
    refactor line wrapping
    extended emoji tables
    extend emoji information by considering Unicode file emoji-test.txt
    fix | in table (#1183)
    3.6.2
    adapt generation script to updated X11 file Compose
    prevent font zooming for resizing controls like CSI 8
    user-definable function transparency-opaque (#1168)
    Unicode 15.0 update
    option StatusLine to enable status line initially,
    user-definable function toggle-status-line
    factor out status type selection as function
    base mouse report coordinates to 1 in active status area
    fix mouse pixel coordinates limits (DECSET 1016)
    background image mode '+' for combined scaling and tiling (#1180)
    status line flags
    rectangular operations in active status area
    visualize margins by dimming; option DimMargins, user-definable function toggle-dim-margins
    limit cursor row to screen height when switching to active status area (DECSASD),
    fixing crash condition
    getemojis: full-emoji-list.html 15.0 can provide two fallback images rather than 1
    fix syntax of --WSL= options
    status line flags, bell flashing first attempt
    status line (type 1) extensions
    factor out show_char_info to get_char_info
    char info: fix pointer handling
    support DECSET 117 (DECECM, VT520); add DECARR to DECRQSS
    keep status area when switching alternate screen (xterm 373)
    fix status line cursor home column
    support text selection even if OpeningMod=0 (#1169)
    change option LinkMod -> OpeningMod (~#1169); doc fixes
    limit min line cursor width with respect to DPI (~#1175)
    fix line cursor invisible (zero sized) if cell_width is small enough (#1175)
    confirm dialog for Reset triggered by menu or Alt+F8 (#1173),
    user-definable function reset-noask
    fix crash condition on user-defined commands (#1174), also memory leaks
    revert "contrast for all cursor styles" tweak (broken on block cursor) (#1157)
    status line type 1 indicator, initial implementation
    ensure sufficient contrast for all cursor styles (#1157)
    revamp line cursor handling, size changeable by CSI ? N c (#1157)
    fix special return position in text display function, fix 1 free()
    alternative DEC private SGRs for sub/superscript (#1171)
    configurable modifiers for hovering and link opening (#1169), option LinkMod;
    support super and hyper modifiers with mouse functions
    refactor/fold mouse_open
    combined sub/superscript attributes render small script (#1171);
    adjusted subscript position (~#1171)
    Update sv.po (#1172)
    
    * Update sv.po
    doc Alt+keypad-minus
    grab focus again after showing the window, reducing focus delay for Windows 11 (#1113)
    Alt+keypad-minus initiates decimal numeric input;
    this is helpful in case an Alt+numpad-digit key is assigned a
    user-defined function which would otherwise disable numeric input
    starting with that key
    enhance hints to enable ConPTY support, esp. on MSYS2 (#1159)
    manual: example for variable logging file name with placeholders (#1167)
    not suppressing user-defined KeyFunctions for keypad keys in keypad modes (#1161);
    new option OldKeyFunctionsKeypad (~#1161, not listed in manual), just in case
    Status line support (VT320, xterm 371), DECSSDT, DECSASD.
    
    Basic framework, indicator status line not yet implemented,
    Extended multi-line host-writable status area, DECSSDT 2 N.
    
    Scrollback scrolling includes status area.
    Update zh_CN.po (#1163)
    Create monokai-dimmed (#1162)
    
    Monokai-dimmed theme
    3.6.1; updated OSC 7765 -> OSC 7704
    3.6.1
    workaround additional -W checks injected by cygport; precheck and fix them
    Improve legibility of blue and grey on light backgrounds (#1156)
    
    Made blue and grey (aka "BoldBlack") in the Helmholtz theme darker and dropped separate darker background colours for green and cyan, because they're more likely to be used as background for dark colours.
    
    Also darkened the background variants of blue, red, magenta and grey a little more to improve readability of light text on them.
    
    Changed the Kohlrausch colours accordingly, but kept brighter background colours variants there for readability of dark text on them.
    Support keyboard layout multi-char sequences ("ligatures") longer than 4 wchars (#1155)
    
    The semi-official limit is four:
    http://www.siao2.com/2015/08/07/8770668856267196989.aspx
    
    However, KbdEdit supports up to nine:
    http://www.kbdedit.com/manual/high_level_ligatures.html
    
    And in this thread on unicode.org, it was found that ligatures can be up to sixteen wchars long:
    https://www.unicode.org/mail-arch/unicode-ml/y2015-m08/0023.html
    reflow: fix crash condition on irregular reflow chunks; fix memory leak (#1150; #82, #219)
    wiki hint about OSC 7765 vs OSC 4
    implement resetting of xterm and ANSI colours (#1153)
    fix manual remark about opaqueness with Virtual Tabs (#1152)
    change to colour configuration: distinct fg/bg, distinct ANSI/palette (#1151)
    Separate foreground and background values for ANSI colours (#1151)
    
    Add the ability to specify separate foreground and background values for
    the 16 ANSI colours, so that e.g. blue text can be bright enough to be
    readable on a dark background, while background blue can be dark enough
    to not interfere with light foreground text, e.g. in Midnight Commander.
    
    The values can be given as semicolon-separated pairs in config files.
    When only one value is present, it is used for both the foreground and
    background, to ensure backward capability with existing themes.
    
    Also add mintty-specific control sequence OSC 7765 for setting and
    querying the foreground and background variants of the ANSI colour
    values. This sequence does not touch the first sixteen xterm256 colours
    that can be controlled through the OSC 4 and 104 sequences. Conversely,
    though, for backward compatibility those xterm sequences continue to
    control the ANSI colours as well, setting the foreground and background
    variants to the same value.
    
    Put the new feature to use in the default 'helmholtz' theme, darkening
    background blue a lot and the other non-bold colours by a bit as well,
    to improve readability of light text on them. Except for yellow, because
    that isn't suitable as background for light text anyway.
    
    Repurpose the 'kohlrausch' theme as a black-on-white one, with darker
    foreground than background colour values.
    
    Reflect changes in documentation and bump copyrights.
    tweak/comment CI file (#1142, #1149)
    Add Appveyor CI (#1149)
    Visual input feedback: don't obscure text when just pressing Alt.
    3.6.0
    tweak Blue of Helmholtz-Kohlrausch themes (including luminous and new kohlrausch)
    tune visual feedback of numeric or composed character input
    tune themes helmholtz and luminous (fixed)
    fix overriding of distinct colour configuration by preselected theme
    tune themes helmholtz and luminous (reviewed)
    right-to-left font fallback (#1148)
    theme helmholtz is new default colour scheme
    contribute themes helmholtz and luminous
    fix Compose sequences with more than 2 characters (broken since 3.1.5)
    flush Compose visual feedback; clear Compose on ESC
    ensure automatic update of X11-derived data: compose sequences and colour names
    update X11-derived data: compose sequences and colour names
    visual feedback of numeric or composed character input
    fix some cases of freeline()
    support visual feedback for numeric/composed char input / provide info
    distinct Unicode vs. hex numeric character input; key function unicode-char
    revise and fix numeric character input
    tweak HTML manual page
    test reflow speedup by not compressing scrollback buffer
    unfold insertion of numeric input character
    Menu key opens menu inside terminal, also stops numeric input
    suspend shortcut handling during numeric character input
    rearrange list of trimmed environment variables in groups
    drop LOGNAME from env trimming, add tmux etc
    drop SHELL from environment trimming
    environment trimming: clear variables set by launchers, other terminals, shells;
    which might indicate incorrect information and lead to confusing behaviour
    (like xterm)
    reflow on resize: rebase graphics
    winimg_new: fix parameter names, fold in virtuallines offset
    resize and reflow: fix cursor position handling
    resize: drop tweaking of saved cursor (will be adjusted when restored)
    find proper cursor position after reflow to smaller width than current position
    localize label of interactive RewrapOnResize setting (text from gnome)
    rewrap on resize: switchable and configurable (#82)
    extend cell zoom to some Geometric Shapes U+25E2.., Dingbats U+1F67C.., and Symbols U+1FB00..U+1FBB3
    allow user-defined mappings for Ctrl/Alt/Super/Hyper-modified character keys;
    Control/Alt safeguarded by new option ShootFoot (#399, #252, #523, #602, #645, ~#524, ~#817, ~#451)
    speedup rendering of replacement indication of invalid character codes (#1145)
    reflow terminal lines when resizing terminal width (#82, #219, mintty/wsltty#154); initial implementation
    rename term.sblen -> sbsize
    safeguard multi-line bidi against looking back beyond scrollback buffer
    missing declaration for option -Rt
    tweak manual: menu configuration (~#1144)
    doc tweaks
    fix auto-widening of ambiguous-width letters (broken since 3.4.4) (?#1065)
    fix unscroll (CSI +T) in case width has changed meanwhile
    new option -Rt to report the tty name of the child process / shell
    tweak pending auto-wrap state affected when switching wrap modes
    wiki: fix old MSYS links (deprecated)
    3.5.3
    avoid update of localization template without changes
    wiki: describe optional restoring of specific special key assignments
    reverse horizontal scrollbar click positions for resizing horizontal view
    document option OldModifyKeys, include restoring Ctrl+Enter → ^^
    Horizontal scrolling feature (#138)
    Save as Image (from Ctrl+right-click) with Shift also opens the image (#1139)
    always fix window position back to screen when widening beyond screen
    avoid position gap after Options Apply (~#1126) in more cases, especially scrollbar toggling
    tweak again handling of negative font leading (#948, #946)
    doc setup of tab vs window creation in same working directory
    fix combining characters colour rendering (~#710)
    fix zero sizehint for clipboard allocation
    limit size of scrollback buffer to secure buffer and clipboard handling (#1134),
    new option MaxScrollbackLines
    revise clipboard buffer handling:
    extract attributes only on demand, optimise memory allocation;
    speed up HTML generation significantly
    control for multiple tab groups (mintty/wsltty#295)
    clipboard: strip terminating NUL (#1132)
    WSL path conversion supports UNC paths (#1130)
    WSL path conversion considers extended /etc/fstab entries (#1130)
2021/11/17 merge from master,acf03b09b2e41f149ba848d997d1732aa8358fbb
    3.5.2
    guard unscroll against top of scrollback
    change default BracketedPasteByLine=0 for consistent appearance
    unscroll sequence CSI +T, filling lines from scrollback buffer (kitty)
    extend scope of area attributes change functions DECCARA and DECRARA
    extend DECPS note range to 8 octaves (experimental) (~#1122)
    tweak getemojis script (~#1129), change URLs to https for more reliable download
    maintain cygwin native clipboard format, to set proper clipboard timestamp
    LED state management: compensate race condition with ScrollLock auto-repeat
    experiment to fallback to MingW libao (#1122), disabled
    revise and enhance DECPS audio output support (~#1122)
    workaround gcc 5.4 compilation glitch
    simplify workaround for gcc 11 warning glitch
    manual: refer setting EraseToScrollback roughly to xterm resource cdXtraScroll
    manual: refer setting EraseToScrollback to xterm resource cdXtraScroll
    Unicode 14.0.0
    workaround for gcc 11 bug on cygwin 32 bit
    safeguard for undefined WSL distribution name (~mintty/wsltty#296)
    wiki: mention setting SuppressDEC=80 to suppress DECSDM Sixel mode switching (#1127)
    wiki: mention fixed DECSET Sixel display mode (#1127)
    wiki: experimental sound support: OSC 440 (#1122)
    fix getemojis script to run on system with non-bash default shell (#1083)
    add missing controls to wiki
    experimental sound support: OSC 440 (#1122) and DECPS
    fix -s max... (#1124); fix placement options with higher DPI
    speedup re-introduced initial provisional win_init_fonts
    confine window position adjustment to proper cases (#1123, #1126)
    fix (revert back) DECSDM (DECSET 80) Sixel Display mode (#1127, xterm 369)
    3.5.1
    fix emojis selection highlighting (#1116), reverting 3.0.1 tweak for emojis in bidi lines
    grab focus before showing the window, reducing focus delay (#1113)
    reposition child_create and explain as related to #1113
    earlier window display by later tabbar setup (~#1113)
    slightly earlier window display by later drag-and-drop setup (~#1113)
    excempt numeric and indicator emojis from space overhang (#1104)
    ensure -w full to cover taskbar also with -B void (~#1114)
    prevent spacing anomaly after U+FD3E and U+FD3F
    manual and wiki tips: enhance how to set copy/paste keys Windows-style (#778)
    avoid duplicate font initialisation (~#1113)
    speedup font initialisation (~#1113)
    withdraw tab transparency support (#1069, ~#699, ~944);
    tab management via background tab hiding did not work properly;
    see also comments in code for unpleasant side effects
    wiki: notes on bracketed-paste mode usage in bash
    transparency button slider (#728, #140)
    3.5.1 release candidate
    add warning about setting Locale and leaving Charset empty (mintty/wsltty#289)
    tab management:
    * hide background tabs from appearing while moving the window (~#1069, ~#944, ~#699)
    * support transparency (avoiding cumulation of opaqueness) (#1069, ~#699)
    * keep tabbar consistent in case a tab gets terminated irregularly (~#944, #699)
    wiki: fix and tweak configurations related to stty/readline (#1109)
    new user-definable function new-window-cwd to clone window in current directory (~#1106)
    new user-definable function new-window-cwd to clone window in current directory
    scroll features and user-definable functions no-scroll, scroll-mode;
    management of ScrollLock keyboard LED
    bracketed paste mode: configurable splitting by line, option BracketedPasteByLine
    notify child process via iotcl also when scaling window with font size (xterm 368)
    tweak overhang mechanism; adjust interaction with TAB, emojis, Disp* options (#1104)
    workaround for broken `windres` tool of binutils 2.36 (fixed upstream)
    visual double-width of symbols and emojis with subsequent space (#1104, #892, #1065, #979, #553, ~#927, ~#922, ~#938, ~#638)
    tweak italic emoji placement
    apply italic attribute to emojis
    prevent artefacts of large-size underscore cursor (CSI 4 SP q CSI ? 6 c)
    speedup of width detection for auto-narrowing for certain characters (#1065, #979, #892);
    not using GetPixel anymore
    include screen update in squashing of bell sound series (#1102, ~#865)
    fix termination of synchronous update (#1098)
    alternative escape sequence DECSET 2026 for synchronous screen update (#1098)
    limit line cursor width by width of underline etc rather than char width (#1101)
    3.5.0
    apply blink attribute to graphics
    revise/fix handling of blink attribute (~#1097);
    coloured blink substitution display (xterm),
    escape sequences OSC 5/6;2,
    new option BlinkColour;
    support distinct blink attribute for base and combining characters
    user-definable function win-toggle-keep-screen-on to disable screen saver
    restore "Allow blinking" in Options dialog (#1097)
    export TERM to WSL (mintty/wsltty#278)
    OSC 22 to set mouse pointer shape (xterm 367), options MousePointer, AppMousePointer
    WSL-specific detection of Term info availabilities (mintty/wsltty#278)
    atomic/synchronous screen update (~#1098), escape sequences DCS=1/2s
    escape sequence to change progress value only
    manual: add missing detail on Tek mode support scope (#896)
    escape sequences to reset progress bar colour mode to configured value
    support progress detection (for implicit progress bar) also if iconized
    implicit (detected) progress bar uses configured colour
    fix reporting option -RW in some cases
    manual: add details on Tek mode support scope (#896)
    3.4.7
    new heuristics to adjust row spacing to font metrics (mintty/wslttyw#257); option AutoLeading
    Bracketed Paste Mode: ensure embedding of each line
    enhanced indication of "defocused mode": boldened colour and point size
    lines cleared from top of screen are scrolled into scrollback buffer (mintty/wsltty#272)
    fix character set GR mappings to be unguarded by NRCS (vttest 3.10)
    new user-definable function win-toggle-always-on-top (#1095)
    various Tek mode fixes:
    initial written vector joins previous text output (xterm);
    GIN mode and ENQ coordinates, ENQ status byte;
    various mode handling fixes after GIN mode;
    GIN mode terminator strap options (Tek, xterm), option TekStrap
    smooth GIN mode crosshair cursor movement
    rearrange
    distinct GIN mode mouse input (xterm)
    tek borders: adjust to compensate for coordinate rounding
    keyboard status report (DEC DSR 26), reporting window focus (vttest 11.1.1.1.1)
    support "written first vector", triggered by GS-BEL (vttest 11.8.6.5, ~#896)
    fix validity for REP repeat preceding graphic char (vttest 11[.6].7.2)
    simplified support of ISO Guarded Area as protected (xterm-like global distinction)
    restore attributes after DECALN test pattern (vttest 11.6.4/5)
    run login mode shell if started from Windows shortcut; option LoginFromShortcut
    wiki: doc script to adjust remote locale mismatch (mintty/mintty#1092)
    fix blinking for drawn/overstrike characters, (under)lining and emojis
    3.4.6
    OSC 7750 for dynamic change of emojis style; support style Emojis=zoom
    3.4.5
    mintheme tool works in `screen` (mintty/wsltty#268)
    fold case_fold
    tame some window operations, just in case
    describe initial working dir setup for SaveFilename (~#1086)
    mintheme tool: enhanced option --save to work better in WSL (mintty/wsltty#268)
    support home or environment variable prefix for setting SaveFilename (~#1086)
    settings -P/--pcon/ConPTY to enable/disable ConPTY support (mintty/wsltty#271)
    wiki: mention (former) interoperability issues of wslbridge2 backend
    among systems based on glibc vs musl libraries (mintty/wsltty#271, mintty/wsltty#195)
    change Ctrl+Backarrow to send Backspace (#1082, #449, xterm);
    apply modifyOtherKeys mode 2 more consistently to special keys;
    hidden options OldModifyKeys and FormatOtherKeys
    wiki doc support for Windows terminal theme (~~#1079)
    support ".json" theme file conversion, vscode and Windows terminal formats (~~#1079)
    unfold colour scheme collection to be used for multiple formats
    support theme file conversion on "file:" URL drag-and-drop (~#1079)
    support theme file conversion on filename drag-and-drop (#1079)
    safeguard
    mention configuration dependence of Ctrl+Shift+letter shortcuts (#1084)
    fix getemojis script to run on system with non-bash default shell (#1083)
    tweak progress bar implementation: Windows interface usage
    document check whether invoked via Win+R;
    may be considered to imply login mode, not enabled
    (see https://sourceware.org/pipermail/cygwin/2021-January/247321.html)
    add github avatar to repository
    tweak availability of DEC Cyrillic character set (VT520, xterm 363)
    fix U+01C* glyph double-width to apply detection rather than assume wide (#777)
    detect fractional progress percentage (#1074);
    auto-narrowing: glyph double-width for double-letter characters (like Dz, #777)
    avoid trouble with non-text font (#777)
    3.4.4
    note about reduced transparency of overlayed windows (#1069)
    new Compose key options: user-defined super or hyper (#777)
    tweak initial setup of terminal pixel size (#1071)
    support 48-bit hex colour specs (#1072)
    secondary font specification for Unicode blocks: add missing files
    fix rendering of 0x7F (DEL code) in some 96-characters NRCS modes
    secondary font specification for Unicode blocks (#777),
    extended syntax for option FontChoice
    INSTALL instructions up-to-date
    workaround for mysterious output delay during non-BMP width detection (#1065)
    enhance documentation of ExitCommands feature (#1063)
    fix potential font resource leaks with search bar and tabbar
    custom font in Options dialog (~#1059), options OptionsFont, OptionsFontHeight
    enable non-BMP width detection, tweak auto-narrowing character ranges (#1065)
    configurable font for Options dialog (~#1059), still disabled
    update to Emoji data version 13.1
    smart detection of progress indication also inmidst line (mintty/wsltty#202)
    transform Exit to characters, to exit on application-level (#1063), option ExitCommands
    DECTST colour fillings (CSI 4;10..13 y, VT240)
    terminal reset clears progress bar (mintty/wsltty#202)
