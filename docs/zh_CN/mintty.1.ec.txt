  .\" mintty man page
  .\"
  .\" This 'man' page is Copyright 2009 Lee D. Rothstein, 2009-13 Andy Koppe
  .\"
  .\" You may distribute, use, and modify this man page under the terms
  .\" of the GNU Free Documentation License (GFDL), Version 1.3,
  .\" 3 November 2008 (or later) as specified.
  .TH mintty 1 mintty
  .ad l
  .SH
E NAME
C 名称

E mintty - Cygwin terminal emulator
C mintty - Cygwin终端模拟器

  .SH
E SYNOPSIS
C 概述

E \fBmintty\fP [\fIOPTION\fP]... [ \fB-\fP | \fIPROGRAM\fP [\fIARG\fP]... ]

  .SH
E DESCRIPTION
C 描述

E \fBMintty\fP is a terminal emulator for Cygwin with a native Windows user
E interface and minimalist design.
E Its terminal emulation is largely compatible with \fBxterm\fP, but it does not
E require an X server.
C \fIMintty\\fBfP\fP是Cygwin终端仿真器,具有本机Windows用户界面和极简设计。它的终
C 端仿真在很大程度上是\fIxterm\fP兼容的,但不需要X服务。

  .SH
E INVOCATION
C 调用

E If a program name is supplied on the command line, this is executed with any
E additional arguments given.
E Otherwise, mintty looks for a shell to execute in the \fISHELL\fP environment
E variable.
E If that is not set, it reads the user's default shell setting from \fI/etc/passwd\fP.
E As a last resort, it falls back to \fI/bin/sh\fP.
C 如果在命令行上给定了参数,则使用给定的任何附加参数执行此操作。否则mintty 会在
C \fISHELL\fP 环境变量中查找要执行的 shell。如果没有设置,它会从\fI/etc/passwd\fP 读取用户的
C 默认 shell 设置。最后它会使用 \fI/bin/sh\fP作为shell。

E If a single dash is specified instead of a program name, the shell is invoked
E as a login shell.
E If mintty is started from a Windows shortcut (desktop or start menu), by 
E default the shell is also invoked as a login shell unless disabled by an option.
C 如果指定了单个破折号,则该外壳程序将作为登录外壳程序调用。如果 mintty 从 Windows
C 快捷方式(桌面或开始菜单)启动,默认情况下,shell 也会作为登录 shell 调用,除非
C 被选项禁用。

E Invocation by a name of \fBwsl*\fP\fI[-distro]\fP 
E implies a \fB--WSL\fP\fI[=distro]\fP parameter.
C 名称为 \fBwsl*\fP\fB[-distro]\fP 的调用暗示了 \fB--WSL\fP\fI[=distro]\fP 参数。

E Mintty supports being started from a Windows desktop shortcut; it honours
E window and icon settings of the shortcut, aligns taskbar grouping with the 
E shortcut, disables daemonizing, and sets environment variable 
E MINTTY_SHORTCUT to its pathname.
C Mintty 支持从 Windows 桌面快捷方式启动;它使用快捷方式的窗口和图标设置,将任务栏
C 分组与快捷方式对齐,禁用守护程序,并将环境变量 MINTTY_SHORTCUT 设置为其路径名。

  .SH
E OPTIONS
C 选项

E The standard GNU option formats are accepted, with single dashes
E introducing short options and double dashes introducing long options.
C 接受标准的 GNU 选项格式,单破折号介绍短选项,双破折号介绍长选项。
  .br
E Note that setting \fBShortLongOpts\fP enables single-dash long options.
C \fB注意:\fP 设置 \fBShortLongOpts\fP 启用单破折号长选项。

  .TP
  \fB-c\fP, \fB--config\fP \fIFILENAME\fP
E Read settings from the specified configuration file, in addition to
E the default config files.
E Configuration changes are saved to the last file thus specified.
C 从指定的配置文件中读取设置。配置更改将保存到最后指定的一个文件中。

  .TP
  \fB-C\fP, \fB--loadconfig\fP \fIFILENAME\fP
E Read settings from the specified configuration file, in addition to
E the default config files.
E The file is not taken into account for saving configuration changes.
E This is useful to mix-in partial configuration variants, particularly 
E colour schemes. However, \fB-o ThemeFile=\fP\fIFILENAME\fP may be preferable.
C 从指定的配置文件中读取设置。保存配置更改时不考虑该文件。这对于混合部分配置变体
C 非常有用,尤其是配色方案。但是,\fB-o ThemeFile=\fP\fIFILENAME\fP 可能更可取。

  .TP
  \fB--configdir\fP \fIDIRNAME\fP
E Use the given directory to check for resource subdirectories 
E (\fIthemes\fP, \fIsounds\fP, \fIlang\fP, \fIemojis\fP, \fIicon\fP, \fIfonts\fP, \fIpointers\fP);
E also read settings from the configuration file \fIDIRNAME\fP/\fBconfig\fP, 
E in addition to the default config files, and save configuration changes here.
C 使用给定目录检查资源子目录
C (\fIthemes\fP, \fIsounds\fP, \fIlang\fP, \fIemojis\fP, \fIicon\fP, \fIfonts\fP, \fIpointers\fP);
C 从配置文件 \fIDIRNAME\fP/\fBconfig\fP 中读取设置,并在此处保存配置更改。

  .TP
  \fB--dir\fP \fIdirectory\fP
E Change initial directory to start in. This is especially useful for 
E invocation of mintty from a Windows context menu via registry entry.
C 更改初始目录。用于通过注册表项从 Windows 上下文菜单调用 mintty 。

  .TP
  \fB-e\fP, \fB--exec\fP \fIPROGRAM\fP [\fIARG\fP ...]
E Execute the specified program in the terminal session and pass on any additional
E arguments.
C 在终端会话中执行指定的程序并传递参数。

E This option is present for compatibility with other terminal emulators only.
E It can be omitted, in which case the first non-option argument, if any,
E is taken as the name of the program to execute.
C 此选项仅用于与其他终端仿真器兼容。它可以省略,在这种情况下,第一个非选项参数(如
C 果有)将作为要执行的程序的名称。

  .TP
  \fB-h\fP, \fB--hold\fP \fBnever\fP|\fBstart\fP|\fBerror\fP|\fBalways\fP
E Determine whether to keep the terminal window open when the command has
E finished and no more processes are connected to the terminal.
E The argument can be abbreviated to a single letter.
C 确定在命令完成并且没有更多进程连接到终端时是否保持终端窗口打开。参数可以缩写为
C 单个字母。

E By default, the window is closed immediately, except if the child process has
E exited with status 255, which is used to indicate failure to execute the shell
E command.  (Exit status 255 is also used by \fBssh\fP to indicate connection
E errors.)
C 默认情况下,窗口会立即关闭,除非子进程以状态 255 退出,该状态用于指示无法执行
C shell 命令。(退出状态 255 也被 \fBssh\fP 用来指示连接错误。)

E Alternatively, the window can be set to never stay open, to always stay open,
E or to stay open only if the child process terminates with an error, i.e. with
E a non-zero exit status or due to a signal indicating a runtime error.
C 或者,可以将窗口设置为从不保持打开状态、始终保持打开状态或仅在子进程因错误而终
C 止时才保持打开状态,即非零退出状态或由于指示运行时错误的信号。

  .TP
  \fB-i\fP, \fB--icon\fP \fIFILE\fP[\fB,\fP\fIINDEX\fP]
E Load the window icon from an executable, DLL, or icon file.  The optional
E comma-separated index can be used to select a particular icon in a file with
E multiple icons.
C 从可执行文件、DLL 或图标文件加载窗口图标。可选的逗号分隔索引可用于在具有多个图
C 标的文件中选择特定图标。

E \fINote:\fP About interaction problems of icon, shortcut, and the Windows taskbar:
E In a Windows desktop shortcut, it is suggested not to use this option in the 
E Target command line, as mintty will detect and use the icon 
E from the invoking shortcut (Change Icon...), 
E also resolving a leading Windows environment variable (like %SystemRoot%).
C \fB注意:\fP关于图标、快捷方式和Windows任务栏的交互问题:在Windows桌面快捷方式中,不
C 要在命令行中使用该选项,因为mintty会从使用调用快捷方式的图标,还解析了一个领先
C 的 Windows 环境变量(如 %SystemRoot%)。

  .TP
  \fB-l\fP, \fB--log\fP \fIFILE\fP|\fB-\fP
E Copy all output into the specified log file, or standard output if a dash is
E given instead of a file name.
E (Implies \fB-o Logging=yes\fP.)
C 复制输出到指定文件,如果给出破折号而不是文件名,则将所有输出复制到标准输出中。
C (暗示 -o Logging=yes。)

E If FILE contains \fB%d\fP it will be substituted with the process ID.
E See description of equivalent option "Log file" (Log=) below 
E for further formatting options and hints.
C 如果 FILE 包含 \fB%d\fP,它将被进程 ID 替换。请参阅下面的等效选项"日志文件"(Log=) 的
C 说明,以获取更多格式选项和提示。

E Note that logging can be toggled from the extended context menu.
C 注意,可以从扩展上下文菜单中切换日志记录。

  .TP
  \fB--logfile\fP \fIFILE\fP|\fB-\fP
E Like \fB--log\fP but with logging initially disabled, so just 
E specifying a potential log file name in case logging is enabled from 
E the extended context menu.
E (Equivalent to combining \fB--log\fP with \fB-o Logging=no\fP.)
C 与 \fB--log\fP 类似,但禁用日志记录;只指定日志文件名,可以从扩展上下文菜单中启用日志
C 记录。 (相当于将 \fB--log\fP 与 \fB-o Logging=no\fP 结合使用。)

  .TP
  \fB-o\fP, \fB--option\fP \fINAME\fP=\fIVALUE\fP
E Override the named config file option with the given value, e.g.
  \fB-o ScrollbackLines=1000\fP.
C 用给定的值覆盖命名的配置文件选项,例如\fB-o ScrollbackLines=1000\fP。

  .TP
  \fB-p\fP, \fB--position\fP \fIX\fP\fB,\fP\fIY\fP
E Open the window with its top left corner at the specified coordinates.
E Instead of coordinates, "centre" or "center" can be specified to place 
E the window in the screen centre, and "right" or "bottom" can be specified 
E to align the right or bottom window border with the right or bottom 
E screen border (together with another option -p to specify an offset).
C 打开窗口的左上角位于指定坐标处。可以指定"centre"或"center"将窗口放置在屏幕中心
C ,并且可以指定"right"或"bottom"以将右侧或底部窗口边框与右侧或底部屏幕边框对齐(
C 与另一个选项 -p 一起指定偏移量)。

E Option value "@N" where N is a number places the window on monitor N.
C 选项值"@N",其中 N 是一个数字,将窗口放在监视器 N 上。

E Multiple -p options can be combined; coordinates have a different meaning 
E depending on other options:
C 可以组合多个 -p 选项;根据其他选项,坐标具有不同的含义:
  .br
E - With "left", "top", or "@N", related coordinates are relative to the monitor.
C - 对于"left"、"top"或"@N",坐标是相对于显示器的。
  .br
E - With "right" or "bottom", related coordinates adjust the right or bottom 
E window border relative to the monitor.
C - 使用"right"或"borrom",坐标相对于显示器的右或下窗口边框。
  .br
E - Otherwise, coordinates are absolute and address the common multi-monitor 
E address space as provided by Windows.
C - 否则,坐标是绝对的,并寻址 Windows 提供的公共多显示器地址空间。

E \fINote:\fP For another option to select the monitor for a new mintty window, 
E see the description of Alt+F2.
C \fB注意:\fP 有关为新的 mintty 窗口选择监视器的另一个选项,请参阅 Alt+F2 的说明。

  .TP
  \fB-s\fP, \fB--size\fP \fICOLS\fP\fB,\fP\fIROWS\fP
E Set the default size of the window in character columns and rows.
E (The xterm-like syntax \fICOLS\fP\fBx\fP\fIROWS\fP is accepted too.)
E Instead of coordinates, "maxwidth" or "maxheight" can be specified;
E this can be combined with another parameter \fB-s\fP for the other dimension.
E The dimension for which "max" is applied is ignored in further \fB-s\fP or 
  \fB-p\fP parameters.
E For example, \fBmintty -s maxwidth -p 0,0 -s 0,10\fP will start a window 
E at full screen width, positioned at the top of the screen, with 10 lines.
C 设置窗口的默认字符列和行大小。(类似 xterm 的语法 \fICOLS\fP\fBx\fP\fIROWS\fP 也被接受)。坐标,
C 可以指定"maxwidth"或"maxheight";这可以与另一个参数 \fB-s\fP 结合用于另一个维度。在进
C 一步的 \fB-s\fP 或 \fB-p\fP 参数中将忽略应用"max"的维度。例如, \fBmintty -s maxwidth -p 0,0
C -s 0,10\fP 将以全屏宽度启动一个窗口,位于屏幕顶部,高度有 10 行。

  .TP
  \fB--nobidi\fP, \fB--nortl\fP
E Disable bidi display (right-to-left support). Same as \fB-o Bidi=0\fP.
C 禁用双向显示(从右到左支持)。与 -o Bidi=0 相同。

  .TP
  \fB-t\fP, \fB--title\fP \fITITLE\fP
E Use \fITITLE\fP as the initial window title.
E By default, the title is set to the executed command.
C 使用 \fITITLE\fP 作为初始窗口标题。默认情况下,标题设置为执行的命令。

  .TP
  \fB-T\fP, \fB--Title\fP \fITITLE\fP
E Use \fITITLE\fP as the permanent window title.
E The title is not changeable by control sequences.
E This feature is only available on the command line.
C 使用 \fITITLE\fP 作为永久窗口标题。标题不能被控制序列改变。此功能仅在命令行上可用。

  .TP
  \fB-B\fP, \fB--Border\fP \fBframe\fP|\fBvoid\fP
E Suppress window title, display only a frame or no border.
E This feature is only available on the command line.
E Note that frame border operations are also disabled.
E However, a window move can also be done with Ctrl+Alt+click-drag.
C 抑制窗口标题,只显示一个细边框或不显示边框。此功能仅在命令行上可用。
C 注意,边框操作同时也被禁用,但是,也可以使用 Ctrl+Alt+单击并拖动来完成窗口移动
C 。

  .TP
  \fB--tabbar\fP[\fB=\fP\fIlevel\fP]
E Activate tabbar for tab-based session switching among virtual tabs.
E This sets \fBTabBar=1\fP and \fBSessionGeomSync=\fP\fIlevel\fP.
E Without given value the default window synchronization level is 2.
C 激活选项卡栏以在虚拟选项卡之间进行基于选项卡的会话切换。这将设置\fBTabBar=1\fP 和
C \fBSessionGeomSync=\fP\fIlevel\fP。如果没有给定值,默认窗口同步级别为 2。

  .TP
  \fB-u\fP, \fB--utmp\fP
E Create a utmp entry.
C 创建一个 utmp 条目。

  .TP
  \fB-w\fP, \fB--window\fP \fBnormal\fP|\fBmin\fP|\fBmax\fP|\fBfull\fP|\fBhide\fP
E Set the initial window state: normal, minimized, maximized, full screen,
E or hidden.
C 设置初始窗口状态:正常、最小化、最大化、全屏或隐藏。

  .TP
  \fB--class\fP \fICLASS\fP
E Use \fICLASS\fP as the window class name of the main window.
E This allows window grouping or setup of different tab sets, 
E and it allows scripting tools to distinguish different mintty instances.
E The default is "mintty".
C 使用 \fBCLASS\fP 作为主窗口的窗口类名。这允许窗口分组或设置不同的选项卡集,并允许脚本
C 工具区分不同的 mintty 实例。默认值为"mintty"。

  .TP
  \fB-d\fP, \fB--nodaemon\fP
E Do not apply "daemonizing".
E By default, mintty tries to detach itself from the invoking terminal when 
E started from a Cygwin Console in order to avoid disabled signal reception, 
E and when cloning the window (Alt+F2) in order to avoid a remaining zombie process.
C 不要使用"守护进程"。默认情况下,当从 Cygwin 控制台启动时,mintty 尝试将自身与调
C 用终端分离,以避免禁用信号接收;以及在克隆窗口 (Alt+F2) 时,以避免剩余的僵尸进程。

  .TP
  \fB-D\fP, \fB--daemon\fP
E Enforce "daemonizing".
E By default, mintty tries to detach itself from the invoking terminal only 
E as described above. With this option, it tries to detach always.
E This makes a difference if a Windows "Shortcut key" is configured in a 
E Windows desktop shortcut for starting mintty. Without daemonizing, the 
E shortcut key will focus an already running instance of mintty, with 
E daemonizing it always starts a new instance.
C 强制执行"守护进程"。默认情况下,mintty 仅尝试如上所述将自身与调用终端分离。使用
C 此选项,它会尝试始终分离。如果在 Windows 桌面快捷方式中配置了用于启动 mintty 的
C Windows"快捷键",这会有所不同。没有守护进程,快捷键将聚焦一个已经运行的 mintty
C 实例,守护进程它总是启动一个新实例。

  .TP
  \fB-R\fP, \fB--Report\fP \fIinfo/mode\fP
E Report requested information.
C 报告要求的信息。

E With values "s" or "o", mintty reports the position and size of the window 
E when it exits. This can be used to manage last window positions and reopen 
E mintty windows accordingly.
E Reporting mode is "s" or "o" to choose short or long option syntax for the 
E restored (i.e. neither maximized nor minimized) geometry; 
E min/max/fullscreen information is added.
C "s"或"o"时,mintty 报告窗口退出时的位置和大小。这可用于管理最后一个窗口位置并相
C 应地重新打开薄荷窗口。报告模式是"s"或"o",为恢复的(即既不最大化也不最小化)几
C 何选择短或长选项语法;添加最小/最大/全屏信息。

E With value "m", mintty reports the system's monitor configuration 
E (listing all connected monitors and their geometry and position in 
E Windows' virtual monitor coordinate system), and exits.
C "m",mintty 报告系统的监视器配置(列出所有连接的监视器及其在 Windows 虚拟监视器
C 坐标系中的几何形状和位置),然后退出。

E With value "f", mintty reports the monospace fonts installed on the system 
E as determined by mintty, and exits.
C "f",mintty 报告系统上安装的等宽字体,由 mintty 确定,然后退出。

E With value "W", mintty lists installed WSL distributions and properties, 
E and exits.
C "W",mintty 列出已安装的 WSL 发行版和属性,然后退出。

E With value "p", mintty reports the PID of the child process (e.g. the shell).
C Mintty 使用值" p"报告子进程(例如 shell)的 PID。
E With value "P", mintty reports the cygwin PID and the Windows PID 
E of the mintty process (i.e. running the terminal).
C 使用值" p",mintty 报告 mintty 进程(即运行终端)的 cygwin PID 和 Windows PID。

  .TP
  \fB--trace\fP \fIOUTPUT\fP
E This option redirects reporting (and debug) output to a file.
C 此选项将报告(和调试)输出重定向到文件。

  .TP
  \fB--store-taskbar-properties\fP
E Enable persistent storage of Windows taskbar properties together with 
E options AppName and AppLaunchCmd.
C 启用 Windows 任务栏属性以及 AppName 和 AppLaunchCmd 选项的持久存储。

  .TP
  \fB--nopin\fP
E Prevent pinning of the mintty window to the Windows taskbar.
C 防止将 mintty 窗口固定到 Windows 任务栏。

  .TP
  \fB-P\fP, \fB--pcon\fP [\fBon\fP|\fBoff\fP]
E Enforce enabling or disabling of ConPTY support.
C 强制启用或禁用 ConPTY 支持。

  .TP
  \fB--wsl\fP (preferred option: \fB--WSL\fP, see below)
E Adjust to WSL (the Windows Subsystem for Linux, or Bash/Ubuntu on Windows):
C 调整到 WSL(Linux 的 Windows 子系统,或 Windows 上的 Bash/Ubuntu):
  .br
E - When dragging a Windows file or folder into mintty, it will be pasted 
E using the Linux path name.
C - 将 Windows 文件或文件夹拖入 mintty 时,将使用 Linux 路径名进行粘贴。
  .br
E - When Ctrl+clicking a file name, it will be interpreted in the Linux 
E namespace and converted before opening in Windows.
C - 当 Ctrl+单击文件名时,它将在 Linux 命名空间中解释并在 Windows 中打开之前进行转换。
  .br
E - Options DropCommands, ExitCommands, and setting MINTTY_PROG for UserCommands are disabled.
C - 选项 DropCommands、ExitCommands 和 UserCommands 的设置 MINTTY_PROG 被禁用。
  .br
E - The working directory of the current foreground process 
E (for click-opening pathnames) cannot be detected.
C - 无法检测当前前台进程的工作目录(用于单击打开路径名)。
  .br
E - Locale modification (@cjk...) is not set to the environment variables.
C - 区域设置修改 (@cjk...) 未设置为环境变量。

  .TP
  \fB--WSL\fP \fIWSL DISTRIBUTION NAME\fP
E Run a WSL session, setting other parameters as appropriate and involving 
E the \fIwslbridge2\fP gateway implicitly 
E (which should be installed in /bin for this purpose).
E If the distribution name is empty, the default WSL installation is run; 
E otherwise, it refers to the installed WSL packages as listed by the 
E Windows tool \fBwslconfig /l\fP or \fBwsl -l\fP.
E Implies \fB--wsl\fP, \fB--rootfs=\fP...,
E and \fB--icon=\fP... if a respective icon file exists for the distribution.
E Also sets up the gateway to propagate locale settings LANG, LC_CTYPE, LC_ALL 
E and environment variable APPDATA to the WSL session.
C 运行 WSL 会话,根据需要设置其他参数并隐式涉及 wslbridge2 网关(为此应将其安装在
C /bin 中)。如果分发名称为空,则运行默认的 WSL 安装;否则,它指的是 Windows 工具
C wslconfig /l 或 wsl -l 列出的已安装 WSL 包。暗示 --wsl、--rootfs=... 和
C --icon=...。还设置网关以将区域设置 LANG、LC_CTYPE、LC_ALL 和环境变量 APPDATA 传
C 播到 WSL 会话。

  .TP
  \fB--WSLmode\fP \fIWSL DISTRIBUTION NAME\fP
E Setup a WSL session for the given distribution (like \fB--WSL\fP) but 
E do not actually launch WSL which must be achieved with explicit 
E invocation of a suitable gateway.
E The preferred option is \fB--WSL\fP which invokes \fI/bin/wslbridge2\fP 
E with proper arguments as determined from the selected WSL distribution, 
E in login mode if requested and home directory preference if requested.
C 为给定的分发设置 WSL 会话(如 \fB--WSL\fP),但实际上不启动 WSL,这必须通过显式调用合
C 适的网关来实现。首选选项是 \fB--WSL\fP 调用 \fI/bin/wslbridge2\fP 并使用从所选 WSL 发行版确
C 定的适当参数、登录模式(如果请求)和主目录首选项(如果请求)。

  .TP
  \fB--rootfs\fP \fIROOTFOLDER\fP
E Provide the root filesystem folder to adjust path conversion properly 
E for the respective WSL installation.
C 提供根文件系统文件夹,以便为相应的 WSL 安装正确调整路径转换。

  .TP
  \fB-~\fP
E Start in the user's home directory. Affects also WSL sessions.
C 从用户的主目录开始。也会影响 WSL 会话。

  .TP
  \fB-H\fP, \fB--help\fP
E Display a brief help message and exit.
C 显示简短的帮助消息并退出。

  .TP
  \fB-V\fP, \fB--version\fP
E Print version information and exit.
C 打印版本信息并退出。

  .TP
E A number of xterm-style convenience options are also available:
C 还提供了许多 xterm 风格的选项:

  .TP
  \fB--fg\fP
E Sets ForegroundColour.
C 设置前景颜色。

  .TP
  \fB--bg\fP
E Sets BackgroundColour.
C 设置背景颜色。

  .TP
  \fB--cr\fP
E Sets CursorColour.
C 设置光标颜色。

  .TP
  \fB--selfg\fP
E Sets HighlightForegroundColour.
C 设置 高亮前景颜色。

  .TP
  \fB--selbg\fP
E Sets HighlightBackgroundColour.
C 设置字体。

  .TP
  \fB--fn\fP, \fB--font\fP
E Sets Font.
C 设置字体大小。

  .TP
  \fB--fs\fP
E Sets FontSize.
C 设置大小和位置,通过可选的监视器编号扩展 xterm 语法。

  .TP
  \fB--geometry\fP \fICOLS\fP\fBx\fP\fIROWS\fP[[-+]\fIX\fP[-+]\fIY\fP][\fB@\fP\fIMONITOR\fP]
E Sets size and position, extending xterm syntax by an optional monitor number.
C 设置当前语言环境的字符集。

  .TP
  \fB--en\fP
E Sets Charset within the current locale.
C 设置当前语言环境的字符集。

  .TP
  \fB--lf\fP
E Sets Log, the log file name.
E Use \fB-l\fP to both set the log file name and enable logging.
C 设置日志,日志文件名。使用 -l 设置日志文件名并启用日志记录。

  .TP
  \fB--sl\fP
E Sets ScrollbackLines.
C 设置回滚行数

  .SH
E USAGE
C 用法

E Mintty tries to adhere to both Windows and Unix usage conventions.
E Where they conflict, an option is usually provided.
E This section primarily describes the default configuration;
E see the \fBCONFIGURATION\fP section on how it can be customised.
C Mintty 尝试遵守 Windows 和 Unix 的使用约定。在它们发生冲突的地方,通常会提供一
C 个选项。本节主要介绍默认配置;有关如何自定义,请参阅配置部分。

  .SS
E \fBFont rendering\fP
C \fB字体渲染\fP

E Mintty uses Windows Uniscribe font rendering to display a wider range 
E of characters; the TextOut API is automatically used instead if suitable.
C Mintty 使用 Windows Uniscribe 字体渲染来显示更广泛的字符;如果合适,将自动使用
C TextOut API。

  .TP
E \fBFont integration\fP
C \fB字体集成\fP
E Fonts in the resource subdirectory \fIfonts\fP of the config directory 
E are installed dynamically and can be used for configured or interactively 
E changed font selection. This is especially useful for a portable installation.
C config 目录下的资源子目录 \fIfonts\fP 中的字体是动态安装的,可用于配置或交互更改的字
C 体选择。这对于便携式安装特别有用。

  .SS
E \fBBidirectional rendering\fP
C \fB双向渲染\fP

E In addition to its default implicit bidirectional rendering with automatic 
E direction detection (according to the Unicode Bidi algorithm), 
E mintty supports ECMA-48 bidi modes and private bidi modes to control 
E switchable bidi behaviour per line and partially per paragraph (i.e. within 
E an auto-wrapped line), as listed in 
E \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#bidirectional-rendering\fP.
E They follow the current status of the bidi mode model of the 
E \fBBiDi in Terminal Emulators\fP recommendation 
E (\fIhttps://terminal-wg.pages.freedesktop.org/bidi/\fP).
C 除了具有自动方向检测(根据 Unicode Bidi 算法)的默认隐式双向渲染外,mintty 还支
C 持 ECMA-48 双向模式和私有双向模式,以控制每行和部分每段的可切换双向行为(例,在
C 自动换行中行),如
C \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#bidirectional-rendering\fP 中所列。
C 它们遵循\fB终端仿真器推荐\fP (\fIhttps://terminal-wg.pages.freedesktop.org/bidi/\fP) 中
C BiDi 的 bidi 模式模型的当前状态。

  .SS
E \fBMenus\fP
C \fB菜单\fP

E The context menu can be opened by right-clicking the mouse (with Shift 
E in case right-click has been redefined or redirected to the application) or by
E pressing the \fBMenu\fP key that is normally located next to the right Ctrl key.
E If invoked while the Ctrl key is held down, an extended context menu will 
E be opened, with some additional entries.
C 右键单击鼠标(如果右键单击已重新定义或重定向到应用程序,请使用 Shift)或按下通
C 常位于右侧 Ctrl 键旁边的\fB菜单键\fP,可以打开上下文菜单。如果在按住 Ctrl 键时调用,
C 将打开一个扩展的上下文菜单,其中包含一些附加条目。

E Mintty also adds a couple of items to the window menu, which can be accessed 
E by clicking on the program icon or pressing \fBAlt+Space\fP.
C Mintty 还在窗口菜单中添加了几个项目,可以通过单击程序图标或按 \fBAlt+Space\fP 来访问
C 这些项目。

E Both menus have an entry that leads to the Options dialog for changing mintty's
E configuration.
C 两个菜单都有一个条目,可通向用于更改 mintty 配置的选项对话框。

  .SS
E \fBText selection, copy & paste\fP
C \fB文本选择、复制和粘贴\fP

E Screen contents can be selected by holding down the left mouse button and
E dragging the mouse.  If Alt is held down before the left mouse button, a 
E rectangular block instead of whole lines will be selected.
E The selection can be extended by holding down \fBShift\fP while left-clicking.
E Double-clicking or triple-clicking selects a whole word or line, whereby word
E selection includes special characters that commonly appear in file names and
E URLs.
C 可以通过按住鼠标左键并拖动鼠标来选择屏幕内容。如果在鼠标左键之前按住 Alt,将选
C 择矩形块而不是整行。可以通过在左键单击的同时按住 \fBShift\fP 来扩展选择。双击或三次单
C 击可选择整个单词或行,其中单词选择包括通常出现在文件名和 URL 中的特殊字符。

E By default, selected text is automatically copied to the clipboard.
E This can be disabled on the \fBMouse\fP page of the Options dialog.
E Selected text can also be copied manually using either the \fBCopy\fP menu
E command, the \fBCtrl+Ins\fP or \fBCtrl+Shift+C\fP keyboard shortcuts 
E (the latter if enabled by setting \fBCtrlShiftShortcuts=yes\fP; 
E \fBCtrl+C\fP with option \fBCtrlExchangeShift=yes\fP), 
E or the middle mouse button combined with \fBShift\fP.
C 默认情况下,选定的文本会自动复制到剪贴板。这可以在选项对话框的\fB鼠标\fP页面上禁用。
C 也可以使用"复制"菜单命令、\fBCtrl+Ins\fP 或 \fBCtrl+Shift+C\fP 键盘快捷键(后者如果通过设置
C \fBCtrlShiftShortcuts=yes\fP 启用;\fBCtrl+C\fP 与选项\fBCtrlExchangeShift=yes\fP)或中间手动复
C 制所选文本鼠标键结合 \fBShift\fP。

E The selected region is copied as "rich text" as well as normal text,
E which means it can be pasted with colours and formatting into applications
E that support it, e.g. word processors ("true colour" attributes are not supported).
C 所选区域被复制为"富文本"和普通文本,这意味着它可以用颜色和格式粘贴到支持它的应
C 用程序中,例如文字处理器(不支持"真彩色"属性)。

E The window title can be copied using the \fBCopy Title\fP command in the window
E menu.
C 可以使用窗口菜单中的\fB复制标题\fP命令来复制窗口标题。

E The clipboard contents can be pasted using either the \fBPaste\fP menu command,
E the \fBShift+Ins\fP or \fBCtrl+Shift+V\fP keyboard shortcuts 
E (the latter if enabled by setting \fBCtrlShiftShortcuts=yes\fP; 
E \fBCtrl+V\fP with option \fBCtrlExchangeShift=yes\fP), 
E or the middle mouse button.
C 剪贴板内容可以使用\fB粘贴\fP菜单命令、\fBShift+Ins\fP 或 \fBCtrl+Shift+V\fP 键盘快捷键(后者如果
C 通过设置 \fBCtrlShiftShortcuts=yes\fP 启用;\fBCtrl+V\fP 与选项\fBCtrlExchangeShift=yes\fP)或鼠
C 标中键粘贴按钮。
E Not only text but also files and directories can be pasted,
E whereby the latter are inserted as Cygwin file names.
E Shell quoting is added to file names that contain spaces or special characters.
C 不仅可以粘贴文本,还可以粘贴文件和目录,从而将后者作为 Cygwin
C 文件名插入。 Shell 引用被添加到包含空格或特殊字符的文件名中。

E Selection highlighting is cleared on input by default. This can be disabled
E with option \fBClearSelectionOnInput=false\fP.
C 默认情况下,在输入时会清除选择突出显示。这可以通过选项
C \fBClearSelectionOnInput=false\fP 禁用。

E The current selection size can optionally been indicated with a popup, 
E enabled with option \fBSelectionShowSize\fP.
C 当前选择的大小可以选择用弹出窗口指示,通过选项 \fBSelectionShowSize\fP 启用。

E Selection can also be managed using the keyboard. Shift+middle-keypad-key 
E (Shift+"5") enters keyboard selecting mode (modifier configurable).
C 也可以使用键盘管理选择。 Shift+middle-keypad-key (Shift+"5") 进入键盘选择模式(
C 修饰符可配置)。

E Note: If both settings \fBCtrlShiftShortcuts\fP and \fBCtrlExchangeShift\fP 
E are enabled, copy & paste functions are assigned to plain (unshifted) 
E \fBCtrl+C\fP and \fBCtrl+V\fP for those who prefer them to be handled 
E like in Windows.
C \fB注意:\fP 如果同时启用了 \fBCtrlShiftShortcuts\fP 和 \fBCtrlExchangeShift\fP 设置,则复制和粘贴
C 功能将分配给普通(未移位)\fBCtrl+C\fP 和 \fBCtrl+V\fP,供那些希望像在 Windows 中一样处理它
C 们的人使用。

  .TP
E \fBElastic text selection\fP
C \fB弹性文本选择\fP
E The traditional selection behaviour of cell-based terminals is that a 
E character touched with the mouse is included in the selection.
E With option \fBElasticMouse\fP, text selection can be changed to include 
E the first and last characters only if they are spanned at least halfway 
E by the mouse dragging, like many GUI application do.
C 基于单元格的终端的传统选择行为是将鼠标触摸的字符包含在选择中。使用 ElasticMouse
C 选项,文本选择可以更改为包括第一个和最后一个字符,前提是它们至少被鼠标拖动跨越
C 了一半,就像许多 GUI 应用程序一样。

  .SS
E \fBDrag & drop\fP
C \fB拖放\fP

E Text, files and directories can be dropped into the mintty window.
E They are inserted in the same way as if they were pasted from the clipboard.
C 文本、文件和目录可以放入 mintty 窗口中。它们的插入方式与从剪贴板粘贴的方式相同
C 。

  .SS
E \fBOpening files, directories and URLs\fP
C \fB打开文件、目录和 URL\fP

E Files, directories, URLs and web addresses beginning with "www." can be 
E opened either by holding \fBCtrl\fP while left-clicking on them (or 
E double-clicking, if and as enabled by option \fBOpeningClicks\fP), or by 
E selecting them and choosing the \fBOpen\fP command from the context menu.
E Embedded spaces are considered if escaped with a backslash; for 
E selected pathnames, also embedding quote marks are considered.
C 以"www"开头的文件、目录、URL 和网址。可以通过按住 \fBCtrl\fP 的同时左键单击它们(或双
C 击,如果选项 \fBOpeningClicks\fP 启用)或通过选择它们并从上下文菜单中选择\fB打开\fP命令来打
C 开。如果用反斜杠转义,则考虑嵌入空格;对于选定的路径名,还考虑嵌入引号。

E A relative pathname is interpreted as relative to the current working 
E directory of the terminal foreground process if that can be determined, 
E overridden by the working directory interactively communicated by the 
E respective control sequence (OSC 7).
C 如果可以确定,则相对路径名被解释为相对于终端前台进程的当前工作目录,由相应控制
C 序列 (OSC 7) 交互通信的工作目录覆盖。

E Mintty also supports the OSC 8 control to embed explicit hyperlinks 
E (similar to links on web pages), 
E see \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#hyperlinks\fP.
C Mintty 还支持 OSC 8 控件嵌入显式超链接(类似于网页上的链接),请参阅
C \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#hyperlinks\fP 。

E \fINote:\fP While application mouse modes are enabled (as used by many 
E screen oriented applications), \fBCtrl+Shift+click\fP can be used to 
E override it.
C \fB注意:\fP 虽然启用了应用程序鼠标模式(如许多面向屏幕的应用程序所使用的那样),但可
C 以使用 \fBCtrl+Shift+单击\fP来覆盖它。

  .TP
E \fBHovering files, directories and URLs\fP
C \fB悬停文件、目录和 URL\fP
E The file names and links subject to opening are indicated by underlining 
E when mouse-hovering over them (i.e. when moving the mouse) while the 
E Control key is pressed. The colour used for hovering underlines 
E can be configured with \fBHoverColour\fP. Explicit hyperlinks are displayed 
E in the window title when hovering them; this can be disabled with \fBHoverTitle\fP.
C 在按住 Control 键的同时将鼠标悬停在文件名和链接上(即移动鼠标时)时,将通过下划
C 线指示要打开的文件名和链接。可以使用 \fBHoverColour\fP 配置用于悬停下划线的颜色。将鼠
C 标悬停在窗口标题中时会显示显式超链接;这可以通过 \fBHoverTitle\fP 禁用。

  .SS
E \fBFont zoom\fP
C \fB字体缩放\fP

E The font size can be increased or decreased using the keyboard shortcuts
E \fBCtrl+(keypad-)plus\fP and \fBCtrl+(keypad-)minus\fP, 
E or by holding \fBCtrl\fP while rolling the mouse wheel.
E \fBCtrl+zero\fP or \fBCtrl+middle-mouse click\fP returns the font size 
E to the default.
C 可以使用键盘快捷键 Ctrl+(keypad-)plus 和 Ctrl+(keypad-)minus 或按住 Ctrl 的同时
C 滚动鼠标滚轮来增大或减小字体大小。 Ctrl+0 或 Ctrl+鼠标中键可将字体大小恢复为默
C 认值。
  .br
E \fIShift-coupled window-with-font zooming:\fP
E If Shift is also held while zooming, the window will be resized to scale 
E together with the font, keeping the terminal character size if possible.
E This is not applied to the shifted numeric keypad "0" (which has other 
E meaning) and to the shifted normal (non-keypad) "-" and "+" keys 
E (because the shifted key could have a valid mapping, e.g. Ctrl+_, or the 
E "+" key could be shifted itself already).
C \fBShift-coupled window-with-font zooming:\fP如果在缩放时还按住Shift,窗口将被调整大
C 小以与字体一起缩放,如果可能的话保持终端字符大小。这不适用于移位的数字小键盘"0"
C (具有其他含义)和移位的普通(非键盘)"-"和"+"键(因为移位的键可能具有有效的映
C 射,例如 Ctrl+ _,或者"+"键可以自己移动)。
  .br
E Zooming by keyboard or mouse can be disabled, respectively, with options 
E ZoomShortcuts=no or ZoomMouse=no.
C 可以分别通过选项 ZoomShortcuts=no 或 ZoomMouse=no 禁用通过键盘或鼠标进行缩放。

  .SS
E \fBDrag resize\fP
C \fB拖动调整大小\fP

E The usual windows function to drag on the window border resizes the terminal.
C 通常在窗口边框上拖动的窗口功能会调整终端的大小。
  .br
E \fIShift-coupled font-with-window zooming:\fP
E If Shift is also held while resizing, but Control is not held, the 
E font will be scaled along with the resizing, unless disabled with 
E ZoomFontWithWindow=false (which would help to avoid interference with 
E certain shifted hotkeys configured to resize the window).
C \fBShift 耦合字体窗口缩放:\fP如果在调整大小时也按住 Shift,但没有按住 Control,则字
C 体将随着调整大小一起缩放,除非使用 ZoomFontWithWindow=false 禁用(这将有助于避
C 免干扰某些移位热键配置为调整窗口大小)。
  .br
E Note that due to the different height/width factors, coupled font zooming 
E is not a precise operation.
C 请注意,由于不同的高度/宽度因素,耦合字体缩放不是一个精确的操作。

  .SS
E \fBDPI change\fP
C \fBDPI 变化\fP

E When DPI setting changes (by reconfiguration of display properties 
E "what's on your screen ... smaller/medium/larger" or moving the mintty window 
E between monitors with different DPI settings), mintty adapts its screen 
E size to avoid Windows blurred auto-adaptation. If Shift is also held during 
E the change, the font will be scaled too, roughly maintaining the screen 
E dimensions.
C 当 DPI 设置更改时(通过重新配置显示属性"屏幕上的内容......更小/中/更大"或在具有
C 不同 DPI 设置的显示器之间移动 mintty 窗口),mintty 会调整其屏幕大小以避免
C Windows 模糊自动适应。如果在更改期间还按住 Shift,字体也会缩放,大致保持屏幕尺
C 寸。

  .SS
E \fBFull screen\fP
C \fB全屏\fP

E Full screen mode can be toggled using either the \fBFull Screen\fP command in the 
E menu or either of the \fBAlt+Enter\fP and \fBAlt+F11\fP keyboard shortcuts, 
E or the generic functions of the window title bar.
C 可以使用菜单中的全屏命令或 Alt+Enter 和 Alt+F11 键盘快捷键或窗口标题栏的通用功
C 能来切换全屏模式。

  .SS
E \fBDefault size\fP
C \fB默认尺寸\fP

E If the window has been resized, it can be returned to the default size set in
E the Window pane of the options using the \fBDefault size\fP command in the
E menu or the \fBAlt+F10\fP shortcut.
C 如果窗口已调整大小,则可以使用菜单中的默认大小命令或 \fBAlt+F10\fP 快捷键将其返回到选
C 项的窗口窗格中设置的默认大小。
E \fBShift+Alt+F10\fP also restores the font size to its default.
C \fBShift+Alt+F10\fP 还会将字体大小恢复为默认值。

  .SS
E \fBReset\fP
C \fB重置\fP

E Sometimes a faulty application or printing a binary file will leave the
E terminal in an unusable state. In that case, resetting the terminal's state
E via the \fBReset\fP command in the menu or the \fBAlt+F8\fP keyboard shortcut
E may help.
C 有时,错误的应用程序或打印二进制文件会使终端处于无法使用的状态。在这种情况下,
C 通过菜单中的\fB重置\fP命令或 \fBAlt+F8\fP 键盘快捷键重置终端的状态可能会有所帮助。

  .SS
E \fBScrolling\fP
C \fB回滚\fP

E Mintty has a scrollback buffer that can hold up to 10000 lines in the default
E configuration.
E It can be accessed using the scrollbar, the mouse wheel, or the keyboard.
E Hold the \fBShift\fP key while pressing the \fBUp\fP and \fBDown\fP arrow keys
E to scroll line-by-line or the \fBPageUp\fP and \fBPageDown\fP keys to scroll
E page-by-page.
C Mintty 有一个回滚缓冲区,在默认配置中最多可以容纳 10000 行。可以使用滚动条、鼠
C 标滚轮或键盘访问它。按住 \fBShift\fP 键的同时按\fBUp\fP 和\fBDown\fP 和箭头键可逐行滚动,或按
C \fBPageUp\fP 和 \fBPageDown\fP 键可逐页滚动。
E In \fIscroll mode\fP, the same keys without \fBShift\fP do the same.
E With option \fBKeyFunctions\fP, user-defined keys can be used for scrolling.
C 在\fB滚动模式\fP下,没有 \fBShift\fP 的相同键也做同样的事情。通过选项 
C \fBKeyFunctions\fP,用户定义的键可用于滚动。

E If the alternate screen is active, instead of scrolling in the scrollback 
E buffer, the mouse wheel sends virtual cursor key escape sequences 
E ("mousewheel reporting", roughly corresponds to xterm alternateScroll mode). 
E This causes many applications, for example \fIless\fP, to scroll in an 
E application-specific way (e.g. in the shell history).
C 如果备用屏幕处于活动状态,则鼠标滚轮不会在回滚缓冲区中滚动,而是发送虚拟光标键
C 转义序列("鼠标滚轮报告",大致对应于 xterm 替代滚动模式)。这会导致许多应用程序
C (例如 \fBless\fP)以特定于应用程序的方式(例如在 shell 历史记录中)滚动。
E In both cases (scrollback and application scrolling), the number of lines 
E per mouse notch is taken from Windows system settings, typically 3; 
E this can be overriden by setting \fBLinesPerMouseWheelNotch\fP.
E With setting \fBZoomMouse=false\fP, holding the \fBControl\fP key while 
E moving the mouse wheel scrolls by 1 line.
C 在这两种情况下(回滚和应用程序滚动),每个鼠标槽口的行数取自 Windows 系统设置,
C 通常为 3;这可以通过设置 \fBLinesPerMouseWheelNotch\fP 来覆盖。设置\fBZoomMouse=false\fP 时,
C 按住\fBControl\fP 键的同时移动鼠标滚轮会滚动 1 行。

E Scrollback scrolling can be overridden dynamically to enforce 
E mousewheel reporting in normal screen mode (i.e. not alternate screen) 
E by holding the \fBAlt\fP key additionally. So for example shell history 
E can be scrolled with \fBControl+Alt+mouse-wheel\fP.
C 通过另外按住 \fBAlt\fP 键,可以动态覆盖回滚滚动以在正常屏幕模式(即非交替屏幕)下强制
C 执行鼠标滚轮报告。例如,可以使用 \fBControl+Alt+鼠标滚轮滚动\fP外壳历史记录。

E Note that all modes of mouse operation are overridden by 
E various "mouse tracking" modes enabled by escape sequences.
C 注意,所有鼠标操作模式都被转义序列启用的各种"鼠标跟踪"模式覆盖。

  .SS
E \fBScroll Lock handling\fP
C \fB滚动锁定处理\fP

E The ScrollLock key is one of the most useless keys on typical PC keyboards 
E as it is mostly ignored by software nowadays, and yet has its own LED.
E However, there are two historic features that could be associated with 
E "ScrollLock". One is the VT100 NoScroll key which would hold output 
E via the terminal, the other is a Windows function to switch cursor keys 
E to screen scrolling as still used by the Excel program.
E Mintty provides both features as user-definable functions, in two variants each. 
E Functions are no-scroll and scroll-mode (referring to those two features) 
E which would be reset by any key input, and toggle-no-scroll and 
E toggle-scroll-mode which would switch the respective feature on or off.
E These functions can be attached to any user-assignable function key or 
E special key, including the ScrollLock key.
E Mintty manages the ScrollLock keyboard light to reflect either of these 
E functions activated, trying to decouple the light indication from the 
E ScrollLock key while in a mintty window.
C ScrollLock 键是典型 PC 键盘上最无用的键之一,因为如今它大多被软件忽略,但仍有自
C 己的 LED。但是,有两个历史特征可能与"ScrollLock"相关联。一个是 VT100 NoScroll
C 键,它将通过终端保持输出,另一个是 Windows 功能,可将光标键切换到 Excel 程序仍
C 在使用的屏幕滚动。 Mintty 将这两种功能都提供为用户可定义的功能,每种都有两种变
C 体。功能是无滚动和滚动模式(指这两个功能),可通过任何键输入重置,以及切换无滚
C 动和切换滚动模式,可打开或关闭相应的功能。这些功能可以附加到任何用户可分配的功
C 能键或特殊键,包括 ScrollLock 键。 Mintty 管理 ScrollLock 键盘灯以反映激活的这
C 些功能中的任何一个,试图在 mintty 窗口中将灯指示与 ScrollLock 键分离。

  .SS
E \fBSearching in the text and scrollback buffer\fP
C \fB在文本和回滚缓冲区中搜索\fP

E The \fBSearch\fP menu command and \fBAlt+F3\fP shorcut open a search bar 
E with an input field for a search string. Matches are highlighted in the 
E scrollback buffer. \fBEnter\fP/\fBShift+Enter\fP find the next/previous 
E position of the match and scrolls the scrollback buffer accordingly.
E \fBTab\fP focusses back into the terminal pane of the window.
E The appearance of the search bar and the matching highlight colours can be 
E customized.
C \fB搜索\fP菜单命令和 \fBAlt+F3\fP 快捷键打开一个带有搜索字符串输入字段的搜索栏。匹配项在回
C 滚缓冲区中突出显示。 \fBEnter\fP/\fBShift+Enter\fP 查找匹配的下一个/上一个位置并相应地滚动
C 回滚缓冲区。 \fBTab\fP 聚焦回到窗口的终端窗格。可以自定义搜索栏的外观和匹配的高亮颜色
C 。
  .br
E Matching is case-insensitive and ignores combining characters.
C 匹配不区分大小写并忽略组合字符。

E Shift+cursor-left/right offers another scrolling feature. If prompt lines 
E are marked with scroll markers they navigate to the previous/next prompt, to 
E provide a better orientation among the output of previously invoked commands.
E See the Control Sequences wiki page \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#scroll-markers\fP for details.
C Shift+cursor-left/right 提供另一个滚动功能。如果提示行标有滚动标记,则它们导航
C 到上一个/下一个提示,以在先前调用的命令的输出中提供更好的定位。有关详细信息,请
C 参阅控制序列 wiki 页面
C \fBhttps://github.com/mintty/mintty/wiki/CtrlSeqs#scroll-markers\fP。

  .SS
E \fBFlip screen\fP
C \fB翻转屏幕\fP

E Applications such as editors and file viewers normally use a terminal feature
E called the alternate screen, which is a second screen buffer without scrollback.
E When they exit, they switch back to the primary screen to restore the command
E line as it was before invoking the application.
C 诸如编辑器和文件查看器之类的应用程序通常使用称为备用屏幕的终端功能,它是没有回
C 滚功能的第二个屏幕缓冲区。当他们退出时,他们切换回主屏幕以恢复调用应用程序之前
C 的命令行。

E The \fBFlip Screen\fP menu command and \fBAlt+F12\fP shortcut allow looking
E at the primary screen while the alternate screen is active, and vice versa.
E For example, this allows to refer to past commands while editing a file.
C \fB翻转屏幕\fP菜单命令和 \fBAlt+F12\fP 快捷键允许在备用屏幕处于活动状态时查看主屏幕,反之亦
C 然。例如,这允许在编辑文件时参考过去的命令

  .SS
E \fBSwitching session\fP
C \fB切换会话\fP

E The \fBCtrl+Tab\fP and \fBCtrl+Shift+Tab\fP shortcuts can be used to 
E cycle through mintty windows.
E Minimized windows are skipped unless both \fBCtrl\fP keys are used.
C Ctrl+Tab 和 Ctrl+Shift+Tab 快捷键可用于在 mintty 窗口之间循环。除非同时使用两个
C Ctrl 键,否则会跳过最小化的窗口。

  .SS
E \fBVirtual Tabs\fP
C \fB虚拟标签\fP

E The Virtual Tabs feature provides a list of all running mintty sessions (session switcher) 
E as well as configurable launch parameters for new sessions (session launcher).
E The session list is shown when right-clicking the title bar (if 
E virtual tabs mode is configured or with Ctrl) or ctrl+left-clicking it.
E By default, the list is also shown in the extended context menu (Ctrl+right-click), 
E the mouse button 5 menu, and the menus opened with the Ctrl+Menu key 
E and the Ctrl+Shift+I shortcut (if enabled).
C Virtual Tabs 功能提供了所有正在运行的 mintty 会话(会话切换器)的列表以及新会话
C 的可配置启动参数(会话启动器)。右键单击标题栏(如果配置了虚拟选项卡模式或使用
C Ctrl)或 ctrl+左键单击它时会显示会话列表。默认情况下,该列表还会显示在扩展上下
C 文菜单(Ctrl+右键单击)、鼠标按钮 5 菜单以及使用 Ctrl+Menu 键和 Ctrl+Shift+I 快
C 捷键(如果启用)打开的菜单中。 
E (Menu contents for the various context menu invocations is configurable.)
C (各种上下文菜单调用的菜单内容是可配置的。)
E For configuration, see settings \fBSessionCommands\fP, \fBMenu*\fP, 
E and \fBSessionGeomSync\fP.
E Distinct sets of sessions can be set up with the setting \fB-o Class=...\fP.
C 有关配置,请参阅设置 \fBSessionCommands\fP、\fBMenu*\fP 和\fBSessionGeomSync\fP。
C 可以使用设置 \fB-o Class=...\fP 设置不同的会话集。

E Virtual Tabs can be switched quickly with user-defined key assignments, 
E using user-definable functions switch-[visible-](prev|next).
C 可以使用用户定义的键分配快速切换虚拟选项卡,使用用户定义的功能
C switch-[visible-](prev|next)。

E Since 3.5.1, mintty manages tabs in order to support transparency 
E (avoiding cumulation of opaqueness), hide background tabs from 
E appearing while moving the window, and keep the tabbar consistent 
E in case a tab gets terminated irregularly.
C 从 3.5.1 开始,mintty 管理标签以支持透明度(避免不透明的累积),在移动窗口时隐
C 藏背景标签不出现,并在标签不规则终止的情况下保持标签栏一致。

  .TP
E \fBTabbar\fP
C \fB标签栏\fP
  .br
E With setting \fBTabBar\fP, an interactive tabbar complements the 
E virtual tabs mechanism. (It works like the session switcher available 
E via extended context menu or title bar menu.)
C 通过设置 \fBTabBar\fP,交互式标签栏补充了虚拟标签机制。 (它的工作方式类似于通过扩展
C 上下文菜单或标题栏菜单提供的会话切换器。)
E It is recommended to also set \fBSessionGeomSync=3\fP or higher to 
E achieve a tabbed window behaviour.
C 建议还设置 \fBSessionGeomSync=3\fP 或更高以实现选项卡式窗口行为。

  .SS
E \fBClosing a session\fP
C \fB关闭会话\fP

E Clicking the window's close button, pressing \fBAlt+F4\fP, or choosing
E \fBClose\fP from the window menu sends a \fISIGHUP\fP signal to the process
E running in mintty, which normally causes it to exit.
C 单击窗口的\fB关闭\fP按钮、按 \fBAlt+F4\fP 或从窗口菜单中选择\fB关闭\fP会向在 mintty 中运行的进程
C 发送 SIGHUP 信号,这通常会导致它退出。

E That signal can be ignored, though, in which case the program might have to be
E forced to terminate by sending a \fISIGKILL\fP signal instead.
E This can be done by holding down \fBShift\fP when using the close button,
E shortcut or menu item.
C 但是,该信号可以被忽略,在这种情况下,程序可能不得不通过发送 \fBSIGKILL\fP 信号来强制
C 终止。这可以通过在使用关闭按钮、快捷方式或菜单项时按住 \fBShift\fP 键来完成。

  .SS
E \fBTerminal Break\fP
C \fB断线\fP

E A traditional BRK event on a serial terminal connection can be simulated.
E The Break is available in the extended context menu and it can be mapped 
E to the Break key (or other user-defined key) by configuration.
E Note, however, that a BRK can be ignored by configuration of the terminal 
E device (pty) or can be ignored by an application by catching the SIGINT signal.
E For more forceful interruption of the terminal client application, see the 
E Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#terminating-the-foreground-program\fP.
C 可以模拟串行终端连接上的传统 BRK 事件。 Break 在扩展上下文菜单中可用,它可以通
C 过配置映射到 Break 键(或其他用户定义的键)。但是请注意,BRK 可以被终端设备
C (pty) 的配置忽略,或者可以被应用程序通过捕获 SIGINT 信号忽略。要更有效地中断终
C 端客户端应用程序,请参阅 Tips wiki 页面
C \fIhttps://github.com/mintty/mintty/wiki/Tips#termination-the-foreground-program\fP。

E Note that Ctrl+C is often configured to raise a SIGINT signal. However, 
E this is not a terminal feature and can also be reconfigured (stty), so 
E in fact BRK and Ctrl+C are inherently different functions.
C 请注意,Ctrl+C 通常配置为引发 SIGINT 信号。但是,这不是终端功能,也可以重新配置
C (stty),所以实际上BRK和Ctrl+C本质上是不同的功能。

  .SS
E \fBMouse tracking\fP
C \fB鼠标追踪\fP

E When an application activates mouse tracking, mouse events are sent to the
E application rather than being treated as window events.
C 当应用程序激活鼠标跟踪时,鼠标事件被发送到应用程序而不是被视为窗口事件。
E This is indicated by the mouse pointer changing from an \fBI\fP shape to an
E arrow.
C 这通过鼠标指针从 \fBI\fP 形变为箭头来表示。
E Holding down \fBShift\fP overrides mouse tracking mode and sends mouse
E events to the window instead, so that e.g. text can be selected and the 
E context menu can be accessed.
C 按住 \fBShift\fP 会覆盖鼠标跟踪模式并将鼠标事件发送到窗口,例如可以选择文本并可以访问上下文菜单。

E Mintty supports 5-button mice, handling mouse buttons 4 / 5 like 
E Alt+click-left / right in most mouse modes.
C Mintty 支持 5 键鼠标,在大多数鼠标模式下像 Alt+click-left/right 一样处理鼠标按
C 钮 4 / 5。

  .SS
E \fBAlt codes\fP
C \fBALt代码\fP

E The Windows Alt+Numpad method for entering character codes is supported,
E whereby the Alt key has to be held while entering the character code.
E Only the first key has to be on the numpad; subsequent digits can be entered
E both on the numpad or the main part of the keyboard.
C 支持 Windows Alt+Numpad 输入字符代码的方法,输入字符代码时必须按住 Alt 键。只有
C 第一个键必须在小键盘上;随后的数字可以在小键盘或主键盘输入。

E If the first key is the \(aq\fB+\fP\(aq on the numpad, the code is interpreted as
E hexadecimal, whereby digits A through F can be entered using the letter keys.
E If the first key is a zero, the code is interpreted as octal.
E If the first key is any other digit from 1 to 9, the code is interpreted as
E decimal.
C 如果第一个键是小键盘上的\fB"+"\fP,则代码被解释为十六进制,因此可以使用字母键输入数字
C A 到 F。如果第一个键是零,则代码被解释为八进制。如果第一个键是从 1 到 9 的任何
C 其他数字,则代码被解释为十进制。

E For UTF-8 and other Unicode encodings such as GB18030, the entered code is 
E interpreted as a Unicode codepoint and encoded accordingly before it is sent.
E For other encodings, the entered code is sent as is. 
E If it doesn't fit into one byte, it is sent as multiple bytes, with 
E the most significant non-zero byte first.
C 对于 UTF-8 和其他 Unicode 编码(例如 GB18030),输入的代码被解释为 Unicode 代码
C 点并在发送之前进行相应的编码。对于其他编码,输入的代码按原样发送。如果它不适合
C 一个字节,则将其作为多个字节发送,最重要的非零字节在前。

  .SS
E \fBKeyboard shortcuts\fP
C \fB键盘快捷键\fP

E This section gives an overview of all the keyboard shortcuts.
E See also the final subsection on user-defined shortcuts.
C 本节概述了所有键盘快捷键。另请参阅有关用户定义的快捷方式的最后一小节。

  .TP
E \fBAlt modifier key\fP
C \fBAlt修饰键\fP
E Note that \fBAlt+\fP in this description refers to the left Alt key. 
C 请注意,本说明中的 Alt+ 指的是左 Alt 键。
E For keyboards that have two Alt keys, the right Alt key is not generally 
E supported as an Alt modifier. The reason is that it cannot be safely 
E distinguished from the AltGr key of international keyboards which is used 
E to generate specific additional characters in various keyboard layouts 
E and can therefore not be used as a generic modifier.
C 对于具有两个 Alt 键的键盘,通常不支持将右 Alt 键用作 Alt 修饰符。原因是它不能安
C 全地与国际键盘的 AltGr 键区分开来,后者用于在各种键盘布局中生成特定的附加字符,因
C 此不能用作通用修饰符。

  .TP
E \fBScrollback and Selection via keyboard\fP
C \fB键盘回滚和选择\fP
  .br
E - \fBShift+Up\fP: Line up
C - \fBShift+Up\fP:向上一行
  .br
E - \fBShift+Down\fP: Line down
C - \fBShift+Down\fP:向下一行
  .br
E - \fBShift+PgUp\fP: Page up
C - \fBShift+PgUp\fP:向上翻页
  .br
E - \fBShift+PgDn\fP: Page down
C - \fBShift+PgDn\fP:向下翻页
  .br
E - \fBShift+Home\fP: Top
C - \fBShift+Home\fP:顶部
  .br
E - \fBShift+End\fP: Bottom
C - \fBShift+End\fP:底部
  .br
E - \fBAlt+F3\fP: Search
C - \fBAlt+F3\fP:搜索
  .br
E - \fBShift+cursor-left\fP: Go to previous scroll marker (e.g. in prompt)
C - \fBShift+cursor\fP-left:转到上一个滚动标记(例如在提示中)
  .br
E - \fBShift+cursor-right\fP: Go to next scroll marker (e.g. in prompt)
C - \fBShift+cursor-right\fP:转到下一个滚动标记(例如在提示中)
  .br
E - \fBShift+middle-keypad-key\fP: Enter keyboard selecting mode
C - \fBShift+middle-keypad-key\fP:进入键盘选择模式

E Note: The modifier can be configured with setting \fBScrollMod\fP.
C \fB注意:\fP 修改器可以通过设置 \fBScrollMod\fP 来配置。

E Note: In \fIscroll mode\fP, up/down/top/bottom scrolling works without \fBShift\fP.
C \fB注意:\fP 在\fB滚动模式\fP下,上/下/上/下滚动无需 \fBShift\fP。

E Keyboard selecting mode: \fBAlt\fP sets rectangular selection.
E Once keyboard selecting mode is entered, the following keys are applied:
C 键盘选择模式:\fBAlt\fP 设置矩形选择。进入键盘选择模式后,将应用以下键:
  .br
E - \fBUp\fP, \fBDown\fP, \fBUp\fP, \fBUp\fP: Modify selection
C - \fBUp\fP, \fBDown\fP, \fBUp\fP, \fBUp\fP:修改选择
  .br
E - \fBPgUp\fP, \fBPgDn\fP, \fBHome\fP, \fBEnd\fP: Scroll/Modify selection
C - \fBPgUp\fP, \fBPgDn\fP, \fBHome\fP, \fBEnd\fP:滚动/修改选择
  .br
E - \fB[Alt+]middle-keypad-key\fP: Restart [rectangular] selection
C - \fB[Alt+]middle-keypad-key\fP: 重启[矩形]选择
  .br
E - \fBInsert\fP or \fBEnter\fP: Copy selection and exit selection mode
C - \fBInsert\fP or \fBEnter\fP:复制选择并退出选择模式
  .br
E - \fBDelete\fP or \fBESC\fP: Exit selection mode
C - \fBDelete\fP or \fBESC\fP:退出选择模式

  .TP
E \fBCopy and paste\fP
C \fB复制和粘贴\fP
  .br
E - \fBCtrl+Ins\fP: Copy
C - \fBCtrl+Ins\fP:复制
  .br
E - \fBShift+Ins\fP: Paste
C - \fBShift+Ins\fP:粘贴
  .br
E - \fBCtrl+Shift+Ins\fP: Copy and paste
C - \fBCtrl+Shift+Ins\fP:复制和粘贴

  .TP
E \fBWindow commands\fP
C \fB窗口命令\fP
  .br
E - \fBAlt+F2\fP: New (clone window at current size); see notes below
C - \fBAlt+F2\fP:新建(以当前大小克隆窗口);见下面的注释
  .br
E - \fBShift+Alt+F2\fP: New (clone window at configured size); see notes below
C - \fBShift+Alt+F2\fP:新建(以配置的大小克隆窗口);见下面的注释
  .br
E - \fBAlt+F3\fP: Search (in scrollback buffer)
C - \fBAlt+F3\fP:搜索(在回滚缓冲区中)
  .br
E - \fBAlt+F4\fP: Close
C - \fBAlt+F4\fP:关闭
  .br
E - \fBAlt+F8\fP: Reset
C - \fBAlt+F8\fP:重置
  .br
E - \fBAlt+F10\fP: Default terminal size (rows/columns)
C - \fBAlt+F10\fP:默认终端大小(行/列)
  .br
E - \fBShift+Alt+F10\fP: Default terminal size (rows/columns) and font size
C - \fBShift+Alt+F10\fP:默认终端大小(行/列)和字体大小
  .br
E - \fBAlt+F11\fP or \fBAlt+Enter\fP: Toggle full screen
C - \fBAlt+F11 或 Alt+Enter\fP:切换全屏
  .br
E - \fBShift+Alt+F11\fP or \fBShift+Alt+Enter\fP: Toggle full screen and zoom font
E (Note that due to the different height/width factors, this is not a precise operation)
C - \fBShift+Alt+F11 或 Shift+Alt+Enter\fP:切换全屏和缩放字体(注意,由于高度/宽度因素不同,这不是一个精确的操作)
  .br
E - \fBAlt+F12\fP: Flip screen
C - \fBAlt+F12\fP:翻转屏幕
  .br
E - \fBAlt+Space\fP: Window menu
C - \fBAlt+Space\fP:窗口菜单
  .br
E - \fBCtrl+Tab\fP: Next visible window (as sorted by creation time)
C - \fBCtrl+Tab\fP:下一个可见窗口(按创建时间排序)
  .br
E - \fBCtrl+Shift+Tab\fP: Previous visible window (as sorted by creation time)
C - \fBCtrl+Shift+Tab\fP:上一个可见窗口(按创建时间排序)
  .br
E - \fBCtrl+Ctrl+Tab\fP: Next window (as sorted by creation time)
C - \fBCtrl+Ctrl+Tab\fP:下一个窗口(按创建时间排序)
  .br
E - \fBCtrl+Ctrl+Shift+Tab\fP: Previous window (as sorted by creation time)
C - \fBCtrl+Ctrl+Shift+Tab\fP:上一个窗口(按创建时间排序)
  .br
E - \fBCtrl+Alt+mouse-click/drag\fP: Move window
C - \fBCtrl+Alt+鼠标单击/拖动\fP:移动窗口

E Multi-monitor selection support: Alt+F2 (or user-defined "new" key 
E as defined with option \fBKeyFunctions\fP) will only spawn a new window 
E after F2 has been released. While the key is being held, the target monitor 
E can be selected with a sequence of numeric keypad keys:
C 多显示器选择支持:Alt+F2(或使用选项 \fBKeyFunctions\fP 定义的用户定义的"新"键)只会
C 在 F2 被释放后生成一个新窗口。按住该键时,可以使用一系列数字键盘键选择目标显示
C 器:
  .br
E - cursor-up/down/left/right (8/2/4/6) navigate the target focus to the 
E respective neighbour in the monitor grid; 
  .br
E - the diagonal keys (7/9/1/3) combine two directions respectively; 
C - 光标上/下/左/右 (8/2/4/6) 将目标焦点导航到监视器网格中的相应邻居;
  .br
E - the central key (5) sets the target focus to the Windows "primary" monitor; 
C - 对角键(7/9/1/3)分别组合两个方向;
  .br
E - the Ins key (0) or Del resets the focus to the current monitor.
C - 中央键 (5) 将目标焦点设置为 Windows"主要"监视器;
  .br
E These navigation controls can be applied repeatedly to select a monitor further away.
C 这些导航控件可以重复应用以选择更远的监视器。

E Note that a heuristic algorithm is used, based on the size of the smallest 
E monitor attached to the system, so the target may not always be selected 
E as expected if multiple monitors of different size are available or 
E monitors are not arranged in a regular grid.
E Note also that this feature is overridden by option \fBSessionGeomSync\fP.
C 请注意,使用启发式算法,基于连接到系统的最小监视器的大小,因此如果有多个不同大
C 小的监视器可用或监视器未按规则网格排列,则可能无法始终按预期选择目标。另请注意
C ,此功能被选项 \fBSessionGeomSync\fP 覆盖。

  .TP
E \fBFont zoom\fP
C \fB字体缩放\fP
  .br
E - \fBCtrl+(keypad-)plus\fP: Zoom font in
C - \fBCtrl+(keypad-)plus\fP:放大字体
  .br
E - \fBCtrl+(keypad-)minus\fP: Zoom font out
C - \fBCtrl+(keypad-)minus\fP:缩小字体
  .br
E - \fBCtrl+Shift+(keypad-)plus\fP: Zoom font and window in
C - \fBCtrl+Shift+(keypad-)plus\fP:放大字体和窗口
  .br
E - \fBCtrl+Shift+(keypad-)minus\fP: Zoom font and window out
C - \fBCtrl+Shift+(keypad-)minus\fP:缩放字体和窗口
  .br
E - \fBCtrl+zero\fP: Back to configured font size
C - \fBCtrl+zero\fP:返回到配置的字体大小

  .TP
E \fBCtrl+Shift+letter shortcuts\fP
C \fBCtrl+Shift+字母快捷键\fP

E An alternative set of shortcuts for clipboard and window commands using
E \fBCtrl+Shift+letter\fP combinations is available.  These can be enabled on the
E Keys pane of the Options dialog.
C 使用 \fBCtrl+Shift+字母\fP组合的剪贴板和窗口命令的替代快捷键集可用。这些可以在"选项"
C 对话框的"键盘"窗格中启用。
  .br
E - \fBCtrl+Shift+A\fP: Select all
C - \fBCtrl+Shift+A\fP:全选
  .br
E - \fBCtrl+Shift+C\fP: Copy
C - \fBCtrl+Shift+C\fP:复制
  .br
E - \fBCtrl+Shift+V\fP: Paste
C - \fBCtrl+Shift+V\fP:粘贴
  .br
E - \fBCtrl+Shift+N\fP: New
C - \fBCtrl+Shift+N\fP:新建
  .br
E - \fBCtrl+Shift+H\fP: Search scrollback buffer
C - \fBCtrl+Shift+H\fP:搜索回滚缓冲区
  .br
E - \fBCtrl+Shift+W\fP: Close
C - \fBCtrl+Shift+W\fP:关闭
  .br
E - \fBCtrl+Shift+R\fP: Reset
C - \fBCtrl+Shift+R\fP:重置
  .br
E - \fBCtrl+Shift+D\fP: Default terminal size (rows/columns)
C - \fBCtrl+Shift+D\fP:默认终端大小(行/列)
  .br
E - \fBCtrl+Shift+F\fP: Full screen (not zooming font despite Shift)
C - \fBCtrl+Shift+F\fP:全屏(尽管 Shift 不缩放字体)
  .br
E - \fBCtrl+Shift+S\fP: Flip screen
C - \fBCtrl+Shift+S\fP:翻转屏幕
  .br
E - \fBCtrl+Shift+O\fP: Toggle scrollbar
C - \fBCtrl+Shift+O\fP:切换滚动条
  .br
E - \fBCtrl+Shift+P\fP: Cycle text pointer (cursor) styles
C - \fBCtrl+Shift+P\fP:循环文本指针(光标)样式
  .br
E - \fBCtrl+Shift+T\fP: Cycle or tune transparency levels
C - \fBCtrl+Shift+T\fP:循环或调整透明度级别

E Ctrl+Shift+T cycles through transparency levels in steps, whenever 
E Ctrl+Shift+T is released. Alternatively, while Ctrl+Shift+T is held down, 
E the navigation keys on the numeric keypad can be used for further fine-tuning:
C 每当松开 Ctrl+Shift+T 时,Ctrl+Shift+T 就会逐步循环显示透明度级别。或者,当按住
C Ctrl+Shift+T 时,数字小键盘上的导航键可用于进一步微调:
  .br
E Up/Dn to increase/decrease, PgUp/PgDn for steps, Del/Ins for no/max transparency, 
E End for highest preconfigured transparency, Home for previous value.
C Up/Dn 增加/减少,PgUp/PgDn 为步长,Del/Ins 为无/最大透明度,End 为最高预配置透
C 明度,Home 为先前值。
  .br
E If OpaqueWhenFocused is set, opaqueness is temporarily disabled to 
E provide visible feedback for the changes.
C 如果设置了 OpaqueWhenFocused,则暂时禁用不透明度以提供更改的可见反馈。

  .TP
E \fBUser-defined shortcuts\fP
C \fB用户定义的快捷键\fP
E Function keys, special keys, and Ctrl+Shift+key combinations 
E can be redefined to generate user-defined input or invoke functions.
E See option \fBKeyFunctions\fP for details.
C 可以重新定义功能键、特殊键和 Ctrl+Shift+key 组合键以生成用户定义的输入或调用函数。
C 有关详细信息,请参阅选项 \fBKeyFunctions\fP。

  .TP
E \fBStartup hotkey ("quake mode")\fP
C 启动热键("地震模式")
E In a Windows shortcut (desktop or Start menu), a "Shortcut key" with 
E modifiers can be defined as a system hotkey to start an application or 
E bring it to the front. Mintty detects if activated via hotkey and will 
E use the same hotkey to minimize itself in turn, unless inhibited by 
E shortcut override mode.
C 在 Windows 快捷方式(桌面或开始菜单)中,可以将带有修饰符的"快捷方式键"定义为启
C 动应用程序或将其置于最前面的系统热键。 Mintty 检测是否通过热键激活,并将使用相
C 同的热键依次最小化自身,除非被快捷方式覆盖模式禁止。

  .SS
E \fBEmbedding graphics in terminal output\fP
C \fB在终端输出中嵌入图形\fP

E The Sixel graphics support feature facilitates a range of applications 
E that integrate graphic images in the terminal, animated graphics, and even 
E video and interactive gaming applications.
C Sixel 图形支持功能促进了一系列应用程序,这些应用程序在终端中集成了图形图像、动
C 画图形,甚至视频和交互式游戏应用程序。

E An example of the benefit of this feature is the output of `gnuplot` 
E with the command
C 此功能的好处的一个示例是带有命令的"gnuplot"的输出
  .br
E GNUTERM=sixel gnuplot -e "splot [x=-3:3] [y=-3:3] sin(x) * cos(y)"

E \fINote:\fP The number of Sixel images displayed on the screen is limited 
E in order to prevent Windows handle resource exhaustion.
C \fB注意:\fP 屏幕上显示的 Sixel 图像数量是有限的,以防止 Windows 处理资源耗尽。

  .TP
E \fBImage support\fP
C \fB图像支持\fP
E In addition to the legacy Sixel feature, mintty supports graphic image display 
E (using iTerm2 controls). Image formats supported comprise
E PNG, JPEG, GIF, TIFF, BMP, Exif.
C 除了传统的 Sixel 功能外,mintty 还支持图形图像显示(使用 iTerm2 控件)。支持的
C 图像格式包括 PNG、JPEG、GIF、TIFF、BMP、Exif。

  .SS
E \fBVector graphics terminal emulation\fP
C \fB矢量图形终端仿真\fP

E Mintty supports Tektronix 4014 mode. It switches to Tek emulation on the 
E xterm sequence DECSET 38 (`\\e[?38h`). It is suggested to adjust the window 
E size to the Tektronix 4010 resolution and aspect ratio before 
E (`echo -en "\\e[4;780;1024t"`). The \fBtek\fP utility available in 
E the mintty utils repository \fIhttps://github.com/mintty/utils\fP helps to 
E enter Tek mode and set up some environment information properly.
C Mintty 支持泰克 4014 模式。它在 xterm 序列 DECSET 38 ('\e[?38h') 上切换到 Tek
C 仿真。建议在 (‘echo -en "\e[4;780;1024t"‘) 之前将窗口大小调整为泰克 4010 的分辨
C 率和纵横比。 mintty utils 存储库 \fIhttps://github.com/mintty/utils\fP 中提供的 \fBtek\fP
C 实用程序有助于进入 Tek 模式并正确设置一些环境信息。

E While in Tek mode, the context menu provides the Tektronix mode functions 
E RESET (like xterm), PAGE (minor reset), and COPY ("hard" copy to image file).
C 在 Tek 模式下,上下文菜单提供 Tektronix 模式功能 RESET(如 xterm)、PAGE(次要
C 重置)和 COPY("硬"复制到图像文件)。

E While in Tek mode, the OSC 50 control sequence changes the Tek font.
E Tek mode text output supports Unicode.
C 在 Tek 模式下,OSC 50 控制序列会更改 Tek 字体。 Tek 模式文本输出支持 Unicode。

  .SS
E \fBEmoji display support\fP
C \fB表情符号显示支持\fP

E Mintty supports display of emojis as defined by Unicode using 
E emoji presentation, emoji style variation and emoji sequences.
E The option \fBEmojis\fP can choose among sets of emoji graphics if 
E deployed in a mintty configuration directory.
E See the Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#emojis\fP 
E about deployment of emoji graphics for mintty.
C Mintty 支持使用表情符号呈现、表情符号样式变化和表情符号序列来显示 Unicode 定义
C 的表情符号。如果部署在 mintty 配置目录中,则 \fBEmojis\fP 选项可以在一组表情符号图形
C 中进行选择。请参阅提示 wiki 页面
C \fIhttps://github.com/mintty/mintty/wiki/Tips#emojis\fP,了解有关 mintty 表情符号图形
C 的部署。

  .SS
E \fBHTML Screen dump\fP
C \fBHTML 屏幕转储\fP

E Mintty can create an HTML representation of the screen, from the extended 
E context menu or using the respective xterm Media Copy escape sequence.
E The HTML page is created in the start directory of mintty and uses a 
E filename pattern of \fBmintty.date_time.html\fP. Screen layout and 
E character attributes are reproduced as closely as possible.
E If there is a current selection, the selected text will be included in the 
E HTML dump, otherwise the current screen view is used. In the latter case, 
E also a background image or pattern is reproduced, if its filename was 
E configured as a relative path name using POSIX syntax (forward slashes).
C Mintty 可以从扩展的上下文菜单或使用相应的 xterm Media Copy 转义序列创建屏幕的
C HTML 表示。 HTML 页面创建在 mintty 的起始目录中,并使用\fBmintty.date_time.html\fP
C 的文件名模式。屏幕布局和字符属性被尽可能地再现。如果存在当前选择,则所选文本将
C 包含在 HTML 转储中,否则使用当前屏幕视图。在后一种情况下,如果使用 POSIX 语法(
C 正斜杠)将其文件名配置为相对路径名,则还会复制背景图像或图案。

E If Shift is held, the function also opens the HTML page.
C 如果按住 Shift,该函数还会打开 HTML 页面。

E Filename pattern and location are configurable (setting \fBSaveFilename\fP).
C 文件名模式和位置是可配置的(设置 SaveFilename)。

  .SS
E \fBAudio support\fP
C \fB音频支持\fP

E Mintty supports audio output for the warning bell (^G character), 
E margin bell, a private escape sequence for explicit output of a sound file, 
E and the DECPS tone playing escape sequence.
C Mintty 支持警告铃声(^G 字符)、边距铃声、用于显式输出声音文件的私有转义序列以
C 及播放转义序列的 DECPS 音调的音频输出。
E A number of settings are available to configure the bell sound, also in 
E conjunction with the bell volume escape sequence (each volume can be 
E assigned a distinct sound file).
C 许多设置可用于配置铃声,还可以与铃声音量转义序列结合使用(每个音量都可以分配一
C 个不同的声音文件)。
E Sound files for the bell sound and the audio sound output can be deployed 
E in a resource subdirectory \fIsounds\fP or addressed by pathname.
E Tone playing by DECPS is supported via the \fIlibao\fP audio output library 
E if installed. Setting \fBPlayTone\fP can preselect a tone style.
C 铃声和音频声音输出的
C 声音文件可以部署在资源子目录 \fBsounds\fP 中或通过路径名寻址。如果安装了\fBlibao\fP 音频输
C 出库,则支持 DECPS 播放的音调。设置 \fBPlayTone\fP 可以预选一种音色风格。

  .SS
E \fBImage dump of terminal contents\fP
C \fB终端内容的图像转储\fP

E Mintty can save the visual contents of the terminal screen in an image file 
E \fBmintty.date_time.png\fP. This is supported from the context menu or via 
E user-definable key functions. The current terminal dimensions are used for 
E the image size except in Tek mode, where one of the original Tek sizes is 
E used (depending on whether 12-bit pixel addresses are in effect).
C Mintty 可以将终端屏幕的视觉内容保存在一个图像文件 \fBmintty.date_time.png\fP 中。这是
C 通过上下文菜单或通过用户可定义的键功能支持的。当前终端尺寸用于图像尺寸,但在
C Tek 模式下使用原始 Tek 尺寸之一(取决于 12 位像素地址是否有效)。

E Filename pattern and location are configurable (setting \fBSaveFilename\fP).
C 文件名模式和位置是可配置的(设置 \fBSaveFilename\fP)。

  .SS
E \fBDiagnostic support\fP
C \fB诊断支持\fP

  .TP
E \fBScreen logging\fP
C \fB屏幕记录\fP
E A couple of options are available to enable logging initially 
E (\fBLog=...\fP or \fB-l ...\fP on the command line), or to specify 
E a log file name for later logging (\fBLog=...\fP combined with \fBLogging=no\fP, 
E or \fB--logfile ...\fP on the command line).
E In either case, logging can be toggled from the extended context menu.
C 有几个选项可用于最初启用日志记录(在命令行上为 Log=... 或 -l ...),或指定一个
C 日志文件名以供以后记录(Log=... 与 Logging=no 相结合,或 --logfile ... 在命令行
C 上)。在任何一种情况下,都可以从扩展的上下文菜单中切换日志记录。

  .TP
E \fBCharacter information display\fP
C \fB字符信息显示\fP
E Diagnostic display of current character information can be toggled 
E from the extended context menu.
C 当前字符信息的诊断显示可以从扩展的上下文菜单中切换。
  .br
E \fIUnicode character codes\fP at the current cursor position will then be displayed 
E in the window title bar. (Note that mintty may precompose a combining character 
E sequence into a combined character which is then displayed.)
C 当前光标位置的 \fIUnicode 字符代码\fP将显示在窗口标题栏中。 (注意 mintty 可以将组合
C 字符序列预先组合成组合字符,然后显示。)
  .br
E \fIUnicode character names\fP will be included in the display if the \fBunicode-ucd\fP 
E package is installed in \fI/usr/share\fP (or the file \fIcharnames.txt\fP generated by
E the mintty script \fIsrc/mknames\fP is installed in the mintty resource subfolder \fIinfo\fP).
C 如果 \fBunicode-ucd\fP 包安装在 \fI/usr/share\fP 中(或者 mintty 脚本\fIsrc/mknames\fP 生成的文
C 件 \fIcharnames.txt\fP 安装在 mintty 资源子文件夹信息中),则显示中将包含 \fIUnicode 字
C 符名称\fP。
  .br
E \fIEmoji sequence "short names"\fP will be indicated if Emojis display is enabled.
C 如果启用 Emojis 显示,将指示 \fIEmoji 序列"短名称"\fP。
  .br
E Note that the "normal" window title setting sequence 
E and the character information output simply overwrite each other.
C 请注意,"正常"窗口标题设置顺序和字符信息输出只是相互覆盖。

  .SH
E CONFIGURATION
C 配置

E Mintty has a graphical Options dialog that can be reached via the context menu
E or the window menu.  It has the following action buttons:
C Mintty 有一个图形选项对话框,可以通过上下文菜单或窗口菜单进入。它有以下操作按钮
E :
  .br
E - \fBCancel\fP: discards changes.
C - \fB取消\fP: 丢弃更改。
  .br
E - \fBSave\fP: applies and saves changes and closes the dialog.
C - \fB保存\fP: 应用和保存更改并关闭对话框。
  .br
E - \fBApply\fP: applies changes to the current instance of mintty 
C - \fB应用\fP: 将更改应用于 mintty 的当前实例,但不将更改保存到配置文件中。
E   but does not save them to the configuration file. So using \fBApply\fP 
E   then \fBCancel\fP, local changes can be applied (and tested) without 
E   affecting further instances of mintty.
C 因此,使用 \fBApply\fP then \fBCancel\fP,可以应用(并测试)局部更改,而不会影响 mintty 以后
C 的使用。

E In configuration files, settings are stored as \fINAME\fP=\fIVALUE\fP pairs,
E with one per line.  By default, they are read from any file of 
E \fI/etc/minttyrc\fP, \fI$APPDATA/mintty/config\fP, 
E \fI~/.config/mintty/config\fP, \fI~/.minttyrc\fP, in this order.
E Additional configuration files can be specified using the
E \fB-c\fP/\fB--config\fP or \fB-C\fP/\fB--loadconfig\fP command line options.
E These are read in order after the default config files, 
E with settings in later files overriding those in earlier ones.
E Configuration changes are saved to the last writable file 
E read by default or \fI~/.minttyrc\fP if none is given, 
E or (with precedence) to a configuration file specified with 
E \fB-c\fP/\fB--config\fP or \fB--configdir\fP.
E Individual settings can also be specified on the command line using the 
E \fB-o\fP/\fB--option\fP.
C 在配置文件中,设置被存储为 每行一个\fBNAME\fP=\fIVALUE\fP 。默认情况下,它们从
C \fI/etc/minttyrc\fP, \fI$APPDATA/mintty/config\fP, \fB~/.config/mintty/config\fP, \fB~/.minttyrc\fP中顺
C 序取。可以使用\fB-c/--confi\fBg 或\fB-C/--loadconfig\fP 命令行选项指定其他配置文件。在默
C 认配置文件之后按顺序读取这些文件,后面文件中的设置覆盖前面文件中的设置。配置更
C 改保存到最后读取的可写文件或 \fI~/.minttyrc\fP。或者指定为\fB-c/--config\fP 或\fB--configdir\fP 
C 指定的配置文件。还可以使用\fB-o/--option\fP 在命令行上指定单个设置。

E \fINote:\fP Many string values in the config files, especially those 
E referring to file names or Windows items, are \fBUnicode-enabled\fP, 
E meaning they are expected to be UTF-8-encoded in the configuration 
E file independently of the encoding the terminal runs in; as a fallback, 
E if the configuration value is not valid UTF-8, it is interpreted in 
E the system ANSI encoding.
E (This does not apply to the same configuration settings when given on the 
E command-line.)
C \fB注意:\fP  配置文件中的许多字符串值,特别是那些引用文件名或 Windows 项的字符串值,是
C \fB支持 unicode\fP 的,这意味着它们在配置文件中被期望以 utf-8编码,与终端运行的编码无
C 关; 如果配置值不是有效的 UTF-8,它将在系统编码 ANSI 中进行解释。(这不适用于在命
C 令行上给出的相同配置设置。)
  .br
E Unicode-enabled settings: BellFile, BellFile2..7, ThemeFile, Background, 
E Title, ExitTitle, Icon, Log, SaveFilename, 
E Language, Font, Font1..10, FontSample, FontChoice, 
E TekFont, CopyAsRTFFont, 
E SearchBar, Printer, Answerback, SixelClipChars, 
E Class, AppID, AppName, AppLaunchCmd, 
E DropCommands, ExitCommands, UserCommands, SessionCommands, TaskCommands, 
E KeyFunctions, SysMenuFunctions, CtxMenuFunctions, UserCommandsPath.
C 支持 unicode 的设置: BellFile,BellFile2。7,ThemeFile,Background,Title,
C ExitTitle,Icon,Log,SaveFilename,Language,Font,Font1..10,FontSample,
C FontChoice,TekFont,CopyAsRTFFont,SearchBar,Printer,Answerback,
C SixelClipChars,Class,AppID,AppName,applechcmd,DropCommands,ExitCommands,
C UserCommands,SessionCommands,commands,KeyFunctions,SysMenuFunctions,
C CtxMenuFunctions,UserCommandsPath.

E Be careful when running multiple instances of mintty. If options are saved 
E from different instances, or the config file is edited manually, 
E options can obviously be overwritten; if older mintty versions are run 
E (e.g. from cygwin and msys sharing the same home directory), options 
E may even get dropped from the configuration file; mintty versions since 
E 261 preserve unknown options and comment lines.
C 在运行 mintty 的多个实例时要小心。如果选项是从不同的实例中保存的,或者配置文件
C 是手动编辑的,选项显然可以被覆盖; 如果是运行旧的 mintty 版本(例如从 cygwin 和
C msys 共享同一个主目录) ,选项甚至可能从配置文件中删除; mintty 版本自261保留未知
C 的选项和注释行。

E Additional resource files are used for colour schemes (option \fBThemeFile\fP, 
E subdirectory \fIthemes\fP), wave files (option \fBBellFile\fP, subdirectory \fIsounds\fP), 
E and localization translation files (option \fBLanguage\fP, subdirectory \fIlang\fP) 
E within the mintty resource directories \fI/usr/share/mintty\fP, 
E \fI$APPDATA/mintty\fP, \fI~/.config/mintty\fP, \fI~/.mintty\fP, 
E or as specified with command line option \fB--configdir\fP.
C 其他资源文件中的配色方案(选项 \fBThemeFile\fP、子目录\fIthemes\fP)、 wave 文件(选项
C \fBBellFile\fP、子目录\fIsounds\fP)和本地化翻译文件(选项 \fBLanguage\fP、子目录 \fBlang\fP),使用mintty
C 资源目录 \fI/usr/share/mintty\fP, \fI$APPDATA/mintty\fP, \fB~/.config/mintty\fP, \fB~/.mintty\fP,或者
C 用命令行选项指定的 \fBconfigdir\fP。

E The following sections explain the settings on each pane of the options
E dialog, followed by settings that do not appear in the dialog.
E For each setting, its name in the config file is shown in parentheses,
E along with its default value.
C 以下部分将解释选项对话框的每个窗格上的设置,然后是未出现在对话框中的设置。对于
C 每个设置,配置文件中的名称以及默认值都显示在括号中。

E If there is only a name in parentheses, there is currently 
E no GUI configuration facility for that option 
E (see also Hidden settings below).
C 如果括号中只有一个名称,那么当前没有该选项的 GUI 配置工具(也请参阅下面的隐藏设
C 置)。

  .SS
E \fBLooks\fP
C \fB外观\fP
E Settings affecting mintty's appearance.
C 影响 mintty 外观的设置。

  .TP
E \fBColours\fP
C \fB颜色\fP
E Clicking on one of the buttons here opens the colour selection dialog.
C 点击这里的一个按钮打开颜色选择对话框。
  .br
E In the settings (config file or command-line options), colours are 
E represented as comma-separated RGB triples with decimal 8-bit values 
E ranging from 0 to 255. X-style hexadecimal colour specifications such 
E as #RRGGBB, rgb:RR/GG/BB or rgb:RRRR/GGGG/BBBB, 
E cmy:C.C/M.M/Y.Y or cmyk:C.C/M.M/Y.Y/K.K can be used as well.
E Also X11 color names are supported.
C 在设置(配置文件或命令行选项)中,颜色被表示为:
C 逗号分隔的 RGB 三元组,其十进制8位值范围为0到255;
C X 型十六进制颜色规范,如 #RRGGBB,
C rgb: RR/GG/BB 或 rgb: rrr/GGGG/BBBB,
C cmy: C.C/M.M/Y.Y 或 cmyk: C.C/M.M/Y.Y/K.K 。
C 还支持 x11颜色名称。
  .br
E - \fBForeground text colour\fP (ForegroundColour=191,191,191)
C - \fB前景文字颜色\fP(ForegroundColour=191,191,191)
  .br
E - \fBBackground colour\fP (BackgroundColour=0,0,0)
C -\fB背景颜色\fP(BackgroundColour=0,0,0)
  .br
E - \fBCursor colour\fP (CursorColour=191,191,191)
C -\fB光标颜色\fP(CursorColour=191,191,191)
  .br
E - \fBUnderline, Strikeout, Overline colour\fP (UnderlineColour=-1)
C -\fB下划线、删除线、套线颜色\fP(UnderlineColour=-1)
  .br
E - \fBCtrl+mouse-move hovering colour\fP (HoverColour=-1)
C - \fBCtrl+鼠标移动悬停颜色\fP(HoverColour=-1)

E - \fBTheme\fP (ThemeFile=): 
E The popup menu offers theme files as stored in a resource subdirectory 
E \fIthemes\fP for selection as a colour scheme.
E The option can also be set to a filename (like D:/.../solarized-light.minttyrc).
C - \fB主题\fP(ThemeFile=) : 弹出菜单提供存储在资源子目录主题中的\fIthemes\fP,用于选择配
C   色方案。该选项还可以设置为文件名(如 d:/.../solarized-light.Minttyrc).

E The field can also be used as a drag-and-drop target for colour schemes 
E downloaded from the Color Scheme Configurator, or for theme files from the web.
E See the Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#using-colour-schemes-themes\fP 
E about this mechanism.
C 该字段还可以用作从 Color Scheme Configurator 下载的配色方案或从 web 上下载的主
C 题文件的拖放目标。关于这个机制,请参阅 Tips wiki
C \fIhttps://github.com/mintty/mintty/wiki/Tips#using-colour-schemes-themes\fP。

E Note: Mintty also provides the command-line script \fBmintheme\fP which can 
E display the themes available in the mintty configuration directories or 
E activate one of them in the current mintty window.
C \fB注意:\fP  Mintty 还提供了命令行脚本 \fBmintheme\fP,它可以显示 Mintty 配置目录中可用的主
C 题,或者在当前 Mintty 窗口中激活其中一个主题。

  .TP
E \fBTransparency\fP (Transparency=off)
C \fB透明度\fP(透明度=关闭)
E Window transparency level, with the following choices:
C 窗口透明度水平,具有以下选择:-关闭-低-中-高-玻璃
  .br
  - \fBOff\fP
  .br
  - \fBLow\fP
  .br
  - \fBMedium\fP
  .br
  - \fBHigh\fP
  .br
  - \fBGlass\fP

E The \fBGlass\fP option is deprecated as it was only supported in Windows Vista 
E and only if glass colour brightness was set black in the Windows control panel.
C 不推荐使用 \fBGlass\fP 选项,因为它只在 Windows Vista 中支持,而且只有在 Windows 控制
C 面板中将玻璃颜色亮度设置为黑色时才支持。

E Numeric transparency values ranging from 4 to 254 can be specified in config
E files or on the command line.  (Values below 4 are multiplied by 16, for
E backward compatibility reasons.)
E The Options dialog also offers a numeric input option with slider buttons. 
E Use Shift or Control to adjust their step width.
C 可以在配置文件或命令行中指定从4到254的数值透明度值。(由于向下兼容的原因,小于4
C 的数值乘以16。)选项对话框还提供了一个带有滑块按钮的数字输入选项。使用 Shift 或
C Control 来调整他们的步幅宽度。

E Since 3.5.1, when overlaying multiple tabs (SessionGeomSync modes), 
E mintty manages tab window transparency to avoid cumulation of opaqueness.
C 自3.5.1以来,当叠加多个选项卡(sessiongeosync 模式)时,mintty 管理选项卡窗口透明
C 度,以避免不透明性的累积。

  .TP
E \fBOpaque when focused\fP (OpaqueWhenFocused=no)
C \fB聚焦时不透明\fP(OpaqueWhenFocused=no)
E Enable to make the window opaque when it is active (to avoid background
E distractions when working in it).
C 启用当窗口处于活动状态时使其不透明(在工作时避免背景干扰)。

  .TP
E \fBCursor\fP (CursorType=line)
C \fB光标\fP(CursorType=竖线)
E The following cursor types are available:
C 下列游标类型可用:竖线-行-块-框(不在选项对话框中)-下划线
  .br
  - \fBLine\fP
  .br
  - \fBBlock\fP
  .br
  - \fBBox\fP \fI(not in Options dialog)\fP
  .br
  - \fBUnderscore\fP

E The line cursor is displayed with the width set in the Accessibility Options
E control panel / Ease of Access Center, mouse panel or Optimize visual display.
C 在可访问性选项控制面板/访问中心、鼠标面板或优化视觉显示中,设置竖线光标显示宽度
C 。

  .TP
E \fBCursor blink\fP (CursorBlinks=yes)
C \fB光标闪烁\fP(CursorBlinks=yes)
E If enabled, the cursor blinks at the rate set in the Keyboard control panel.
C 如果启用,光标会按照键盘控制面板中设置的速率闪烁。

  .TP
E \fBVisible space indication\fP (DispSpace=0, DispClear=0, DispTab=0)
C \fB可见空间指示\fP(DispSpace=0,DispClear=0,DispTab=0)
E These settings enable visual indication of blank space. 
C 这些设置可以直观地显示空白区域。
E Setting \fBDispSpace\fP affects explicitly written space, 
C DispSpace 显式影响写入空间,
E setting \fBDispClear\fP affects unwritten/cleared character cells, 
C DispClear 影响未写入/清除的字符单元格,
E setting \fBDispTab\fP affects TAB positions over clear space.
C DispTab 影响清除空间上的 TAB 位置。
E Suggested settings are 6 or 14.
C 建议的设置是6或14。
E The settings are bitmasks, adding the following values:
C 这些设置是位掩码,添加以下值:
  .br
E - \fB1\fP bold indication of space
C - \fB1\fP 空格粗体指示
  .br
E - \fB2\fP dimmed indication of space
C - \fB2\fP 空格暗淡指示
  .br
E - \fB4\fP indication of space in UnderlineColour if configured
C - \fB4\fP 空格指示如果配置
  .br
E - \fB8\fP brighten background of clear space (DispClear only)
C - \fB8\fP 清晰空间背景亮度(仅限于 clear)

  .SS
E \fBText\fP
C \fB文本\fP
E Settings controlling text display.
C 控制文本显示的文本设置。

  .TP
E \fBFont selection\fP
C \fB字体选择\fP
E Clicking on the \fBSelect\fP button opens a dialog where the font and its
E properties can be chosen.  Font styles other than \fBBold\fP are ignored.
E In the config file, this corresponds to the following entries:
C 单击\fB选择\fP按钮将打开一个对话框,可以在其中选择字体及其属性。忽略\fB粗体\fP以外的字体样式。在配置文件中,这对应于以下条目:
  .br
E - \fBFont\fP (Font=Lucida Console); only monospace fonts are listed
C - \fBFont\fP (Font=Lucida Console) ; 只列出了单空字体
  .br
E - \fBFont style\fP (FontWeight=400, FontIsBold=no)
C - \fBFont style\fP (FontWeight=400,FontIsBold=no)
  .br
E - \fBSize\fP (FontHeight=9)
E - \fBSize\fP (FontHeight=9)
  .br
E The font selection dialog also offers an \fBApply\fP button for 
E convenient testing how the selected font looks. Its function is the same 
E as the \fBApply\fP button of the Options dialog.
C 字体选择对话框还提供了一个 \fB应用\fP 按钮,方便测试所选字体的外观。它的功能与选项对
C 话框的\fB应用\fP按钮相同。

E Further settings can be given in the config file:
C 进一步的设置可以在配置文件中给出:

E - \fBFont boldness\fP (FontWeight=400): This is an implicit value after 
E selecting a font in the font selection menu, or can be specified in the 
E config file or on the command line for font selection. Typical weights 
E are \fBNormal\fP/\fBRegular\fP (FontWeight=400) and \fBBold\fP (FontWeight=700 
E or FontIsBold=yes) but if a font family has a different scheme or more than 
E 2 font weights, the weight value can be used for more specific selection.
E If a font family has no bold weight but boldness was requested, mintty 
E does not adhere to this scheme but enforces bold font selection; however, 
E in this case the bold attribute may not be effective.
C - \fB字体粗细\fP (FontWeight=400) : 这是在字体选择菜单中选择字体后的隐式值,或者可以
C 在配置文件中或在选择字体的命令行中指定。典型的权重是\fBNormal\fP/\fBRegular\fP
C (FontWeight=400)和 \fBBold\fP (FontWeight=700或 FontIsBold=yes) ,但是如果一个
C 字体族有不同的方案或者超过2个字体权重,权重值可以用于更具体的选择。如果字体族
C 没有粗体,但是需要粗体,mintty 不遵循这个方案,但是强制选择粗体字; 然而,在这
C 种情况下粗体属性可能不起作用。

E - \fBAlternative fonts\fP (Font1= ... Font10= , Font1Weight= ... Font10Weight=):
E With these settings, up to 10 alternative fonts (and optionally weights) 
E can be configured which would then be selectable via ECMA-48 SGR character attributes 
E (see Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#text-attributes-and-rendering\fP).
C - \fB可选字体\fP(Font1=... Font10=,Font1Weight=... Font10Weight=) : 通过这些设
C  置,可以配置多达10种可选字体(和可选粗细) ,然后可以通过 ec-48 SGR 字符属性选择
C  这些字体(参见
C \fIhttps://github.com/mintty/mintty/wiki/Tips#text-attributes-and-rendering\fP 维基页面)。
  .br
E They can also be used as secondary fonts with option \fBFontChoice\fP.
C 它们也可以作为次要字体使用,选项为 \fBFontChoice\fP。
  .br
E \fINote:\fP Font10 has a special preference property; if it is not configured, 
E mintty will try to activate it anyway, looking for an installed 
E Fraktur or Blackletter font (ECMA-48 "Gothic").
C \fB注意:\fP  font10有一个特殊的属性; 如果没有配置它,mintty 将尝试激活它,查找已安装的
C Fraktur 或 Blackletter 字体(ECMA-48" Gothic")。
  .br
E \fINote:\fP The control sequence for alternative font 1 overrides the identical 
E control sequence to select the VGA character set, which would thus be disabled. 
E Configuring alternative font 1 is therefore discouraged.
C \fB注意:\fP  替代字体1的控制序列覆盖了相同的控制序列来选择 VGA 字符集,因此将被禁用。因
C 此,配置替代字体1是不鼓励的。

E - \fBChoice of script-specific secondary fonts\fP (FontChoice=):
E With this setting, alternative fonts can be specified as secondary font 
E for specific scripts.
E The value is a series of semicolon-separated, colon-combined 
E pairs of script name and alternative font number.
E Script names are as specified in the Unicode file Scripts.txt, listed 
E in \fIhttps://en.wikipedia.org/wiki/Script_(Unicode)\fP column "Alias".
E (The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.)
C - \fB选择脚本特定的辅助字体\fP(FontChoice=) : 
C 使用此设置,可以指定替代字体作为特定脚本的辅助字体。该值是一系列以分号分隔、冒号
C 组合的脚本名称对和可选字体号。脚本名称在 Unicode 文件 Scripts.txt 中指定,在
C \fIhttps://en.wikipedia.org/wiki/script_(Unicode)\fP列" Alias"中列出。(如果分隔符后面
C 跟着反斜杠、换行符和可选的空格缩进,定义列表可以分为多行。)
  .br
E A special name is \fBPictoSymbols\fP to assign an alternative font to 
E ranges of pictographic symbols from Unicode blocks matching 
E Arrows, Mathematical Operators, Technical, Enclosed Alphanumerics, 
E Pictographs, Control Pictures, Optical, Box Drawing, Miscellaneous.*Symbols, 
E Block Elements, Geometric Shapes, Dingbats, Tiles, Cards, Emoticons, 
E Transport, Alchemical, Chess.
C 一个特殊的名称是 \fBPictoSymbols\fP(象形符号),指定一个替代字体范围的象形符号从 Unicode 块匹配箭头,
C 数学运算符,技术,封闭字母数字,象形文字,控制图片,光学,盒子绘图,杂项。符号,
C 块元素,Unicode几何图形列表,瓷砖,卡片,表情符号,交通工具,炼金术,象棋。
  .br
E Another special name is \fBCJK\fP which comprises Han, Hangul, 
E Katakana, Hiragana, Bopomofo, Kanbun, 
E Halfwidth and Fullwidth Forms (except Latin). A later more specific entry 
E will override an earlier one (see CJK example below).
C 另一个特殊名称是 \fBCJK\fP,包括汉语、 Katakana、 Hiragana、 Bopomofo、 Kanbun、全形和
C 半形(拉丁语除外)。后面更具体的条目将覆盖前面的条目(参见下面的 CJK 示例)。
  .br
E Finally, special name \fBPrivate\fP covers the Private Use ranges, which are 
E often used for additional icon symbols (e.g. by "Nerd Fonts" or "Powerline" fonts).
C 最后,特殊名称 \fBPrivate\fP 涵盖了 Private Use 范围,这些范围通常用于额外的图标符号(
C 例如" Nerd Fonts"或" Powerline"字体)。
  .br
E In addition to Unicode scripts, also Unicode blocks can be used 
E to specify a secondary font, by a "|" prefix to the block name, with block 
E specifications preceding over the more general script specifications.
C 除了 Unicode 脚本,Unicode 块也可以用于指定辅助字体,通过块名称的" |"前缀,在更
C 一般的脚本规范之前有块规范。

  .br
E Examples:
C 例子: 
  .br
    \fBFontChoice=Hebrew:6;Arabic:7;CJK:5;Han:8;Hangul:9\fP
  .br
    \fBFont6=David\fP
  .br
    \fBFont7=Simplified Arabic Fixed\fP
  .br
    \fBFont5=Malgun Gothic\fP
  .br
    \fBFont8=FangSong\fP
  .br
    \fBFont9=MingLiU\fP
  .br
    \fBFontChoice=PictoSymbols:2;Private:3\fP
  .br
    \fBFont2=DejaVu Sans Mono\fP
  .br
    \fBFont3=MesloLGS NF\fP
  .br
    \fBFontChoice=Greek:3;|Greek Extended:4\fP

E - \fBFont sample text\fP (FontSample=):
E This hidden setting overrides the text for the "Sample" box in the Font chooser dialog.
C - 字体示例文本(FontSample=) : 
C 这个设置替换字体对话框 中"示例"框的文本。

E - \fBShow "hidden" fonts\fP (ShowHiddenFonts=no):
E This hidden setting enables display of monospace fonts in the font selection 
E menu even if they are marked to Hide in the Windows Font settings (from the 
E Control Panel \(em Fonts folder).
C - \fB显示隐藏字体\fP(ShowHiddenFonts=no) : 这个隐藏设置允许在字体选择菜单中显示单空
C   间字体,即使这些字体被标记为在 Windows 字体设置中隐藏(在控制面板ー字体文件夹中
C   )。

E - \fBConfigure font chooser\fP (FontMenu=-1):
C - \fB配置字体选择器\fP(FontMenu=-1) : 
E This hidden setting selects and tunes the font chooser dialog element.
C 这个隐藏设置选择和调整字体选择器对话框元素。
E Value 1 selects the Windows system font chooser unmodified;
C 值1选择未修改的 Windows 系统字体选择器; 
E value 2 enables font chooser localization,
C 值2启用字体选择器定位,
E adding value 4 (to 6 or 14) enables horizontal item scaling 
E (making space for localized labels),
C 值4(到6或14)启用水平项缩放(为本地化标签留出空间) ,
E adding value 8 (to 10 or 14) enables item and size adjustments,
C 值8(到10或14)启用项和大小调整,
E value -1 enables all tuning;
C 值-1启用所有调整; 
E value 0 selects a built-in inline font chooser.
C 值0选择内置的字体内嵌选择器。

  .TP
E \fBText lines\fP (UnderlineManual=false)
C \fB文本线\fP(UnderlineManual=false)
E By enabling this hidden setting, text attributes underline, doubly underline, 
E strikeout and overline are enforced to be drawn manually. 
E The default is to use Windows font variants for strikeout and for 
E underline, unless mintty detects that the underlined font would not 
E display properly.
C 通过启用此隐藏设置,可以强制手动绘制文本属性下划线、双下划线、删除线和透明线。默
C 认情况下,除非 mintty 检测到带下划线的字体无法正确显示,否则将对删除线和下划线使
C 用 Windows 字体变体。
E Note that font smoothing may be affected by Windows-generated underline modes.
C 注意,字体平滑可能会受到 windows 生成的下划线模式的影响。

  .TP
E \fBEmoji support\fP (Emojis=none)
C \fB表情符号支持\fP(表情符号=无)
E With this option, mintty emoji support is enabled and the emojis style 
E is chosen. Mintty will match output for valid emoji sequences, 
E presentation forms and emoji style selectors.
C 有了这个选项,mintty 表情符号支持被启用,并且表情符号风格被选择。将匹配输出有效
C 的表情符号序列,表现形式和表情符号风格选择器。
E (Note that up to cygwin 2.10 it may be useful to set \fBCharwidth=unicode\fP in addition.)
C (请注意,在 cygwin 2.10以下,可以另外设置 \fBCharwidth=unicode\fP。)

E Supported styles are:
C 支持的样式是:
  .br
E - \fBnone\fP Emoji support disabled; symbols are taken from the font.
C - \fBnone\fP    : 表情符号支持禁用; 符号使用字体。
  .br
E - \fBemojione\fP Use EmojiOne graphics.
C - \fBemojione\fP: 使用 EmojiOne 图形。
  .br
E - \fBnoto\fP Use graphics from the Noto Emoji font.
C - \fBnoto\fP    : 使用 Noto 表情符号字体中的图形。
  .br
E - \fBapple\fP Use Apple emoji graphics.
C - \fBapple\fP   : 使用苹果表情符号。
  .br
E - \fBgoogle\fP Use Google emoji graphics.
C - \fBgoogle\fP  : 使用谷歌表情图形。
  .br
E - \fBtwitter\fP Use Twitter emoji graphics.
C - \fBtwitter\fP : 使用推特表情符号图形。
  .br
E - \fBfacebook\fP Use Facebook emoji graphics.
C - \fBfacebook\fP: 使用脸书表情符号图形。
  .br
E - \fBsamsung\fP Use Samsung emoji graphics.
C - \fBsamsung\fP : 使用三星表情符号。
  .br
E - \fBwindows\fP Use Windows emoji graphics.
C - \fBwindows\fP : 使用 Windows 表情符号图形。
  .br
E - \fBzoom\fP Use Zoom emoji graphics.
C - \fBzoom\fP    : 使用zoom表情图形。

E Note that all style options only work if the respective emoji graphics repository 
E is deployed in a mintty resource directory, subdirectory \fIemojis\fP.
C 注意,所有样式选项只有在各自的 emoji 图形存储库部署在 mintty 资源目录(子目录
C \fIemoji\fP)中时才起作用。
E See the Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#emojis\fP 
E for details.
C 详细信息请参阅\fBhttps://github.com/mintty/mintty/wiki/Tips#emojis\fP 的万维网页面。

  .TP
E \fBEmoji placement\fP (EmojiPlacement=stretch)
C \fB表情符号显示方式\fP(EmojiPlacement=stretch)
E Emojis are displayed in the rectangular character cell group determined 
E by the cumulated width of the emoji sequence characters. The following 
E options are provided to tune their display:
C 表情符号显示在矩形字符单元组中,该单元组由表情符号序列字符的累积宽度决定。提供了
C 以下选项来调整它们的显示:
  .br
E - \fBstretch\fP Emojis are scaled to fit in their display area.
C - \fBstretch\fP :表情符号被缩放以适应其显示区域。
  .br
E - \fBalign\fP Emojis are aligned in their display area.
C - \fBalign\fP   :表情符号在显示区域对齐。
  .br
E - \fBmiddle\fP Emojis are centered in their display area.
C - \fBmiddle\fP  :表情符号位于显示区域的中央。
  .br
E - \fBfull\fP Emojis are full-size with original aspect ratio;
E note that they may overlap into the next character(s).
C - \fBfull\fP    :表情符是完整的并号保持原始的长宽比; 注意它们可能会重叠到下一个字符。

  .TP
E \fBShow bold as font\fP (BoldAsFont=no)
C \fB以字体显示粗体\fP(BoldAsFont=no)
E This option sets the preferred rendering of the ANSI bold (or 'intense') 
E text attribute to use a bold-style font; where a suitable bold variant of the 
E selected font (that has the same width as the base font) is available, 
E that is used; otherwise, the bolding is simulated by rendering the text 
E twice with a one-pixel offset ('overstrike').
C 此选项设置 ANSI 粗体(或"intense")文本属性的首选呈现方式,以使用粗体样式的字体;
C 如果可以使用选定字体的合适粗体变体(与基本字体具有相同的宽度) ,则使用粗体; 否则
C ,使用一个像素偏移量(" overstrike")呈现文本两次,以模拟粗体。
  .br
E (Corresponds roughly to the xterm resource \fBallowBoldFonts\fP.)
C (大致相当于 xterm resource \fBallowBoldFonts\fP.)

E This option is not fully independent. 
C 此选项不是完全独立的。
E If both BoldAsFont and BoldAsColour are true, both display methods are combined where applicable.
C 如果 BoldAsFont 和 BoldAsColour 都为 true,则两种显示方法将在适用的地方组合在一起。
E If both are false, xterm default behaviour is applied.
C 如果两者都为 false,则应用 xterm 默认行为。
E See \fBBold Behaviour\fP for an overview.
C 请参阅\fB粗体\fP行为的概述。

  .TP
E \fBShow bold as colour\fP (BoldAsColour=yes)
C \fB以颜色显示粗体\fP(BoldAsColour=yes)
E This option sets the preferred rendering of the ANSI bold (or 'intense') 
E text attribute to use a different colour, usually with increased brightness;
E it maps ANSI colours 0..7 (unless selected with the palette colour escape sequences) 
E to their bright variants 8..15, and the default colour to a brightened variant. 
E Rendering of other colours is not affected.
C 此选项设置 ANSI 粗体(或‘ intense’)文本属性,以使用不同的颜色(通常是高亮); 它映射
C ANSI 颜色0..7(除非选择了调色板颜色转义序列) ,以明亮的变种8..15,默认颜色为亮化
C 变体。其他颜色的渲染不受影响。
  .br
E (Corresponds largely to the xterm resource \fBboldColors\fP.)
C (主要对应于 xterm 资源 \fBboldColors\fP。)

E This option is not fully independent. 
C 此选项不是完全独立的。
E If both BoldAsColour and BoldAsFont are true, both display methods are combined where applicable.
C 如果 BoldAsColour 和 BoldAsFont 都为 true,则两种显示方法将在适用的地方组合在一
C 起。
E If both are false, xterm default behaviour is applied.
C 如果两者都为 false,则应用 xterm 默认行为。
E See \fBBold Behaviour\fP for an overview.
C 请参阅\fB粗体\fP行为的概述。

  .TP
E \fBShow bold like xterm default\fP
C \fB像 xterm 默认一样显示粗体\fP
E With this interactive option, you can choose xterm default boldening behaviour 
E by switching both bold as font and colour off. It can be switched off by 
E switching one of the other options on.
C 使用这个交互式选项,您可以通过切换粗体和关闭颜色来选择 xterm 默认的加粗行为。可
C 以通过打开其他选项之一来关闭它。

  .TP
E \fBBold substitution colour\fP (BoldColour=)
C \fB加粗的替换颜色\fP(BoldColour=)
E This hidden option sets a colour to be used to render the bold attribute of 
E text that would otherwise have the default foreground colour, overriding 
E other bold rendering; it is only applied if option \fBBoldAsColour\fP is true.
E The bold substitution colour can also be set, modified, enabled or disabled 
E with the respective xterm OSC control sequences.
C 这个隐藏选项设置了一个颜色,用于渲染文本的粗体属性,否则会有默认的前景色,覆盖其
C 他粗体渲染; 只有在选项 \fBBoldAsColour\fP 为 true 时才应用该颜色。粗体替换颜色也可以通
C 过相应的 xterm OSC 控制序列设置、修改、启用或禁用。
  .br
E (Corresponds to the xterm resources \fBcolorBD\fP and \fBcolorBDMode\fP.)
C (对应于 xterm resources \fBcolorBD\fP 和 \fBcolorBDMode\fP.)

  .TP
E \fBBlink substitution colour\fP (BlinkColour=)
C \fB闪烁替换颜色\fP(BlinkColour=)
E This hidden option sets a colour to be used to render the blink attribute of 
E text, overriding real blinking.
C 这个隐藏选项设置一个颜色用于呈现文本的 blink 属性,覆盖真实闪烁。
E The blink substitution colour can also be set, modified, enabled or disabled 
E with the respective xterm OSC control sequences.
C 还可以使用相应的 xterm OSC 控制序列设置、修改、启用或禁用瞬目替换颜色。
  .br
E (Corresponds to the xterm resources \fBcolorBL\fP and \fBcolorBLMode\fP.)
C (对应于 xterm resources \fBcolorBL\fP 和 \fBcolorBLMode\fP.)

  .TP
E \fBBold as special background\fP (BoldAsRainbowSparkles=false)
C \fB粗体为特殊背景\fP(BoldAsRainbowSparkles=false)
E This hidden option displays the bold attribute by underlaying special 
E background. Overrides BoldAsFont. This is a fun option, use at your own risk.
C 这个隐藏选项通过在特殊背景下显示粗体属性。覆盖 BoldAsFont。这是一个有趣的选择,
C 使用风险自负。

  .TP
E \fBNote: Bold Behaviour\fP
C \fB注意:  粗体行为\fP
E When the bold text attribute is set, mintty distinguishes three classes of colours:
C 当设置粗体文本属性时,mintty 区分三类颜色:
  .br
E - \fBDefault\fP: The default terminal foreground colour.
C - \fBDefault\fP : 默认的终端前景色。
  .br
E - \fBANSI-8\fP: The ANSI colours 0..7 (used for SGR 30..37).
C - \fBANSI-8\fP  : ANSI 颜色0..7(用于 SGR 30..37).
  .br
E - \fBExtended\fP: True colours and the rest of the 256 colours palette.
C - \fBExtened\fP : 真彩色和256种颜色调色板。
  .br

E The colour classes are affected by the bold text attribute as follows:
C 颜色类受粗体文本属性的影响如下:
  .br
E - Extended colours are always shown with a boldened font only.
C - Extended : 总是显示为加粗的字体。
  .br
E - When both BoldAsFont and BoldAsColour are disabled, mintty engages a mode
E similar to the xterm default behaviour: ANSI-8 is displayed with a bold font and
E a different colour, Default colour only uses a bold font.
C - 当 BoldAsFont 和 BoldAsColour 都被禁用时,mintty 启动一个类似于 xterm 默认行为
C   的模式: ansi-8显示为粗体字和不同的颜色,默认颜色只使用粗体字。
  .br
E - Otherwise, Default and ANSI-8 colours are affected by 
E BoldAsFont and BoldAsColour independently, such that it is possible to 
E choose only bold font, or only different colour, or both.
C - 否则,「default」及「 ANSI-8」的颜色会分别受到 BoldAsFont 及 BoldAsColour 的影
C   响,因此可以只选择粗体字,或只选择不同的颜色,或同时选择两者。
  .br
E - Note that Default bold display can be overridden by a BoldColour setting.
C - 请注意,默认粗体显示可以被粗体颜色设置覆盖。

  .TP
E \fBAllow blinking\fP (AllowBlinking=no)
C \fB允许闪烁\fP(AllowBlinking=no)
E When text blinking is disabled, as it is by default, the blink attribute is
E displayed as a bold background colour instead.
C 当禁用文本闪烁时,blink 属性将显示为粗体背景颜色。

  .TP
E \fBFont smoothing\fP (FontSmoothing=default)
C \fB字体平滑\fP(FontSmoothing= default)
E Select the amount of font smoothing in font rendering from the following choices:
C 从以下选项中选择字体渲染中的字体平滑量:
  .br
E - \fBDefault\fP: Use Windows setting.
C - \fBDefault\fP: 使用 Windows 设置。
  .br
E - \fBNone\fP: With all the jaggies.
C - \fBNone\fP: 不光滑
  .br
E - \fBPartial\fP: Greyscale anti-aliasing.
C - \fBPartial\fP: Greyscale 抗锯齿
  .br
E - \fBFull\fP: Subpixel anti-aliasing ("ClearType").
C - \fBFull\fP:  亚像素抗锯齿(" ClearType")。

E Note that font smoothing may be affected by some Windows-generated 
E font attributes; see UnderlineManual.
C 注意,字体平滑可能会受到一些 windows 生成的字体属性的影响; 参见 UnderlineManual
C 。

  .TP
E \fBFont rendering\fP (FontRender=uniscribe)
C \fB字体渲染\fP(fontrander=uniscribe)
E Select the rendering system used for text display:
C 选择用于文本显示的呈现系统:
  .br
E - \fBtextout\fP: Use the Windows ExtTextOut API.
C - \fBtextout\fP: 使用 Windows ExtTextOut API。
  .br
E - \fBuniscribe\fP: Use the Windows Uniscribe API.
C - \fBUniscribe\fP: 使用 Windows Uniscribe API。

  .TP
E \fBLigatures support\fP
C \fB连字支持\fP
E These options affect support for ligatures.
C 这些选项影响对连字的支持。
E They are not capable of disabling ligatures, however, as those are 
E applied by Windows font handling. Setting \fIFontRender=textout\fP 
E disables Uniscribe, including ligatures support.
C 但是,它们不能禁用连字,因为这些是由 Windows 字体处理应用的。设置
C \fBfontrander=textout\fP 禁用 Uniscribe,包括连字支持。

E - \fBInteractive Ligatures support\fP (LigaturesSupport=0):
C - \fB交互式连字支持\fP(LigaturesSupport=0) : 
E By default, ligatures, as supported by the selected font, are rendered 
E if they are output to the terminal in one chunk. When this option is 
E set=1, mintty redisplays the left part of the line whenever a character 
E is output, so ligatures are also supported while being input.
E With LigaturesSupport=2, mintty also redisplays the previous cursor line 
E after the cursor is moved.
C 0: 默认,如果连字被输出到终端的一个块中,那么所选字体所支持的连字将被呈现。
C 1: 每当输出一个字符时,mintty 都会重新显示行的左侧部分,因此在输入时也支持连字。
C 2: mintty 还会在移动光标后重新显示前一个光标行。

E - \fBLigatures supported\fP (Ligatures=1):
C - \fB支持连字\fP(Ligatures=1) : 
E This setting can affect the set of ligatures applied, as supported by the 
E selected font.
C 这个设置会影响选定字体支持的连字集。
E When this option is set=1, the default set of ligatures is applied.
E With a value greater than 1, additional ligatures are enabled, e.g. 
E turning "<-", "->", "<--", "-->" into arrows, and "<=", ">=" into 
E less/greater or equal symbols. Note the ambiguity of ligature transformation 
E as e.g. "<=" could as well be meant to be an arrow. There is currently 
E no mechanism to affect ligature transformation in more detail.
C 此选项设置为=1时,将应用默认的连字集。如果值大于1,则启用其他连字,例如将" <-"
C 、"->"、" <-"、"-->"转换为箭头,以及将" <="、" >="转换为较小/更大或相等的符
C 号。请注意连字转换的模糊性,例如" <="也可以表示为箭头。目前还没有更详细的影响结
C 扎转变的机制。

  .TP
E \fBLocale\fP (Locale=)
C \fB语言环境\fP(Locale=)
E The locale setting consists of a lowercase two-letter or three-letter language
E code followed by a two-letter country code, for instance \fBen_US\fP or
E \fBzh_CN\fP.  The Windows default system and user locales are shown in the
E drop-down list for this setting.  Alternatively, the language-neutral "C"
E locale can be selected.
C 区域设置由小写的两个字母或三个字母的语言代码和两个字母的国家代码组成,例如
C \fBen_us\fP 或 \fBzh_cn\fP。此设置的下拉列表中显示 Windows 默认系统和用户区域
C 设置。或者,可以选择与语言无关的" c"语言环境。

E If no locale is set here, which is the default, mintty uses the locale and
E character set specified via the environment variables \fILC_ALL\fP,
E \fILC_CTYPE\fP or \fILANG\fP.
C 如果这里没有设置区域设置,即缺省值,mintty 使用通过环境变量 \fBLC_ALL\fP、\fBLC_CTYPE\fP 或
C \fBLANG\fP 指定的区域设置和字符集。

E The major purpose of setting \fBLocale\fP, as far as the terminal is 
E concerned, is to enable setting \fBCharset\fP. Therefore, after revision 
E of locale handling in mintty 3.4.1, mintty restrains itself to setting 
E the LC_CTYPE category of the locale mechanism if possible and not 
E overwrite other categories if they are set in the environment.
E In addition, however, if Locale is set, mintty also sets the LANG variable.
C 就终端而言,设置语言环境\fBLocale\fP,的主要目的是启用 \fBCharset\fP 设置。因此,在 mintty 3.4.1中对
C 现场处理进行修改之后,mintty 限制自己在可能的情况下设置现场机制的 LC_ctype 类
C 别,而不改写在环境中设置的其他类别。此外,如果设置了语言环境,mintty 也会设置
C LANG 变量。

E If you prefer basic locale setup for all categories to be affected by 
E the LC_CTYPE locale, whether setting Locale is used or not, it is 
E suggested to add the following to the shell startup scripts:
C 如果您希望为所有类别设置基本的区域设置来受到 LC_ctype 区域设置的影响,无论是否
C 使用设置区域设置,建议向 shell 启动脚本添加以下内容: 
  .br
E 	export LANG="${LC_ALL:-${LC_CTYPE:-$LANG}}"

E Until mintty 3.4.0 or with option OldLocale set, if the locale option 
E is set, however, it would override any environment variable setting:
E \fILC_ALL\fP and the \fILC_*\fP variables for specific locale categories 
E are cleared, while \fILANG\fP is set according to the selected locale 
E and character set.
C 在 mintty 3.4.0或带有选项 OldLocale 设置之前,如果设置了语言环境选项,它将覆盖任
C 何语言环境设置: 清除特定语言环境类别的 \fBLC_all\fP 和 \fBLC_*\fP 变量,而\fBLANG\fP 根据选定
C 的语言环境和字符集设置。
E This meant, while not strictly necessary, that also locale variables 
E unrelated to the terminal character set (e.g. LC_MESSAGES) are cleared 
E to avoid confusion.
C 这意味着,虽然并非严格必要,但也要清除与终端字符集无关的区域设置变量(例如 LC _
C messages) ,以避免混淆。

  .TP
E \fBCharacter set\fP (Charset=)
C \fB字符集\fP(Charset=)
E The character set to be used for encoding input and decoding output.
E If no locale is set, this setting is ignored.
C 用于编码输入和解码输出的字符集。如果没有设置区域设置,则忽略此设置。

E By default, the locale selected by options \fBLocale\fP and \fBCharset\fP 
E also determines the character width assumptions used for screen rendering. 
E Exceptions are enabled by some settings, particularly \fBCharwidth\fP,
E and some control sequences; for an overview see
E (\fIhttps://github.com/mintty/mintty/wiki/Tips#character-width\fP).
C 默认情况下,由选项 \fBLocale\fP 和 \fBCharset\fP 选择的 \fBLocale\fP 也确定用于屏幕呈现的字符宽度
C 假设。一些设置,特别是 \fBCharwidth\fP,和一些控制序列可以启用异常; 有关概览,请参阅
C \fIhttps://github.com/mintty/mintty/wiki/tips#character-width\fP。

E \fINote:\fP
E Setting \fBLocale\fP and combining this with an empty or (Default) 
E \fBCharset\fP setting results in an implicit character encoding 
E as defined by the respective locale without suffix, 
E which is not UTF-8 in most cases and may lead to unexpected behaviour.
C \fB注意:\fP  
C 设置区域\fBLocale\fP 并将其与空的或(默认的)字符集\fBCharset\fP 设置相结合,会导致隐式的字符编码/
C 字符集,由各自的区域设置定义,没有后缀,这在大多数情况下不是 UTF-8,并可能导致意
C 外的行为。

E \fINote:\fP
C \fB注意:\fP  
E When changing the character set interactively in the Options dialog, 
E it takes effect immediately for text input and ouput, but it does not 
E affect the processes already running in mintty.
C 当在选项对话框中交互地改变字符集时,它对文本输入和输出立即生效,但是它不影响已经
C 在 mintty 中运行的进程。
E This is because the environment variables of a running process cannot be
E changed from outside that process.
C 这是因为正在运行的进程的环境变量不能从该进程外部进行更改。
E Therefore mintty should be restarted for a character set change to take full
E effect, or the locale environment of the shell should be changed accordingly.
C 因此,应该重新启动 mintty 以使字符集更改生效,或者应该相应地更改 shell的区域设置
C 环境。

E \fINote:\fP
C \fB注意:\fP  
E The locale and character set can also be changed with an escape sequence, 
E see the Control Sequences wiki page \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#locale\fP.
E That setting takes precedence; changes from the Options menu will silently 
E have no effect unless an escape sequence with empty locale is sent 
E to the terminal to restore to "default".
C 区域设置和字符集也可以通过转义序列来改变,请参阅控制序列维基页面
C \fIhttps://github.com/mintty/mintty/wiki/ctrlseqs#locale\fP。该设置优先; 除非向终端发
C 送带有空语言环境的转义序列以还原为"默认",否则对"选项"菜单的更改将无效。

  .TP
E \fBCharacter width handling\fP (Charwidth=locale)
C \fB字符宽度处理\fP(Charwidth=locale)
E With this hidden setting, locale-determined character width properties 
E can be overridden:
C 这个隐藏设置,可以重写区域设置确定的字符宽度属性:
  .br
E - \fBlocale\fP Use locale width properties.
C - \fBlocale\fP : 使用语言环境设置宽度属性。
  .br
E - \fBunicode\fP Use built-in width properties, 
E likely based on a more up-to-date Unicode version.
E (Corresponds to the xterm resource \fBmkWidth\fP.)
C - \fBUnicode\fP: 使用内置的宽度属性,可能基于更新的 Unicode 版本。(对应于 xterm
资源 \fBmkWidth\fP.)
  .br
E - \fBambig-wide\fP Use built-in width properties, 
E with ambiguous-width characters assumed to be wide.
E (Corresponds to the xterm resource \fBcjkWidth:true\fP.)
C - \fBambig-wide\fP: 使用内置宽度属性,假定宽度不明确的字符宽。(对应于 xterm 资源 \fBcjkWidth: true\fP。)
  .br
E - \fBambig-narrow\fP Use built-in width properties, 
E with ambiguous-width characters assumed to be narrow.
E (Corresponds to the xterm resource \fBcjkWidth:false\fP.)
C - \fBambig-narrow\fP 使用内置的宽度属性,假定宽度不明确的字符为窄。(对应于xterm 资源 \fBcjkWidth: false\fP.)
  .br
E - \fBsingle\fP Enforce single-width (no double width rendering).
C - \fBsingle\fP  : 执行单一宽度(没有双倍宽度渲染)。
  .br
E - \fBsingle-unicode\fP Enforce single-width (no double width rendering), 
E with built-in width properties to determine combining characters.
C - \fBsingle-unicode\fP :实施单一宽度(无双倍宽度渲染) ,具有内置宽度属性以确定组合字符。

E \fINote:\fP With setting \fBambig-wide\fP, if the effective locale does not define 
E ambiguous-width characters wide already, mintty appends the "@cjkwide" 
E locale modifier, in order to adapt the selected locale to the width preference.
C \fB注意:\fP  
C 通过设置 ambig-wide,如果有效的区域设置已经没有定义宽度不明确的字符,mintty 将添
C 加"@cjkwide"区域设置修饰符,以使选定的区域设置适应宽度偏好。
E With setting \fBambig-narrow\fP, if the effective locale does not define 
E ambiguous-width characters narrow already, mintty appends the "@cjknarrow" 
E locale modifier, in order to adapt the selected locale to the width preference.
C 通过设置 \fBambig-narrow\fP,如果有效的区域设置没有定义已经变窄的二义性宽度字符,
C mintty 会附加"@cjknarrow"区域设置修饰符,以使选定的区域设置适应宽度偏好。

E \fINote:\fP With settings \fBsingle\fP or \fBsingle-unicode\fP, 
E mintty appends the "@cjksingle" locale modifier, 
E in order to adapt the selected locale to the width preference.
C \fB注意:\fP  使用\fBsingle\fP 或 \fBsingle-unicode\fP 设置时,mintty 将"@cjksingle"语言环境修饰符附
C 加在"@cjksingle"语言环境修饰符后面,以便使选定的语言环境适应宽度首选项。

E \fINote:\fP If this option selects using built-in width properties, 
E the response to the Secondary Device Attributes request will report 
E the built-in Unicode version as its third parameter.
C \fB注意:\fP  如果使用内置宽度属性选择此选项,对次要设备属性请求的响应将报告内置 Unicode
C 版本作为第三个参数。

E \fIWarning:\fP With this option, actual width properties as rendered 
E on the screen and width assumptions of the \fBwcwidth\fP function may be 
E inconsistent for the impacted characters, which may confuse 
E screen applications (such as editors) that rely on \fBwcwidth\fP information.
C 警告: 使用此选项,显示在屏幕上的实际宽度属性和 \fBwcwidth\fP 函数的宽度假设可能与受影
C 响的字符不一致,这可能会混淆依赖 \fBwcwidth\fP 信息的屏幕应用程序(如编辑器)。

  .TP
E \fBOld character locale handling\fP (OldLocale=false)
C \fB旧字符区域设置处理\fP(OldLocale=false)
E This setting reverts determination and handling of character encoding and 
E character width from locale and options mostly to mintty up to 3.4.0.
C 这个设置将字符编码和字符宽度的确定和处理从区域设置和选项主要还原到3.4.0。

  .SS
E \fBKeys\fP
C \fB按键\fP
E Settings controlling keyboard behaviour.
C 设置控制键盘行为。

  .TP
E \fBAuto-repeat keys\fP (AutoRepeat=on)
C \fB自动重复按键\fP(AutoRepeat=on)
E When setting this off, keyboard auto-repeat is ignored. Auto-repeat can also 
E be switched dynamically with DECSET 8.
E Note that the repeat rate can be adjusted dynamically by an escape sequence.
C 当设置此选项off,键盘自动重复被忽略。自动重复也可以用 DECSET 8动态切换。请注意,
C 重复率可以通过转义序列动态调整。

  .TP
E \fBBackarrow sends ^H\fP (BackspaceSendsBS=no)
C \fB回格键发送 ^H\fP  (BackspaceSendsBS= no)
E By default, mintty sends \fB^?\fP (ASCII DEL) as the keycode for the backspace key.
E If this option is enabled, \fB^H\fP is sent instead.
E This also changes the \fBCtrl+Backspace\fP code from \fB^_\fP to \fB^?\fP.
C 默认情况下,mintty 发送 \fB^?\fP (ASCII DEL)作为退格键的键码。如果启用此选项,则发送
C \fB^H\fP。这也将 \fBCtrl+Backspace\fP 代码从 \fB^_\fP更改为 \fB^?\fP.
  .br
E (Corresponds to the xterm resource \fBbackarrowKey\fP.)
C (对应于 xterm 资源 \fBbackarrowKey\fP。)

  .TP
E \fBDelete sends DEL\fP (DeleteSendsDEL=no)
C \fBDelete 发送 DEL\fP (DeleteSendsDEL=no)
E By default, mintty sends VT100 Remove as the keycode for the keypad Del key.
E If this option is enabled, \fB^?\fP (ASCII DEL) is sent instead.
C 默认情况下,mintty 发送 VT100 Remove 作为键盘 Del 键的键码。如果启用此选项,\fB^?\fP
C (ASCII DEL)被发送代替。
  .br
E (Corresponds to the xterm resource \fBdeleteIsDEL\fP.)
C (对应于 xterm 资源 \fBdeleteIsDEL\fP.)

  .TP
E \fBCtrl+LeftAlt is AltGr\fP (CtrlAltIsAltGr=no)
C \fBCtrl+LeftAlt 是 AltGr\fP (CtrlAltIsAltGr=no)
E The AltGr key on non-US Windows systems is a strange beast: pressing it is
E similar to pressing the left Ctrl key and the right Alt key at the
E same time, and many Windows programs treat any Ctrl+Alt combination as AltGr.
C 非美国 Windows 系统上的 AltGr 键是一个奇怪的怪物: 按下它就像同时按下左键 Ctrl 和
C 右键 Alt,许多 Windows 程序将任何 Ctrl+Alt 组合视为 AltGr。

E Some programs, however, chief among them Microsoft's very own Office, do not
E treat Ctrl+LeftAlt as AltGr, so that Ctrl+LeftAlt combinations can be used in
E command shortcuts even when a key has an AltGr character binding.
C 然而,一些程序,其中最主要的是微软自己的 Office,并不把 Ctrl+LeftAlt 当作
C AltGr,因此 Ctrl+LeftAlt 组合可以用在命令快捷键中,即使一个键有 AltGr 字符绑定
C 。

E By default, mintty follows Office's approach, because a number of terminal
E programs make use of Ctrl+Alt shortcuts.
E The "standard" Windows behaviour can be restored by ticking the checkbox here.
C 默认情况下,mintty 遵循 Office 的方法,因为许多终端程序使用 Ctrl+Alt 快捷键。"
C 标准"Windows 行为可以通过勾选此处的复选框恢复。

E The setting makes no difference for keys without AltGr key bindings
E (e.g. any key on the standard US layout).
C 对于没有 AltGr 键绑定的键(例如标准的 US 布局中的任何键) ,该设置没有区别。

  .TP
E \fBAltGr is also Alt\fP (AltGrIsAlsoAlt=no)
C \fBAltGr 也是 Alt\fP (AltGrIsAlsoAlt=no)
E This setting enables fallback of the AltGr key to the function of the 
E Alt modifier for those keys that do not have an AltGr mapping in the 
E keyboard layout.
C 此设置允许将 AltGr 键回退到键盘布局中没有 AltGr 映射的键的 Alt 修饰符函数。

E The setting makes no difference for keys with AltGr key bindings.
C 此设置对于具有 AltGr 键绑定的键没有影响。

  .TP
E \fBAllow delay for AltGr detection\fP (CtrlAltDelayAltGr=0)
C \fB允许延迟 AltGr 检测\fP(ctrl laltdelayaltgr=0)
E Some software managing and providing keyboard input does not handle 
E AltGr properly; particularly TeamViewer is known for buggy behaviour 
E as it does not provide Ctrl and Menu virtual key codes like Windows does.
E With this option, some delay in milliseconds (suggested 16 or 20) can be 
E allowed to detect a Ctrl+Menu sequence as AltGr.
C 一些管理和提供键盘输入的软件不能正确处理 AltGr; 特别是 TeamViewer 以出现错误行为
C 而著称,因为它不像 Windows 那样提供 Ctrl 和 Menu 虚拟键代码。使用此选项,可以允
C 许以毫秒为单位的延迟(建议为16或20)检测 Ctrl+Menu 序列为 AltGr。

  .TP
E \fBOld method of AltGr detection\fP (OldAltGrDetection=no)
C \fB旧的 AltGr 检测方法\fP(OldAltGrDetection=no)
E Setting this hidden option would disable a workaround for an 
E incompatibility in the Windows on-screen keyboard, 
E just in case it has any side effects.
C 设置这个隐藏选项将禁用 Windows 屏幕键盘不兼容的解决方案,以防出现任何副作用。

  .TP
E \fBSupport injection of external hotkeys\fP (SupportExternalHotkeys=2)
C \fB支持外部热键的注入\fP(SupportExternalHotkeys=2)
E This setting supports external Alt+hotkey combinations, esp. Alt+F4 
E to close the window, independently of general Alt+Fn shortcuts support 
E (if option value is 2) and by fixing the buggy hotkey sequence sent 
E by StrokeIt. Setting 4 also disables the feature to clear the selection 
E when another application sets the clipboard; this is needed to workaround 
E weird behaviour of Hot Keyboard.
C 此设置支持外部 Alt+热键组合,尤其是。Alt+f4关闭窗口,独立于一般的 Alt+Fn
C 快捷键支持(如果选项值为2)和修复 StrokeIt 发送的错误热键序列。
C 设置4也会禁用这个功能,当另一个应用程序设置剪贴板时,这个功能可以清除选区; 这是
C 解决热键盘奇怪行为所必需的。

  .TP
E \fBCopy and Paste shortcuts\fP (ClipShortcuts=yes)
C \fB复制和粘贴快捷方式\fP(ClipShortcuts=yes)
E Checkbox for enabling the clipboard shortcuts \fBCtrl+Ins\fP for copying and
E \fBShift+Ins\fP for pasting.
C 启用剪贴板快捷键 Ctrl+Ins 用于复制,Shift+Ins 用于粘贴。

  .TP
E \fBMenu and Full Screen shortcuts\fP (WindowShortcuts=yes)
C \fB菜单和全屏快捷方式\fP(WindowShortcuts= yes)
E Checkbox for enabling the \fBAlt+Space\fP and \fBAlt+Enter\fP shortcuts for
E showing the window menu and toggling full screen mode.
C 启用 \fBAlt+Space\fP 和 \fBAlt+Enter\fP 快捷方式来显示窗口菜单和切换全屏模式。

  .TP
E \fBSwitch window shortcuts\fP (SwitchShortcuts=yes)
C \fB切换窗口快捷方式\fP(切换快捷方式=yes)
E Checkbox for enabling the \fBCtrl+Tab\fP shortcuts 
E for switching between mintty windows cyclically.
C 启用 \fBCtrl+Tab\fP 快捷键,用于循环切换迷你窗口。

  .TP
E \fBZoom shortcuts\fP (ZoomShortcuts=yes)
C \fB缩放快捷方式\fP(ZoomShortcuts= yes)
E Checkbox for enabling the font zooming shortcuts \fBCtrl+plus/minus/zero\fP.
C 启用字体缩放快捷键\fBCtrl+plus/minus/zero\fP。

  .TP
E \fBAlt+Fn shortcuts\fP (AltFnShortcuts=yes)
C \fBAlt+Fn 快捷键\fP(AltFnShortcuts=yes)
E Checkbox for enabling the use of combinations of Alt and functions keys as
E shortcuts, for example \fBAlt+F4\fP for closing the window or \fBAlt+F11\fP
E fortoggling  full screen mode.  Disable to have \fBAlt+Fn\fP combinations
E sent to applications instead.
C 使用组合的 Alt 和函数键作为快捷键,例如 \fBAlt+F4\fP用于关闭窗口或\fBAlt+F11\fP用于切换
C 全屏模式。禁用将 \fBAlt+Fn\fP 组合发送到应用程序。

  .TP
E \fBCtrl+Shift+letter shortcuts\fP (CtrlShiftShortcuts=no)
C \fBCtrl+Shift+快捷键\fP(CtrlShiftShortcuts= no)
E Checkbox for enabling alternative clipboard and window command shortcuts
E using \fBCtrl+Shift+letter\fP combinations such as \fBCtrl+Shift+V\fP for
E paste or \fBCtrl+Shift+N\fP for starting a new session.
C 启用可选的剪贴板和窗口命令快捷方式,使用 \fBCtrl+Shift+字母\fP组合,如\fBCtrl+Shift+V\fP 
C 用于粘贴或 \fBCtrl+Shift+n\fP 用于开始新的会话。

E These can replace the \fBCtrl/Shift+Ins\fP and \fBAlt+Fn\fP shortcuts, whereby
E they show up in menus only if the corresponding default shortcuts are disabled.
C 这些快捷键可以替代 \fBCtrl/Shift+Ins\fP 和 \fBAlt+Fn\fP 快捷键,只有在相应的默认快捷键被
C 禁用时,它们才会出现在菜单中。

E See the shortcuts section above for the list of shortcuts controlled by this
E option.  When it is disabled, Ctrl+Shift+letter combinations are sent to
E applications as C1 control characters instead.
C 有关此选项控制的快捷方式列表,请参阅上面的快捷方式部分。当它被禁用时,Ctrl +
C Shift+字母组合被作为 c1控制字符发送给应用程序。

  .TP
E \fBCompose key selection\fP (ComposeKey=off)
C \fB组合键选择\fP(ComposeKey=off)
E The modifier key selected here will have the function of a \fICompose key\fP.
E Pressing and releasing the key, following by a sequence of composing keys, 
E will enter a composition of them, according to X11 compose key data.
C 这里选择的修饰键具有\fB组合键\fP的功能。按下并释放此键,再按组合键序列
C 将根据 x11组键数据输入组键。
  .br
E The \fBOff\fP setting disables the Compose key.
C - off 禁用 Compose 键。
  .br
  - \fBShift\fP
  .br
  - \fBCtrl\fP
  .br
  - \fBAlt\fP
  .br
  - \fBOff\fP

  .SS
E \fBMouse\fP
C \fB鼠标\fP
E Settings controlling mouse support.
C 置控制鼠标支持。

  .TP
E \fBCopy on select\fP (CopyOnSelect=yes)
C \fB复制选择\fP(CopyOnSelect=yes)
E If enabled, the region selected with the mouse is copied to the clipboard as
E soon as the mouse button is released, thus emulating X Window behaviour.
C 如果启用,用鼠标选择的区域将在鼠标按钮释放后立即复制到剪贴板,从而模仿 x 窗口的
C 行为。

  .TP
E \fBCopy with TABs\fP (CopyTab=no)
C \fB使用 tab 进行复制\fP(CopyTab=no)
E With this setting, when copying text, TAB characters will be preserved 
E rather than expanded to spaces.
E Note that user-definable functions are available to invoke copying 
E explicitly with or without TABs via keyboard shortcut or menu item.
C 使用此设置,在复制文本时,将保留 TAB 字符,而不是将其展开为空格。请注意,用户定
C 义的函数可以通过快捷键或菜单项显式调用有或没有tab的复制。

  .TP
E \fBCopy as rich text\fP (CopyAsRTF=yes)
C \fB复制为富文本\fP(CopyAsRTF=yes)
E If this option is enabled, which it is by default, text is copied to the
E clipboard in rich text format (RTF) in addition to plain text format.
E RTF preserves colours and styles when pasting text into applications that
E support it, e.g. word processors.
C 如果启用了这个选项(默认情况下是这样的) ,除了纯文本格式之外,文本将以富文本格式
C (RTF)复制到剪贴板。RTF 在将文本粘贴到支持它的应用程序(例如文字处理程序)时保留颜
C 色和样式。

E \fINote:\fP Copy as rich text is also available as an explicit item in 
E the extended context menu.
C \fB注意:\fP  复制为富文本也可以作为扩展上下文菜单中的显式项。

E The font used in RTF may be changed by the settings \fBCopyAsRTFFont\fP and 
E \fBCopyAsRTFFontHeight\fP, to accommodate the case that the configured mintty 
E font is not available when reading the contents (e.g. after sending it by mail).
C RTF 中使用的字体可以通过 \fBCopyAsRTFFont\fP 和 \fBCopyAsRTFFontHeight\fP 的设置进行更改,以
C 适应已配置的 mintty 字体在读取内容时不可用的情况(例如在通过邮件发送内容之后)。

  .TP
E \fBCopy as HTML\fP (CopyAsHTML=0)
C \fB复制为 HTML\fP (CopyAsHTML=0)
E With this option, mintty also copies text in HTML format, using flexible 
E levels of HTML formatting, when applying the normal copy function.
C 使用这个选项,mintty 在应用普通的复制函数时,还可以使用灵活的 HTML 格式级别来复
C 制 HTML 格式的文本。
  .br
E - \fB0\fP: do not include HTML
C - \fB0\fP: 不包括 HTML
  .br
E - \fB1\fP: copy HTML text only (no font information)
C - \fB1\fP: 只复制 HTML 文本(没有字体信息)
  .br
E - \fB2\fP: copy HTML text (no global background)
C - \fB2\fP: 复制 HTML 文本(没有全局背景)
  .br
E - \fB3\fP: copy HTML (close to screen layout)
C - \fB3\fP: 复制 HTML (接近屏幕布局)

E \fINote:\fP Copy as HTML levels are also available as explicit items in 
E the extended context menu.
C \fB注意:\fP  复制为 HTML 级别也可以作为扩展上下文菜单中的显式项目。

  .TP
E \fBClicks place command line cursor\fP (ClicksPlaceCursor=no)
C \fB单击放置命令行光标\fP(ClicksPlaceCursor=no)
E If enabled, the command line cursor can be placed by pressing the left
E mouse button.
E This works by sending the number of cursor keycodes needed to get to the
E destination.
C 如果启用,可以通过按下鼠标左键来放置命令行光标。
C 这是通过发送到达目的地所需的光标键码数量来实现的。

  .TP
E \fBRight mouse button\fP (RightClickAction=menu)
C \fB鼠标右键\fP(RightClickAction=menu)
E Action to take when the right mouse button is pressed.
C 当鼠标右键被按下时要执行的操作。
  .br
E - \fBPaste\fP: Paste the clipboard contents.
C - \fBPaste\fP : 粘贴剪贴板内容。
  .br
E - \fBExtend\fP: Extend the selected region.
C - \fBExtend\fP: 扩展选定区域。
  .br
E - \fBEnter\fP: Simulate \fBEnter\fP/\fBReturn\fP key.
C - \fBEnter\fP : 模拟输入/返回键。
  .br
E - \fBMenu\fP: Show the context menu.
C - \fBMenu\fP  : 显示上下文菜单。

E If this is set to \fBPaste\fP, the middle button extends the selected region
E instead of pasting the clipboard. If it is set to \fBExtend\fP, a left click
E with \fBShift\fP pressed pastes the clipboard instead of extending the
E selection.
C 如果设置为\fB粘贴\fP,则中间的按钮将\fB扩展\fP选定区域,而不是\fB粘贴\fP剪贴板。如果它被设置为\fB扩展\fP
C ,用 \fBShift\fP 按下的左键点击剪贴板而不是扩展选择。

  .TP
E \fBMiddle mouse button\fP (MiddleClickAction=paste)
C \fB鼠标中键\fP(middleckaction=paste)
E Action to take when the middle mouse button is pressed.
C 当鼠标中键被按下时要执行的操作。
  .br
E - \fBPaste\fP: Paste the clipboard contents.
C - \fBPaste\fP : 粘贴剪贴板内容。
  .br
E - \fBExtend\fP: Extend the selected region.
C - \fBExtend\fP: 扩展选定区域。
  .br
E - \fBEnter\fP: Simulate \fBEnter\fP/\fBReturn\fP key.
C - \fBEnter\fP : 模拟\fB输入/返回键\fP。
  .br
E - \fBVoid\fP: Do nothing.
C - \fBVoid\fP  : 无操作

  .TP
E \fBDefault click target\fP (ClicksTargetApp=yes)
C \fB默认单击目标\fP(ClicksTargetApp=yes)
E This applies to application mouse mode, i.e. when the application activates
E xterm-style mouse reporting.
C 这适用于应用程序鼠标模式,即当应用程序激活 xterm 样式的鼠标报告时。
E In that mode, mouse clicks can be sent either to the application to process
E as it sees fit, or to the window for the usual actions such as select and paste.
C 在这种模式下,可以将鼠标点击发送到应用程序以便按照它认为合适的方式进行处理,或者
C 发送到窗口以进行诸如选择和粘贴之类的常规操作。
  .br
E - \fBWindow\fP
C - \fB视窗\fP
  .br
E - \fBApplication\fP
C - \fB应用程式\fP

  .TP
E \fBModifier key for overriding default\fP (ClickTargetMod=shift)
C \fB重写默认值的修饰键\fP(ClickTargetMod=shift)
E The modifier key selected here can be used to override the click target in
E application mouse mode.
C 这里选择的修改键可以用于在应用程序鼠标模式下覆盖单击目标。
E With the default settings, clicks are sent to the application and Shift needs
E to be held to trigger window actions instead.
C 使用默认设置,单击将被发送到应用程序,并且需要保持 Shift 来触发窗口操作。
  .br
E The \fBOff\fP setting disables overriding.
C \fBOff\fP 禁用重写。
  .br
  - \fBShift\fP
  .br
  - \fBCtrl\fP
  .br
  - \fBAlt\fP
  .br
  - \fBWin\fP
  .br
  - \fBOff\fP

  .TP
E \fBMouse auto-hiding\fP (HideMouse=on)
C \fB鼠标自动隐藏\fP(HideMouse=on)
E By default, mintty automatically hides the cross-hair mouse cursor when 
E keyboard input is being entered. Setting this option=false keeps the cursor.
C 默认情况下,mintty 会在输入键盘输入时自动隐藏十字形鼠标光标。
C 设置此选项=false 将保留游标。
  .br
E (Corresponds to the xterm resource value \fBpointerMode:2\fP.)
C (对应于 xterm 资源值 \fBpointerMode: 2\fP.)

  .TP
E \fBElastic text selection\fP (ElasticMouse=off)
C \fB弹性文本选择\fP(ElasticMouse=off)
E With this option set, text selection with mouse dragging only includes 
E first and last characters if they are spanned at least halfway, so just 
E slightly touching a character leaves it out.
C 使用这个选项设置,使用鼠标拖动的文本选择只包括前后两个字符,如果它们至少有一半跨
C 度的话,所以只需稍微触摸一下字符就可以了。

  .SS
E \fBWindow\fP
C \fB窗口\fP
E Window properties.
C 窗口属性

  .TP
E \fBColumns\fP (Columns=80)
C \fB列数\fP(Columns=80)
E Default width of the window, in character cells.
C 窗口的默认宽度,以字符单元格为单位。

  .TP
E \fBRows\fP (Rows=24)
C \fB行数\fP (Rows= 24)
E Default height of the window, in character cells.
C 窗口的默认高度,在字符单元格中。

  .TP
E \fBCurrent size\fP
C \fB当前规模\fP
E Pressing this button sets the default width and height to the window's
E current size.
C 按下此按钮可将默认宽度和高度设置为窗口的当前大小。

  .TP
E \fBVertical spacing automatic adjustment strategy\fP (AutoLeading=2)
C \fB垂直间距自动调整策略\fP(AutoLeading= 2)
E Vertical spacing / row height is determined from font parameters.
C 垂直间距/行高由字体参数决定。
E Mintty can apply some heuristic automatic adjustment to catch weird 
E font spacing values. Setting 0 disables this feature, setting 1 uses 
E the algorithm in effect until mintty 3.4.6, setting 2 uses a tweaked 
E algorithm that avoids clipped descenders in some fonts.
C Mintty 可以应用一些启发式自动调整来捕捉奇怪的字体间距值。
C 设置0将禁用此功能,
C 设置1将使用该算法直到 mintty 3.4.6,
C 设置2使用经过调整的算法避免某些字体的缩放。
E The manual tuning setting \fBRowSpacing\fP is applied after auto-leading.
C 自动引导后应用手动调整设置\fBRowSpacing\fP 。

  .TP
E \fBVertical spacing adjustment\fP (RowSpacing=0)
C \fB垂直间距调整\fP(RowSpacing= 0)
E Additional row padding.
C 额外的行填充。

E \fINote:\fP Mintty adjusts row spacing according to the font metrics, to 
E compensate for tight or tall spacing of some fonts (e.g. Courier, Consolas, FreeMono, Monaco).
E The RowSpacing value is added to that.
C \fB注意:\fP  Mintty 根据字体格式调整行距,以弥补某些字体(如 Courier、 Consolas、
C FreeMono、 Monaco)的行距过窄或过长。RowSpacing 值被添加到该值中。
  .br
E (Corresponds roughly to the xterm resource \fBscaleHeight\fP.)
C (大致相当于xterm 资源 \fBscaleHeight\fP.)

  .TP
E \fBHorizontal spacing adjustment\fP (ColSpacing=0)
C \fB水平间距调整\fP(ColSpacing=0)
E Additional column padding; ColSpacing=1 can avoid boldened glyphs being clipped.
C 附加的列填充; ColSpacing=1可以避免修改粗体字。

  .TP
E \fBBorder spacing\fP (Padding=1)
C \fB边框间距\fP(Padding=1)
E Window padding; margin between text and window border. The effective value 
E is limited by the character cell width (scaling with font zooming).
C 窗口填充; 文本和窗口边框之间的边距。有效值受字符单元格宽度(随字体缩放缩放)的限制
C 。
  .br
E (Corresponds to the xterm resource \fBinternalBorder\fP.)
C (对应于 xterm resource \fBinternalBorder\fP.)
  .br
E A negative value indicates that always the character cell width shall be used,
E without fixed limit.
C 负值表示总是使用字符单元格宽度,没有固定的限制。

  .TP
E \fBScrollback lines\fP (ScrollbackLines=10000)
C \fB回滚行数\fP(ScrollbackLines=10000)
E The maximum number of lines to keep in the scrollback buffer.
C 要在回滚缓冲区中保留的最大行数。

  .TP
E \fBScrollbar\fP (Scrollbar=right)
C \fB滚动条\fP(Scrollbar=right)
E The scrollbar can be shown on either side of the window or just hidden.
E By default, it is shown on the right-hand side.
C 滚动条可以显示在窗口的任何一边,也可以隐藏。默认情况下,它显示在右边。
  .br
  - \fBLeft\fP
  .br
  - \fBNone\fP
  .br
  - \fBRight\fP

  .TP
E \fBModifier for scrolling\fP (ScrollMod=shift)
C \fB滚动的修饰符\fP(ScrollMod=shift)
E The modifier key that needs to be pressed together with the arrow-up/down,
E PgUp/PgDn, Home/End, or arrow-left/right keys to access the scrollback buffer.
C 需要与上/下箭头键、 PgUp/PgDn、 Home/End 或左/右箭头键一起按下的修饰键才能访问回
C 滚缓冲区。
  .br
E The default is \fBShift\fP.
C 默认值是 \fBShift\fP。
E The \fBOff\fP setting disables scrolling with keyboard shortcuts. 
C off:禁止使用键盘快捷键滚动。
E A combined numeric value selects the respective combination of modifier keys.
C 组合数值选择修饰键的相应组合。
  .br
  - \fBShift\fP (1)
  .br
  - \fBAlt\fP (2)
  .br
  - \fBCtrl\fP (4)
  .br
  - \fBWin\fP (8)
  .br
  - \fBSuper\fP (16)
  .br
  - \fBHyper\fP (32)
  .br
  - \fBOff\fP (0)

  .TP
E \fBPgUp and PgDn scroll without modifier\fP (PgUpDnScroll=no)
C \fBPgUp 和 PgDn 滚动不带修饰符\fP(PgUpDnScroll=no)
E If this is enabled, the scrollback buffer can be accessed by just pressing
E PgUp or PgDn, without the 'modifier for scrolling' selected above.
E If the modifier is pressed anyway, plain PgUp/PgDn keycodes are sent to the
E application.
C 如果启用了这个选项,只需按下 PgUp 或 PgDn 就可以访问滚动缓冲区,而不需要上面选择
C 的"滚动修饰符"。如果无论如何都按下修饰符,则向应用程序发送普通的 PgUp/PgDn 键码
C 。
E This option does not affect the arrow keys or Home/End keys.
C 此选项不影响箭头键或 Home/End 键。

  .TP
E \fBUI localization language\fP (Language=)
C \fBUI 本地化语言\fP(Language=)
E This selects the language or language/region code to use for 
E localization of the mintty user interface, the Options dialog, 
E menus, message boxes, and terminal in-line error messages.
C 这将选择用于 mintty 用户界面、 Options 对话框、菜单、消息框和终端内联错误消息本
C 地化的语言或语言/区域代码。
  .br
E - \fI(empty)\fP an empty entry disables localization
C - \fB(空)\fP一个空条目禁用本地化 
  .br
E - \fB@\fP use the Windows user language setting
C - \fB@\fP 使用Windows语言设定
  .br
E - \fB*\fP use environment settings (variables \fILANGUAGE\fP, \fILC_ALL\fP, \fILC_MESSAGES\fP, \fILANG\fP)
C - \fB*\fP 使用环境变量设定(variables LANGUAGE,LC_all,LC_messages,LANG)
  .br
E - \fB=\fP use the same language as the \fBLocale\fP setting (section Text)
C - \fB=\fP 使用与本地化设置相同的语言(section Text)
  .br
E - \fI(language[_region])\fP use the given language or language/region code
C - \fB (language [_region ])\fP使用给定的语言或语言/区域代码

E See the Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#localization\fP 
E about how to configure localization.
C 关于如何配置本地化,请参阅 Tips wiki
C \fIhttps://github.com/mintty/mintty/wiki/Tips#localization\fP。

E Note that Windows may already have localized the default entries of the 
E system menu, which makes the system menu language inconsistent because 
E mintty adds a few items here. Select \fILanguage=en\fP to 
E "reverse-localize" this.
C 注意,Windows 可能已经本地化了系统菜单的默认条目,这使得系统菜单语言不一致,因为
C mintty 在这里添加了一些项目。选择 \fBLanguage=en\fP 以"反向本地化"此。

  .SS
E \fBTerminal\fP
C \fB终端\fP
E Terminal emulation settings.
C 终端模拟设置。

  .TP
E \fBTerminal type\fP (Term=xterm)
C \fB终端类型\fP(Term=xterm)
E The terminal type.  This determines the setting of the TERM environment variable
E at mintty startup.
C 终端类型。这决定了 mintty 启动时 TERM 环境变量的设置。
E Choices available from the dropdown list are \fBxterm\fP, \fBxterm-256color\fP,
E \fBxterm-vt220\fP, \fBvt100\fP, \fBvt220\fP, \fBvt340\fP, \fBvt420\fP, \fBvt525\fP,
E \fBxterm-direct\fP, \fBmintty\fP, \fBmintty-direct\fP.
C 可以从下拉列表中选择: \fBxterm\fP,\fBxterm-256color\fP,\fBxterm-vt220\fP,\fBvt100\fP,\fBvt220\fP,\fBvt340\fP,
C \fBvt420\fP,\fBvt525\fP,\fBxterm-direct\fP,\fBmintty\fP,\fBmintty-direct\fP。

E The last three options are only offered if the respective terminfo entries 
E are installed in the system (WSL distribution with options --wsl/--WSL).
C 只有在系统中安装了的terminfo(具有选项的 WSL 发行版 --WSL/--WSL)时,才会
C 提供最后三个选项。
E The *\fB-direct\fP entries provide terminfo capabilities to set 
E true-colour (24 bit colour) attributes.
C \fB-direct\fP提供terminfo功能来设置 true-color (24位颜色)属性。
E Note, however, that this only affects usage of the \fIterminfo\fP API 
E to drive the terminal; the respective control sequences are always available 
E and applications are free to use them directly.
C 然而,请注意,这只会影响 \fIterminfo\fP API 的使用来驱动终端; 相应的控制序列总是可用的,应
C 用程序可以直接使用它们。

E If the setting contains "vt220" or higher, xterm VT220-style function 
E key mode is enabled instead of the default PC-style function key mode.
E (This can otherwise be set with the DECSET 1061 control sequence.)
C 如果设置包含" vt220"或更高,则启用 xterm vt220风格的函数键模式,而不启用缺省的
C pc 风格的函数键模式。(这可以通过 DECSET 1061控制序列设置。)

E Apart from that, this setting has no effect on mintty's terminal emulation,
E i.e. all the features are always available. However, the TERM setting 
E may be used by applications to choose what features they can use, 
E alternatively to the preferrable device attributes queries
E (see \fIhttps://github.com/mintty/mintty/wiki/Tips\fP for hints).
C 除此之外,这个设置对 mintty 的终端仿真没有影响,也就是说所有的特性都是可用的。然
C 而,应用程序可以使用 TERM 设置来选择它们可以使用的特性,或者选择优先的设备属性查
C 询(参见 \fIhttps://github.com/mintty/mintty/wiki/tips\fP)。

E The \fBxterm-256color\fP setting enables 256-color mode in some applications,
E but may not be recognised at all by others, which is why plain \fBxterm\fP
E is the default.
C \fBXterm-256\fP色彩设置在某些应用程序中支持256色彩模式,但其他应用程序可能根本无法识别
C ,这就是为什么普通 \fBxterm\fP 是默认值。

E The \fBvt340\fP setting facilitates a terminal ID indication corresponding 
E to the Sixel graphics feature. However, particularly the \fIgnuplot\fP 
E tool uses a dedicated variable (\fBGNUTERM\fP) to trigger its usage.
C \fBVt340\fP设置有利于对应 Sixel 图形功能的终端 ID 指示。然而,特别是\fIgnuplot\fP 工具使用
C 一个专用变量(\fBGNUTERM\fP)来触发它的使用。

E (Corresponds roughly to the combined xterm resources 
E \fBdecTerminalID\fP, \fBtermName\fP, \fBkeyboardType\fP.)
C (大致对应于组合的 xterm resources \fBdecTerminalID\fP、 \fBtermName\fP、\fBkeyboardType\fP.)

  .TP
E \fBAnswerback\fP (Answerback=)
C \fB回答\fP(Answerback=)
E The answerback string is sent in response to the \fB^E\fP (ENQ) character.
E By default, this is empty.
C 回答字符串是响应 \fB^e\fP (ENQ)字符发送的。默认情况下,这是空的。

  .TP
E \fBAlternate screen\fP (NoAltScreen=false)
C \fB备用屏幕\fP(NoAltScreen=false)
E With this setting, the alternate screen can be disabled.
E (Corresponds to the xterm resource \fBtiteInhibit\fP, 
E switchable by an escape sequence.)
C 使用此设置,可以禁用备用屏幕。(对应于 xterm 资源 titeInhibit,可通过转义序列进行
C 切换。)

  .TP
E \fBEnable 132-column mode switching\fP (Enable132ColumnSwitching=false)
C \fB启用132列模式切换\fP(enable132 columnswitch=false)
E With this setting, DECSET 3 escape sequences to switch 80/132 column modes 
E are enabled initially. This can be changed later dynamically (DECSET 40).
E (Corresponds to the xterm resource \fBc132\fP, switchable by an escape sequence.)
C 在这个设置下,DECSET 3转义序列开始切换80/132列模式。这可以在以后动态地改变
C (DECSET 40)。(对应于 xterm 资源 \fBc132\fP,可通过转义序列切换。)

  .TP
E \fBApply old wraparound behaviour\fP (OldWrapModes=false)
C \fB应用旧的wrap 行为\fP(OldWrapModes=false)
E Setting this compatibility option disables some tweaks and fixes of 
E mintty 2.7.5:
C 设置此兼容性选项将禁用 mintty 2.7.5的一些调整和修复:
  .RS
E - Backspace after pending Wraparound goes to previous column
C -Backspace  Wraparound 后退回到以前的列
  .br
E - Reverse Wraparound mode initially disabled (but switchable), complying with xterm default and terminfo
C -Reverse  Wraparound 模式最初禁用(但可切换) ,遵循 xterm 默认和 terminfo
  .RE

  .TP
E \fBAllow control sequence to set selection\fP (AllowSetSelection=false)
C \fB允许控制序列设置选择\fP(AllowSetSelection=false)
E If enabled, the terminal control sequence OSC 52 is allowed to set the 
E clipboard selection for pasting (using base64-encoded contents, like xterm).
C 如果启用,则允许终端控制序列 osc52设置用于粘贴的剪贴板选择(使用 base64编码的内容
C ,如 xterm)。

  .TP
E \fBBell\fP
C \fB铃声\fP
E The options here determine what effects the bell character \fB^G\fP has.
E Default beep and taskbar highlighting are enabled by default.
E Mintty can also play wave sounds or frequency beeps.
C 这里的选项决定了 bell 字符 \fB^G\fP 的效果。默认提示音和任务栏高亮显示是默认启用的。
C Mintty 也可以播放波音或频率哔哔声。
  .RS
E - \fBBell system sound\fP (BellType=1): Preferred system sound, values:
C - 铃声类型 (BellType=1) : 首选系统声音,值:
  .RS
  \fB-1\fP : Simple Beep
  .br
  \fB0\fP : No Beep (overrides BellFile and BellFreq)
  .br
  \fB1\fP : Default Beep
  .br
  \fB2\fP : Critical Stop
  .br
  \fB3\fP : Question
  .br
  \fB4\fP : Exclamation
  .br
  \fB5\fP : Asterisk
  .RE
E - \fBWave\fP (BellFile=): 
E - Wave (BellFile=) : 
E The popup menu offers wave files as stored in a resource subdirectory 
E \fIsounds\fP for selection. The option can also be set 
E to a filename (like D:/.../soundfile.wav); this can be achieved also 
E by drag-and-drop from a local file.
C 弹出菜单提供存储在资源子目录 \fBsounds\fP 选择波文件。还可以将该选项设置为文件名(如
C d:/.../soundfile.wav) ; 这也可以通过从本地文件中拖放来实现。
E This setting overrides the Bell system sound except No Beep.
C 这个设置覆盖了系统的声音,除了没有哔哔声。
  .br
E - \fBBell volume wave files\fP (BellFile2= ... BellFile7=): 
E Alternative wave files can be set in the config file for bell volumes 
E 2 ... 7 as set by the escape sequence DECSWBV.
E The general BellFile setting corresponds to bell volume 8 (default).
C - \fBBell volume wave 文件\fP(BellFile2=... BellFile7=) : 
C 可以在 Bell volume 2... 7的配置文件中设置替代wave文件,该配置文件由转义序列
C DECSWBV 设置。常规 BellFile设置对应于 bell volume 8(默认值)。
  .br
E - \fBPlay\fP: The button plays the selected sound for testing.
E The sound is also played when it is changed.
C - \fBPlay\fP : 播放所选择的声音进行测试。当声音改变时也会播放。
  .br
E - \fBFlash\fP (BellFlash=no): Briefly flash the terminal or window.
E (Corresponds to the xterm resource \fBvisualBell\fP.)
C - \fB闪烁\fP(BellFlash=no) : 简短地闪烁终端或窗口。(对应于 xterm 资源 visualBell.)
  .br
E - \fBFlash style\fP (BellFlashStyle=4): Tune the style to flash the 
E terminal or window; this is a bitmask composed of the following values:
C - \fB闪烁类型\fP(BellFlashStyle=4) : 调整样式以闪烁终端或窗口; 这是一个位掩码,由以
C   下值组成:
  .RS
E \fB1\fP : Flash the window frame (using Windows)
C \fB1\fP: 闪光窗口边框(使用 Windows)
  .br
E \fB2\fP : Flash the outer character cells; not recommended;
E   will look ragged with double-width characters
C \fB2\fP: 闪光外部字符单元格; 不推荐; 将看起来参差不齐与双宽字符
  .br
E \fB4\fP : Flash the whole terminal pane (all character cells)
C \fB4\fP: 闪光整个终端窗格(所有字符单元格)
  .br
E \fB8\fP : cell flash briefly inverts foreground and background;
E   default is to moderately brighten the background colour
C \fB8\fP: 单元格闪光短暂反转前景和背景; 默认是适度提亮背景颜色
  .br
E \fB12\fP : (combining 4 and 8) classic bright full flash
C \fB12\fP: (结合4和8)经典的明亮全闪光
  .RE
E - \fBHighlight in taskbar\fP (BellTaskbar=yes): Change the colour of mintty's
E taskbar entry if the mintty window is not active.
E (Corresponds to the xterm resource \fBbellIsUrgent\fP, 
E switchable by an escape sequence.)
C - \fB在任务栏中高亮显示\fP(BellTaskbar=yes) : 如果 mintty 窗口不活动,则更改 mintty
C   任务栏条目的颜色。(对应于 xterm 资源 bellIsUrgent,可通过转义序列切换。)
  .br
E - \fBPopup on bell\fP (BellPopup=no): Popup mintty to desktop foreground.
E (Corresponds to the xterm resource \fBpopOnBell\fP, 
E switchable by an escape sequence.)
C - \fB弹出\fP(BellPopup=no) : 弹出 mintty 到桌面前台。(对应于 xterm 资源 popOnBell,
C   可通过转义序列切换。)
  .br
E - \fBMinimum delay between bells\fP (BellInterval=100): Multiple bells within this many milliseconds will sound as one.
E (Corresponds to the xterm resource \fBbellSuppressTime\fP.)
C - \fB铃声之间的最小延迟\fP(BellInterval=100) : 在这么多毫秒内的多个钟声发出一个钟声
C   。(对应于 xterm 资源 bellSuppressTime.)
  .br

E A simple \fBfrequency beep\fP can be configured in the configuration file 
E or on the command line:
C 可以在配置文件或命令行上配置一个简单的\fB频率提示音\fP:
  .br
E - (BellFreq=0): Beep sound frequency (overrides system sounds).
C - (BellFreq=0): 提示音频(重写系统声音)。
  .br
E - (BellLen=400): Beep sound length (applies to frequency beep).
C - (BellLen=400): Beep 声音长度(适用于频率 Beep)。
  .RE

  .TP
E \fBPlay Sound tone\fP (PlayTone=2)
C \fB播放声音\fP(PlayTone=2)
E This setting preselects the sound tone used for the DECPS "Play Sound" 
E note playing escape sequence. Tones 1 to 5 are currently defined, 1 is a 
E sine waveform. These are only effective if the audio output library 
E \fIlibao\fP is installed.
C 这个设置预先选择的声音基调用于 DECPS 的"播放声音"音符播放转义序列。音调1至5目前
C 定义,1是一个正弦波形。只有安装了音频输出库 \fBlibao\fP,这些方法才有效。
E Value 0 (also the fallback) resorts to the Windows Beep function.
C Value 0(也是回退)使用 Windows Beep 函数。

  .TP
E \fBPrinter\fP (Printer=)
C \fB打印机\fP(Printer=)
E The ANSI standard defines control sequences ("Media Copy") for sending 
E text to a printer,which are used by some terminal applications such as 
E the mail reader \fBpine\fP.
C ANSI 标准定义了用于将文本发送到打印机的控制序列(" Media Copy") ,一些终端应用程
C 序(如邮件阅读器 \fBpine\fP)使用这些序列。
E The Windows printer to send such text to can be selected here.
C 这里可以选择要发送此类文本的 Windows 打印机。
E By default, printing is disabled.
C 默认情况下,禁用打印。
E If printing gets disabled in the Options menu, an active print connection 
E will be ended; if the printer is changed, an active print connection 
E will be continued with the previous printer.
C 如果在"选项"菜单中禁用打印,则将终止活动的打印连接; 
C 如果打印机更改,则将继续与前一台打印机进行活动的打印连接。

  .TP
E \fBPrompt about running processes on close\fP (ConfirmExit=yes)
C \fB关于在 close 上运行进程的提示\fP(ConfirmExit=yes)
E If enabled, ask for confirmation when the close button or \fIAlt+F4\fP is 
E pressed and the command invoked by mintty still has child processes.
C 如果启用,请在按下关闭按钮或 \fBAlt+f4\fP并且 mintty 调用的命令仍有子进程时请求确认。
E This is intended to help avoid closing programs accidentally.
C 这是为了避免意外地关闭程序。
E If possible, mintty also displays a list of running child processes, 
E using the procps command if installed, or the ps command.
C 如果可能的话,mintty 还会显示一个正在运行的子进程列表,在安装时使用 procps 命令或 ps 命令。

  .TP
E \fBSuppress properties and features controlled by escape sequences\fP
C \fB抑制转义序列控制的属性和特征\fP
E Using these options, the listed feature numbers are suppressed.
E Each option may contain a comma-separated list of respective numbers.
E Usage of these options is discouraged; users are not entitled to 
E complain about side effects.
C 使用这些选项,列出的特性数字将被抑制。每个选项可能包含一个以逗号分隔的各自编号列
C 表。不鼓励使用这些选项; 用户无权抱怨副作用。
  .RS
E - (SuppressSGR=) Character attributes (CSI ... m).
C - (suppressgr=)字符属性(CSI... m)。
  .br
E - (SuppressDEC=) DECSET private modes (CSI ? ... h/l).
C - (SuppressDEC=) DECSET 私有模式(CSI？... h/l).
  .br
E - (SuppressWIN=) Window operations (CSI ... t); 24 means >= 24.
E - (SuppressWIN=) Window operations (CSI... t) ; 24 means >=24.
  .br
E - (SuppressOSC=) Window configuration commands (OSC ... ST).
C - (suppresosc=)窗口配置命令(OSC... ST)。

E See \fIhttps://github.com/mintty/mintty/wiki/Tips#text-attributes-and-rendering\fP
E for an overview of SGR attributes.
C 请参阅 https://github.com/mintty/mintty/wiki/tips#text-attributes-and-rendering,
C 关于 SGR 属性的概述。
  .br
E See \fIhttp://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\fP
E for a full listing of escape control sequences.
C 请参阅 http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt 转义控制序列的完整
C 列表。
  .br
E For some of the option values, more specific configuration parameters exist:
C 对于某些选项值,存在更具体的配置参数:
  .br
  - AllowBlinking=false \(<> SuppressSGR=5,6
  .br
  - Enable132ColumnSwitching=false \(~~ SuppressDEC=3 (permanent)
  .br
  - NoAltScreen=true \(~~ SuppressDEC=47,1047,1048,1049 (switchable)
  .br
  - AllowSetSelection=false \(<> SuppressOSC=52
  .RE

  .TP
E \fBSuppress mouse wheel\fP (SuppressMouseWheel=)
C \fB取消鼠标滚轮\fP(SuppressMouseWheel=)
E With this setting, certain effects of mouse wheel rolling can be disabled.
E The option is a list of action tags:
C 使用此设置,可以禁用鼠标滚轮滚动的某些效果。选项是一个动作标记列表:
  .RS
  - \fBscrollwin\fP do not mouse-scroll the scrollback buffer (scrollbar not affected)
  .br
  - \fBscrollapp\fP do not simulate scrolling in applications by sending cursor escape sequences
  .br
  - \fBzoom\fP do not mouse-zoom font size (same as ZoomMouse=no)
  .br
  - \fBreport\fP do not report mouse wheel events in application mouse modes
  .RE

  .SS
E \fBCommand line\fP
C \fB命令行\fP
E The settings here are config file versions of command line options
E described in the OPTIONS section.  They do not appear in the Options dialog.
C 这里的设置是 OPTIONS 部分描述的命令行选项的配置文件版本。它们不会出现在"选项"对
C 话框中。

  .TP
E \fBHolding the window open\fP (Hold=start)
C \fB保持窗口打开\fP(Hold=start)
E The \fBHold\fP setting determines whether to keep the terminal window open when
E the command has finished and no more processes are connected to the terminal.
E It takes the following values:
C Hold 设置决定当命令完成且没有更多进程连接到终端时是否保持终端窗口打开。它采用以
C 下值:
  .br
E - \fBnever\fP: Don't keep the window open.
C -never: 不要打开窗口。
  .br
E - \fBstart\fP: Only keep the window open if the command exited with
E status 255, which is used to indicate failure to start the command.
E This is the default.
C - start: 只有当命令以状态255退出时才保持窗口打开,状态255用于指示启动命令失败。这是默认的。
  .br
E - \fBerror\fP:  Keep the window open if the command exited with a non-zero
E status or it was terminated by a signal indicating a runtime error.
C - error: 如果该命令以非零状态退出,或者该命令由于表示运行时错误的信号而终止,则保持窗口打开。
  .br
E - \fBalways\fP: Always keep the window open.
C - always: 总是保持窗户开着。

  .TP
E \fBWindow icon\fP (Icon=)
C \fB窗口图标\fP(图标=)
E The \fBIcon\fP setting with format \fIFILE\fP[\fB,\fP\fIINDEX\fP] allows to load
E the window icon from an executable, DLL, or icon file.
E The optional comma-separated index can be used to select a particular icon in
E a file with multiple icons.
C 使用格式为 \fIFILE\fP [ ,\fIINDEX\fP ]的 \fBIcon\fP 设置允许从可执行文件、 DLL 或图标文件加载窗口
C 图标。可选的逗号分隔索引可用于在一个有多个图标的文件中选择特定的图标。

E If the setting is empty, as it is by default, mintty's program icon is used, 
E unless mintty was invoked from a desktop shortcut in which case it uses 
E the shortcut icon.
C 如果设置为空(默认情况下为空) ,则使用 mintty 的程序图标,除非从桌面快捷方式调用
C mintty,否则它将使用快捷方式图标。

E For interaction problems of icon, shortcut, and the Windows taskbar, 
E see the note for the -i option above.
C 有关图标、快捷方式和 Windows 任务栏的交互问题,请参阅上面关于 -i 选项的说明。

  .TP
E \fBLog file\fP (Log=)
C \fB日志文件\fP(Log=)
E The \fBLog\fP setting can be used to specify a log file that all output is
E copied into.  If it is empty, as it is by default, no logging is done.
E If it contains \fB%d\fP it will be substituted with the process ID.
E If it contains \fB%\fP placeholders other than a single \fB%d\fP, 
E the log file name will be constructed by calling strftime(3) on the 
E pattern; note that this is likely to fail if a placeholder expands with 
E "/" (%D).
C 设置 \fBlog\fP 可用于指定将所有输出复制到其中的日志文件。如果它是空的,因为默认情况下是
C 空的,那么不会执行日志记录。如果它包含\fB%d\fP,它将被进程 ID 替换。如果它包含除了单个
C \fB%d\fP  之外的\fB%\fP占位符,那么将通过调用模式上的 strftime (3)来构造日志文件名; 请注意,
C 如果占位符扩展为"/"(%D) ,这可能会失败。

E If the log file name is a relative path name, it is relative from the 
E working directory mintty was started in. To avoid failure to create a 
E log file (especially when starting from the Start menu), the following 
E tweak is applied: If mintty was started from a Windows shortcut with 
E no working directory ("Start in:") specified and the effective start 
E directory is within the Windows system directory hierarchy, 
E mintty changes to the user's home directory first, 
E except in WSL support mode where %LOCALAPPDATA%/Temp is used.
C 如果日志文件名是一个相对路径名,那么它是相对于启动的工作目录文件名的。为了避免创
C 建日志文件失败(特别是从开始菜单开始时) ,应用了以下调整: 如果 mintty 是从
C Windows 快捷方式启动的,没有指定工作目录(" Start in:") ,并且有效的开始目录位于
C Windows 系统目录层次结构中,mintty 首先更改用户的主目录,除了在 WSL 支持模式中使
C 用% LOCALAPPDATA%/Temp。

E Note: If the requested log file exists already, mintty does not overwrite it 
E but reports an error. To configure logging in the config file, use some 
E \fB%\fP placeholders to create distinct log files.
C \fB注意:\fP  如果请求的日志文件已经存在,mintty 不会覆盖它,但会报告错误。若要在配置文
C 件中配置日志记录,请使用一些\fB% \fP占位符来创建不同的日志文件。
E Note that logging can be toggled from the extended context menu.
C 注意,可以从扩展的上下文菜单切换日志记录。

E See also the \fIscript\fP(1) utility for a more flexible logging solution.
C 有关更灵活的日志记录解决方案,请参见脚本(1)实用程序。

  .TP
E \fBLogging initially enabled\fP (Logging=yes)
C \fB最初启用日志记录\fP(Logging=yes)
E Disabling this setting disables logging initially.
E If a log file name is specified with \fBLog=...\fP and \fBLogging=no\fP,
E logging can be enabled (and toggled) from the extended context menu.
C 禁用此设置最初将禁用日志记录。如果日志文件名是用 \fBLog=...\fP 和\fBLogging=no\fP 指定
C 的,那么可以从扩展的上下文菜单中启用(并切换)日志记录。

  .TP
E \fBFilenames for screen saving\fP (SaveFilename=mintty.%Y-%m-%d_%H-%M-%S)
C \fB屏幕保存的文件名\fP(SaveFilename=mintty.% y -% m -% d _% h -% m -% s)
E This setting selects the location and filename pattern (which is expanded 
E with the strftime(3) function) for .html and .png screen dumps.
E An initial home prefix or environment variable prefix is expanded (POSIX 
E path and variable syntax needs to be used in this case). Examples:
C 这个设置选择位置和文件名模式(通过 strftime (3)函数展开).Html 和.Png 屏幕转储。初
C 始的 home 前缀或者环境变量前缀被扩展(在这种情况下需要使用 POSIX 路径和变量语法)
C 。例如:
  .br
  - \fBSaveFilename=~/mintty.%Y-%m-%d_%H-%M-%S\fP
  .br
  - \fBSaveFilename=$USERPROFILE/Pictures/mintty/%Y-%m-%d_%H-%M-%S\fP

E Note that if the filename pattern is a relative pathname (as is the default),
E it will be taken as relative to the working directory mintty was started in,
E with some tweaks as described above for the Log file.
C 请注意,如果文件名模式是一个相对路径名(作为默认值) ,它将被视为相对于工作目录文
C 件 mintty 的启动,并作出一些调整,如上所述的日志文件。

  .TP
E \fBWindow title\fP (Title=)
C \fB窗口标题\fP(Title=)
E The \fBTitle\fP setting can be used to determine the initial window title.
E If it is empty, as it is by default, the title is set to the command being run.
C Title 设置可用于确定初始窗口标题。如果它是空的(默认情况下为空) ,则标题将设置为
C 正在运行的命令。

  .TP
E \fBUtmp record\fP (Utmp=no)
C \fBUtmp 记录\fP(Utmp=no)
E If enabled, an entry for the session is written into the system's \fIutmp\fP
E file for recording logins, so that the session appears for example in the
E output of the \fIwho\fP(1) utility.
C 如果启用,会话的条目将写入系统的 utmp 文件中以记录登录,这样会话就会出现在 who
C (1)实用程序的输出中。

  .TP
E \fBInitial window state\fP (Window=normal)
C \fB初始窗口状态\fP(Window=normal)
E This setting determines how the terminal window should be shown at startup:
C 这个设置决定了终端窗口在启动时应该如何显示:
  .br
E - \fBnormal\fP (default)
C -normal (默认值)
  .br
E - \fBmin\fP (minimized)
C -min (最小化)
  .br
E - \fBmax\fP (maximized)
C -max (最大化)
  .br
E - \fBfull\fP (full screen)
C -full (全屏)
  .br
E - \fBhide\fP (invisible)
C -hide (不可见)

  .TP
E \fBWindow position\fP (X=, Y=)
C \fB窗口位置\fP(x=,y=)
E \fBX\fP and \fBY\fP are integer settings that can be used to determine the
E initial coordinates of the top left corner of the terminal window.
E By default, these are unset, which means that the position suggested by the
E window manager is used.
C X 和 y 是整数设置,可用于确定终端窗口左上角的初始坐标。默认情况下,这些是未设置
C 的,这意味着使用了窗口管理器建议的位置。
E Setting only one of X, Y is not supported.
C 不支持只设置 x,y 中的一个。

  .TP
E \fBWindow class name\fP (Class=mintty)
C \fB窗口类名\fP(Class=mintty)
E The \fBClass\fP setting determines the name of the window class of the terminal window.
E It can be used to distinguish or group different mintty windows, or tab sets, e.g. for 
E the mintty session switcher, or for Windows scripting tools such as AutoHotKey.
C Class 设置确定终端窗口的窗口类的名称。它可以用来区分或分组不同的 mintty 窗口,或
C 者 tab 集,例如 mintty 会话切换器,或者 Windows 脚本工具,例如 AutoHotKey。

E For a flexible grouping configuration, the Class option supports the 
E same \fB%s\fP placeholder parameters as the AppID option.
C 对于灵活的分组配置,Class 选项支持与 AppID 选项相同的% s 占位符参数。

  .SS
E \fB"Hidden" settings\fP
C \fB隐藏设置\fP
E The following settings appear neither in the Options dialog nor as command line
E options, which means they can only be set in config files or using the
E \fB--option\fP or \fB-o\fP command line option.
C 以下设置既不显示在选项对话框中,也不显示在命令行选项中,这意味着它们只能在配置文
C 件中设置,或者使用 --option 或-o 命令行选项。

  .TP
E \fBOptions dialog custom font and size\fP (OptionsFont=, OptionsFontHeight=0)
C \fB选项对话框自定义字体和大小\fP(OptionsFont=,OptionsFontHeight=0)
E These settings change the font and fontsize in the Options dialog.
E (Note that scaling a custom font in the Options dialog when changing the 
E screen resolution does not work, so Options is closed in this case.)
C 这些设置会改变"选项"对话框中的字体和字号。(请注意,在更改屏幕分辨率时缩放
C Options 对话框中的自定义字体不起作用,因此在这种情况下关闭了 Options。)

  .TP
E \fBCustomize Options dialog\fP (OldOptions=)
C \fB自定义选项对话框\fP(OldOptions=)
E Listing comma-separated tags in this setting will disable extended or 
E enhanced parts of the Options dialog.
C 清单中的逗号分隔标记将禁用 Options 对话框的扩展部分或增强部分。
  .br
E - \fBbold\fP Disable "Show bold" section with "xterm" pseudo option.
C - bold 禁用" Show bold"部分
  .br
E - \fBblinking\fP Disable "Allow blinking".
C - blinking 禁用"Allow blinking".
  .br
E - \fBemoji\fP Disable emoji style section in "Text" panel.
C - emoji 禁用"文本"面板中的表情符号风格部分。
  .br
E - \fBselection\fP Disable separate "Selection" panel.
C - selection 关闭的"选择"面板。

  .TP
E \fBAccelerate display speed\fP (DisplaySpeedup=6)
C \fB加速显示速度\fP(DisplaySpeedup=6)
E If mintty processes high volume of output, it will skip up to the given 
E number of refresh intervals (of 16ms each) in order to save output that 
E is visually scrolled off right away, so effectively increasing output speed.
E The maximum value is 9.
C 如果 mintty 处理大量的输出,它将跳过给定的刷新间隔数(每次16毫秒) ,以节省可视化
C 滚动的输出,从而有效地提高了输出速度。最大值为9。

  .TP
E \fBDecelerate display speed to virtual serial transmission rate\fP (Baud=0)
C \fB减慢显示速度到虚拟串行传输速率\fP(波特=0)
E This setting can demonstrate a legacy feeling of a serial terminal connection.
E Typical baud rates (as supported by DEC VT420) were 
E 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 56700, 76800, 115200.
C 此设置可以显示串行终端连接的遗留感觉。典型波特率(由 DEC vt420支持)为
C 300,600,1200,2400,4800,9600,19200,38400,56700,76800,115200。

  .TP
E \fBBloom effect around characters\fP (Bloom=0)
C \fB开花效果围绕字符\fP(Bloom= 0)
E This setting enables a rough simulation of old CRT terminals' bloom effect.
C 这种设置可以粗略模拟老式 CRT 终端的开花效果。

  .TP
E \fBClear selection highlighting on input\fP (ClearSelectionOnInput=true)
C \fB在输入上清除选择高亮显示\fP(ClearSelectionOnInput=true)
E When this is disabled, keyboard input or pasting does not clear selection highlighting.
C 当禁用时,键盘输入或粘贴不清除的选择突出显示。

  .TP
E \fBErase top lines into scrollback buffer\fP (EraseToScrollback=true)
C \fB将顶行删除到回滚缓冲区\fP(EraseToScrollback=true)
E With this setting, lines cleared in the top part of the screen are scrolled 
E into the scrollback buffer, so they can be restored.
C 使用此设置,屏幕顶部清除的行将滚动到滚动缓冲区中,以便恢复它们。
E (Corresponds roughly to the xterm resource \fBcdXtraScroll\fP.)
C (大致相当于xterm 资源 cdXtraScroll.)

  .TP
E \fBSuspend output while selecting\fP (SuspendWhileSelecting=8080)
C \fB选择时挂起输出\fP(SuspendWhileSelecting= 8080)
E During drag-selects, the user may want the screen to hold still 
E to be selected from. Mintty can suspend processing of terminal output 
E for a while; if the buffer exceeds the size configured with this parameter 
E (in bytes), output is flushed. Setting it to 0 disables the feature.
C 在拖动选择过程中,用户可能希望屏幕保持不动,以便从中选择。Mintty 可以暂停终端输
C 出的处理一段时间; 如果缓冲区超过了用这个参数配置的大小(以字节为单位) ,则刷新输
C 出。将其设置为0将禁用该特性。

  .TP
E \fBTrim trailing space from selection on copy\fP (TrimSelection=true)
C \fB复制时中删除尾随空格\fP(TrimSelection=true)
E When this is disabled, trailing space that was written to the terminal 
E in a line is included in the selection buffer.
C 如果禁用此选项,则在选择缓冲区中包含写入行中终端的尾随空格。
E (Corresponds to the xterm resource \fBtrimSelection\fP.)
C (对应于 xterm 资源trimSelection。)

  .TP
E \fBSelection size indication\fP (SelectionShowSize=0)
C \fB选择大小指示\fP(SelectionShowSize=0)
E The current selection size can optionally been indicated with a popup, 
E with a value between 1 and 12, setting the popup position by clock hour.
C 当前的选择大小可以选择性地用一个弹出窗口表示,其值在1到12之间,按时钟小时设置弹
C 出窗口的位置。

  .TP
E \fBShow hyperlink in window title when hovering\fP (HoverTitle=true)
C \fB当鼠标悬停时,在窗口标题中显示超链接\fP(HoverTitle=true)
E With this setting, display of an explicit hyperlink (OSC 8 attribute) 
E in the window title when hovering can be disabled.
C 使用此设置,当停用鼠标悬停时,在窗口标题中显示一个显式的超链接(osc8属性)。

  .TP
E \fBShow automatic progress bar\fP (ProgressBar=0)
C \fB显示自动进度条\fP(ProgressBar=0)
E This setting initially enables a progress indication on the taskbar icon, 
E based on automatic progress detection: if the current cursor line contains 
E a percent indication (x%) and a subsequent relative positioning (e.g. a CR 
E return character) like in text progress indications, it will be notified 
E via progress bar in one of three levels 1 (green), 2 (yellow), 3 (red).
E Note that the progress bar can also be switched or even controlled by an 
E escape sequence.
C 这个设置最初启用了基于自动进度检测的任务栏图标上的进度指示: 如果当前光标行包含百
C 分比指示(x%)和后续的相对定位(例如 CR 返回字符) ,就像文本进度指示一样,它将通过
C 三个级别中的一个级别1(绿色)、2(黄色)、3(红色)的进度条得到通知。注意,进度条也可
C 以通过转义序列进行切换甚至控制。

  .TP
E \fBSingle-dash long options\fP (ShortLongOpts=false)
C \fB单破折号长选项\fP(ShortLongOpts=false)
E This settings enables names options ("long options") on the command line 
E to be given with only one dash rather than a double dash.
C 这种设置使命令行上的名称选项(" long options")只用一个破折号而不是双破折号给出。

  .TP
E \fBDisplay control characters\fP (PrintableControls=0)
C \fB显示控制字符\fP(printablecontrol=0)
E Controls characters are non-printing by default and as specified by 
E the locale width. Setting PrintableControls=1 enables visual indication of 
E "C1" control characters (range U+80...U+9F); PrintableControls=2 would 
E also make "C0" (normal) control characters visible.
C 控件字符在默认情况下是非打印的,并由区域设置宽度指定。设置 printablecontrol=1
C 可以直观显示" C1"控制字符(范围 u+80... u+9f) ; printablecontrol=2还可以显
C 示" C0"(正常)控制字符。
E (Value 1 corresponds to the xterm resource \fBallowC1Printable\fP.)
C (值1对应于 xterm resource allowC1Printable.)

E \fIWarning:\fP With this option, control character display is inconsistent 
E with width assumptions of the \fBwcwidth\fP function, which may confuse 
E screen applications (such as editors) that rely on \fBwcwidth\fP information.
C 警告: 使用此选项,控件字符显示与 wcwidth 函数的宽度假设不一致,这可能会混淆依赖
C wcwidth 信息的屏幕应用程序(如编辑器)。

  .TP
E \fBCharacter narrowing factor\fP (CharNarrowing=75)
C \fB字符缩小因子\fP(CharNarrowing=75)
E Depending on the font and font fallback (either by Windows means or 
E via option \fBFontChoice\fP), some glyphs may be too wide for the 
E character cell grid. Mintty applies automatic narrowing heuristics 
E to fit such glyphs into a character cell so they do not overlap 
E subsequent characters.
C 根据字体和字体回退(通过 Windows 手段或通过选项 FontChoice) ,某些字形对于字符单
C 元格网格来说可能过宽。Mintty 应用自动缩小试探法将这些标志符号适合到一个字符单元
C 格中,这样它们就不会重叠后续的字符。
E With this setting, the horizontal scaling for narrowed characters can 
E be adjusted between 50% and 100%.
C 使用此设置,缩小字符的水平缩放可以在50% 到100% 之间调整。

  .TP
E \fBBidirectional rendering\fP (Bidi=2)
C \fB双向渲染\fP(Bidi=2)
E With this option, bidi rendering support can be disabled conditionally 
E or completely. Note that this can also be changed by an escape sequence.
E Also there is another escape sequence to disable bidi per screen line.
C 使用这个选项,可以有条件地或完全地禁用 bidi 呈现支持。注意,这也可以通过转义序列
C 来改变。另外还有另一个转义序列来禁用每屏幕行的 bidi。
  .br
E - \fB0\fP Disable bidi completely.
C - 0完全禁用 bidi。
  .br
E - \fB1\fP Disable bidi on alternate screen, support it on normal screen.
C - 1禁用备用屏幕上的 bidi,支持它在正常屏幕上。
  .br
E - \fB2\fP Enable bidi (default).
C - 2启用 bidi (默认值)。

  .TP
E \fBApplication ID\fP (AppID=)
C \fB应用程序 ID \fP(AppID=)
E Windows 7 and above use the application ID for grouping taskbar items.
E By default this setting is empty, in which case Windows groups taskbar
E items automatically based on their icon and command line.  This can be
E overridden by setting the AppID to a custom string, in which case windows
E with the same AppID are grouped together.
C Windows 7及以上版本使用应用程序 ID 对任务栏项进行分组。默认情况下,此设置为空,
C 在这种情况下,Windows 将根据任务栏项的图标和命令行自动对其进行分组。这可以通过将
C AppID 设置为自定义字符串来重写,在这种情况下,将具有相同 AppID 的窗口组合在一起
C 。

E The AppID option supports up to 5 \fB%s\fP placeholder parameters for 
E a flexible grouping configuration, also supporting positional parameters 
E \fB%N$s\fP (N=1..5), to be replaced with these values:
C AppID 选项为灵活的分组配置支持多达5% s 占位符参数,还支持位置参数%n$s (n=1。.
C 5) ,要替换为这些值: 
  .br
E - \fB%1$s\fP: system name (e.g. \fBCYGWIN\fP)
C -%1$s: 系统名称(例如 CYGWIN) 
  .br
E - \fB%2$s\fP: system release
C -%2$s: 系统版本 
  .br
E - \fB%3$s\fP: machine type (\fBi686\fP/\fBx86_64\fP)
C -%3$s: 机器类型(i686/x86_64) 
  .br
E - \fB%4$s\fP: icon name if started from shortcut
C -%4$s: 图标名如果从快捷方式 
  .br
E - \fB%5$s\fP: WSL distribution name if selected
C -%5$s: 则为 WSL 分发名称

E The special value \fBAppID=@\fP causes mintty to derive an implicit AppID 
E from the WSL system name, in order to achieve WSL distribution-specific 
E taskbar grouping. This resolves taskbar grouping problems in some cases 
E (wsltty issue #96) but causes similar problems in other cases (issue #784).
C 特殊值 AppID=@导致 mintty 从 WSL 系统名称派生隐式 AppID,以实现 WSL 分布特定的
C 任务栏分组。这解决了某些情况下的任务栏分组问题(wslty 问题 # 96) ,但在其他情况下
C 也会导致类似的问题(问题 # 784)。

E \fIWarning:\fP Using this option for a mintty window started from 
E a Windows shortcut (desktop, taskbar, start menu) may 
E cause trouble with taskbar grouping behaviour. If you need to do that, 
E the shortcut itself should also get attached with the same AppId.
C 警告: 对于从 Windows 快捷方式(桌面、任务栏、开始菜单)启动的 mintty 窗口,使用此
C 选项可能会导致任务栏分组行为出现问题。如果你需要这样做,快捷方式本身也应该使用相
C 同的 AppId。

E \fINote:\fP Since 2.9.6, if mintty is started via a Windows shortcut 
E which has its own AppID, it is reused for the new mintty window in order 
E to achieve proper taskbar icon grouping. This takes precedence over an 
E explicit setting of the AppID option.
C \fB注意:\fP  从2.9.6开始,如果 mintty 是通过一个 Windows 快捷方式启动的,这个快捷方式有
C 自己的 AppID,它会被重用到新的 mintty 窗口中,以实现适当的任务栏图标分组。这优先
C 于 AppID 选项的显式设置。

E \fIExplanation:\fP Note that Windows shortcut files have their own AppID.
E Hence, if an AppID is specified in the mintty settings, but not on a 
E taskbar-pinned shortcut for invoking mintty, clicking the pinned 
E shortcut will result in a separate taskbar item for the new mintty window, 
E rather than being grouped with the shortcut.
C 说明: 注意,Windows 快捷方式文件有自己的 AppID。因此,如果在 mintty 设置中指定了
C AppID,而不是在调用 mintty 的任务栏固定快捷方式上,单击固定快捷方式将为新的
C mintty 窗口生成一个单独的任务栏项,而不是按快捷方式分组。

E \fIHint:\fP To avoid AppID inconsistence and thus ungrouped taskbar icons,
E the shortcut's AppID should to be set to the same string as the mintty AppID, 
E which can be done using the \fBwinappid\fP utility available in 
E the mintty utils repository \fIhttps://github.com/mintty/utils\fP.
E As noted above, since mintty 2.9.6, the mintty AppID does not need to be set 
E anymore in this case.
C 提示: 为了避免 AppID 不一致,从而导致任务栏图标未分组,快捷方式的 AppID 应该设置
C 为与 mintty AppID 相同的字符串,这可以通过 mintty utils 存储库
C https://github.com/mintty/utils 中的 winappid 工具来完成。如上所述,由于 mintty
C 2.9.6,在这种情况下不需要再设置 mintty AppID。

  .TP
E \fBApplication Taskbar Shortcut Title\fP (AppName=)
C \fB应用程序任务栏快捷标题\fP(AppName=)
E The title of the taskbar shortcut (since Windows 7). If the shortcut is pinned, 
E the title is kept only if it was made persistent as described for AppLaunchCmd.
C 任务栏快捷方式的标题(自 Windows 7以来)。如果快捷键被固定,那么只有当标题像
C AppLaunchCmd 描述的那样被持久化时,标题才会被保留。

  .TP
E \fBApplication Taskbar Shortcut Launch Command\fP (AppLaunchCmd=)
C \fB应用程序任务栏快捷启动命令\fP(AppLaunchCmd=)
E The command to use if a shortcut pinned to the Windows taskbar is invoked.
E This is only effective if combined with an AppName option and the 
E command-line option --store-taskbar-properties to make it persistent.
E It should also be combined with an explicit and unique AppID.
C 调用固定在 Windows 任务栏上的快捷方式时使用的命令。
C 这只有在与 AppName 选项和命令行选项 --store-taskbar-properties 结合使用以使其持
C 久化时才有效。它还应该与一个显式且唯一的 AppID 组合在一起。

E \fINote:\fP The command must be given in Windows pathname syntax (e.g. 
E AppLaunchCmd=\(aqC:\\cygwin\\bin\\mintty -T mytitle -\(aq).
C \fB注意:\fP  命令必须使用 Windows 路径名语法(例如 
C AppLaunchCmd="c:\\cygwin\\bin\\mintty -T mytitle - ")。

E \fINote:\fP An explicit icon supplied with the -i option can also be stored 
E with the persistent properties; note, however, that for this purpose, 
E it must be given in Windows pathname syntax and it must include a 
E resource index; also, for consistent appearance, another -i option 
E referring to the same icon should be included in the AppLaunchCmd 
E (if the mintty invocation does not include an icon parameter but was 
E started from a desktop shortcut, the icon in the AppLaunchCmd should 
E be consistent with that one, respectively).
C \fB注意:\fP  与-i 选项一起提供的显式图标也可以与持久属性一起存储; 但是,注意,为了这个
C 目的,必须在 Windows 路径名语法中给出它,并且它必须包含一个资源索引; 另外,为了
C 一致的外观,applunchcmd 中应该包含引用相同图标的另一个-i 选项(如果 mintty 调用不
C 包含图标参数,而是从桌面上启动的,则 applunchcmd 中的图标应该分别与该图标一致)。

E Example:
C 例如:
E mintty -o AppID=Mintty.PinTest.1 -o AppName=Mintty.PinTest -o AppLaunchCmd="C:\\cygwin\\bin\\mintty -i /cygdrive/c/Windows/System32/calc.exe -" -i C:\\Windows\\System32\\calc.exe,0 --store-taskbar-properties -

E \fBWarning:\fP Once made persistent, the stored properties associated with 
E a specific AppID cannot be removed or even modified again with normal means.
E For this reason, it is advisable to use temporary AppIDs for testing 
E (like MyMintty.1).
C 警告: 与特定 AppID 关联的存储属性一旦被持久化,将无法通过正常方式删除或甚至再次
C 修改。出于这个原因,建议在测试中使用临时 appid (如 MyMintty. 1)。

  .TP
E \fBStart shell in login mode if run from shortcut\fP (LoginFromShortcut=yes)
C \fB如果从快捷方式运行,则以登录模式启动 shell\fP(LoginFromShortcut=yes) 
E By default, mintty since version 347 will start its shell in login mode 
E if invoked via a Windows desktop or start menu shortcut unless this setting 
E is disabled.
C 默认情况下,如果通过 Windows 桌面或开始菜单快捷方式调用,mintty since version
C 347将以登录模式启动 shell,除非该设置被禁用。

  .TP
E \fBControl ConPTY support\fP (ConPTY=)
C \fB控件 ConPTY 支持\fP(ConPTY=)
E Setting this on or off enforces enabled or disabled support of pseudo console 
E for native Windows programs. The default is to leave it up to the default 
E of the system environment (cygwin or MSYS2).
C 设置此选项可以强制启用或禁用对本机 Windows 程序的伪控制台的支持。默认设置为系统
C 环境的默认设置(cygwin 或 MSYS2)。

  .TP
E \fBWord selection characters\fP (WordChars=)
C \fB单词选择字符\fP(WordChars=)
E By default, this string setting is empty, in which case double-click word
E selection uses the default algorithm that is geared towards picking out
E file names and URLs.
C 默认情况下,此字符串设置为空,在这种情况下,双击单词选择使用默认算法,该算法面向
C 挑选文件名和 url。

E If a string is specified here, word selection only picks out characters in the
E string along with alphanumeric characters.  For example, specifying just the
E underscore character (WordChars=_) would allow selecting identifiers in many
E programming languages.
C 如果在这里指定了字符串,那么单词选择只会挑出字符串中的字符以及字母数字字符。例如
C ,只指定下划线字符(WordChars=_)将允许在许多编程语言中选择标识符。

  .TP
E \fBWord selection exclusion characters\fP (WordCharsExcl=)
C \fB单词选择排除字符\fP(WordCharsExcl=)
E This string can list characters that are to be excluded from word selection.
C 此字符串可以列出要从单词选择中排除的字符。

  .TP
E \fBFiltering pasted text\fP (FilterPasteControls=)
C \fB过滤粘贴的文本\fP(FilterPasteControls=)
E With this setting, pasted text can be filtered for selected control 
E characters which are then replaced by space. Filtering is not applied 
E when Control is held while pasting. The option is a comma-separated list 
E of character tags:
C 使用此设置,可以为选定的控制字符筛选粘贴的文本,然后用空格替换这些字符。在粘贴控
C 件时不应用过滤。该选项是一个逗号分隔的字符标记列表:
  .br
  - \fBBS\fP Backspace
  .br
  - \fBHT\fP TAB
  .br
  - \fBNL\fP Line feed (new line)
  .br
  - \fBCR\fP Carriage return (enter)
  .br
  - \fBFF\fP Form feed
  .br
  - \fBESC\fP Escape
  .br
  - \fBDEL\fP DEL
  .br
E - \fBC0\fP other control characters < \(aq \(aq
C -c0 其他控制字符 <’
  .br
E - \fBC1\fP control characters 0x80...0x9F
C -c1 控制字符0x80... 0x9F 
  .br
E (Corresponds to the xterm resource \fBdisallowedPasteControls\fP.)
C (对应于 xterm resource disallowedpastecontrol)

  .TP
E \fBLine splitting in bracketed paste mode\fP (BracketedPasteByLine=0)
C \fB在括号内的粘贴模式下分行\fP(brackedpastebyline=0)
E In bracketed paste mode (which embeds pasted contents in bracketing 
E escape sequences), it can be considered a security issue for the command line 
E if bracket embedding is applied only for the whole paste buffer. Therefore 
E mintty provides a configurable feature to embed each new line in 
E bracket sequences individually, controlled by this setting.
C 在带括号的粘贴模式(将粘贴的内容嵌入到带括号的转义序列中)中,如果只对整个粘贴缓冲
C 区应用括号嵌入,则可以认为是命令行的安全问题。因此 mintty 提供了一个可配置的特性
C ,可以将每个新行单独嵌入到括号序列中,由此设置控制。
  .br
E - \fB0\fP never split paste contents by lines
C -0 从来不按行分割粘贴内容
  .br
E - \fB1\fP only split when not in alternate screen mode
C -1 不在交替屏幕模式时,按行分割粘贴内容
  .br
E - \fB2\fP always split paste contents by lines
C -2 总是按行分割粘贴内容

E \fINote:\fP This is meanwhile handled better by shell versions which 
E highlight and hold back the pasted text until confirmed, so for 
E consistent and uniform appearance, the default is 0 from mintty 3.5.2.
C \fB注意:\fP  同时,shell 版本可以更好地处理这个问题,它会突出显示粘贴的文本,并在确认之
C 前保留粘贴的文本,因此为了保持一致和统一的外观,默认值是 mintty 3.5.2中的0。

  .TP
E \fBSpecial key remapping\fP [DEPRECATED, see \fBKeyFunctions\fP]
C 特殊的键重映射[弃用,参见 KeyFunctions ]
E These options can attach a specific string to some special keys.
C 这些选项可以将一个特定的字符串附加到一些特殊的键上。
E If the string is a number, a corresponding Escape sequence will be generated, 
E applying Shift/Ctrl/Alt modifiers, following the pattern of function keys.
C 如果字符串是一个数字,则按照函数键的模式,应用 Shift/Ctrl/Alt 修饰符,生成相应的 Escape 序列。
  .br
E If the string value contains a single control character, some generic 
E Alt or Shift modification is applied.
C 如果字符串值包含单个控件字符,则应用一些通用的 Alt 或 Shift 修改。
E For \fBPause\fP and \fBBreak\fP, control characters are the default values, 
E they can be cleared with an empty assignment. For empty values, the default 
E layout of the keyboard is applied.
C 对于 Pause 和 Break,控件字符是默认值,可以使用空赋值清除它们。对于空值,将应用键盘的默认布局。
E The \fBBreak\fP key can also be assigned the traditional terminal line 
E Break function.
C \fBbreak\fP键也可以指定为传统的终端线中断函数。
  .br
  - \fBKey_Pause\fP=^] \fI(Ctrl+])\fP
  .br
  - \fBKey_Break\fP=^\\ \fI(Ctrl+\\)\fP
  .br
  - \fBKey_Menu\fP=
  .br
  - \fBKey_ScrollLock\fP=
  .br
E - \fBKey_PrintScreen\fP= \fI(key press event typically not sent)\fP
C - Key_printscreen=(按键事件通常不发送)

E Examples:
C 例如: 
  .br
E Key_Menu=29 would make the Menu key send the same escape sequence as in xterm
C Key_Menu=29 将使 Menu 键发送相同的转义序列,就像在 xterm 
  .br
E Key_Break=2 would turn the Break key into an Insert key
C Key_Break=2将 Break 键转换为 Insert Key 
  .br
E Key_Break=_BRK_ would assign the simulated terminal line Break function
C Key_Break=_BRK_ 将分配模拟的终端行 Break 函数一样

  .TP
E \fBUser-defined shortcuts (KeyFunctions=)\fP
C \fB用户定义的快捷方式\fP(KeyFunctions=)
E With this setting, function keys, modified function keys, and 
E Ctrl+Shift+key combinations can be mapped to invoke specific functions 
E or generate user-defined input.
C 通过这种设置,可以映射函数键、修改后的函数键和 Ctrl+Shift+组合键来调用特定函
C 数或生成用户定义的输入。
E The value is a series of semicolon-separated, colon-combined 
E pairs of key and action descriptors
E (if a semicolon shall be embedded into any of the action descriptors, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it).
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 这个值是一系列分号分隔的冒号组合的键和动作描述符对(如果在动作描述符中嵌入了分号
C ,则可以指定一个非空格控制字符(即没有 ^i ^j ^k ^l ^m)作为替代分隔符,方法是
C 用它启动整个设置)。如果分隔符后面跟有反斜杠、换行符和可选的空格缩进,则定义列表
C 可以拆分为多行。
  .br
E (Corresponds roughly to the xterm resource \fBtranslations\fP.)
C (大致相当于 xterm 资源\fBtranslations\fP。)

E Supported keys are described as follows:
C 支持的键描述如下:
  .br
E - function keys F1...F24
C -函数键 F1..。F24
  .br
E - modified function keys or special keys (see below), preceded with a 
E combination of C, A, S, W, U, Y, 
E indicating Ctrl, Alt, Shift, Win, Super, Hyper as combined with the key, 
E attached with a "+" separator, e.g. \fBCS+F9\fP;
E or a prefix "*" that applies the definition for all modified variations 
E of the key, e.g. \fB*Menu\fP
C -modified function keys or special keys (参见下文) ,前面带有 c,a,s,w,u,y
C 的组合,表示 Ctrl,Alt,Shift,Win,Super,Hyper 与 key 组合在一起,后面带有" +"
C 分隔符,例如:CS+F9或前缀"*",该前缀适用于键的所有修改变体的定义,例如:。*menu
  .br
E - special keys (some of which do not occur on typical keyboards) 
E and keypad keys, as well as modified special and keypad keys; 
E Space, Enter, Esc and Tab are only considered with at least one modifier
C -特殊按键(其中一些不会出现在典型的键盘上)和小键盘按键,以及经修饰的特别按键和小
C 键盘按键;空格,回车和tab只考虑至少一个修饰
    Esc, Tab
    Enter, KP_Enter
    Space, Back
    Pause, Break
    ScrollLock, NumLock, CapsLock
    (PrintScreen)
    LWin, RWin
    Menu
    Insert, KP_Insert
    Delete, KP_Delete
    Home, KP_Home
    End, KP_End
    Prior, KP_Prior
    Next, KP_Next
    Left, KP_Left
    Right, KP_Right
    Up, KP_Up
    Down, KP_Down
    KP_Begin \fI(the middle "5" key)\fP
    KP_Divide, KP_Multiply, KP_Subtract, KP_Add
    Select, Print, Exec, Help, Sleep, Attn
    CrSel, ExSel, ErEof
    Play, Zoom
  .br
E - any character reachable on the keyboard without Shift, considered if 
E pressed while Ctrl and Shift are also held; AltGr-generated characters 
E are supported; Alt and Win modifiers are supported, 
E e.g. \fBx\fP for Ctrl+Shift+x, \fBW+x\fP for Ctrl+Win+x, \fBAW+x\fP for Alt+Win+x
C -键盘上的任何字符,如果按下 Ctrl 和 Shift,也可以支持, altgr 生成的字符; 支持
C Alt 和 Win 修饰符,例如。X=Ctrl+Shift+x,w+x=Ctrl+Win+x,AW+x=
E Alt+Win+x

E \fINote:\fP A key that needs a modifier already to be sent (e.g. Break 
E which is often Ctrl+Pause) also needs that modifier in the key definition 
E to be matched.
C \fB注意:\fP  需要已经发送修饰符的键(例如 Break,通常是 Ctrl+Pause)也需要匹配键定义中
C 的修饰符。

E \fINote:\fP Like in xterm, a key redefinition takes precedence over 
E modifyOtherKeys mode (ESC sequence). Shortcut override mode however 
E disables key redefinitions.
C \fB注意:\fP  和 xterm 一样,键重新定义优先于 modifyOtherKeys 模式(ESC 序列)。快捷方式覆
C 盖模式禁用键重定义。

E \fINote:\fP For the "any character, with Ctrl and Shift" option, 
E the definition is ignored if the Ctrl+Shift+key combination would 
E generate a valid input character already. This is particularly the case 
E if a valid control character is mapped to the key in the keyboard layout.
E E.g. if you add a definition for Ctrl+Shift+minus and Shift+minus is "_" 
E (underline) on the keyboard, the user-defined key function will be ignored, 
E in order to prevent that input of Ctrl+_ would be inhibited.
C \fB注意:\fP  对于" any character,with Ctrl and Shift"选项,如果 Ctrl+Shift+key 组
C 合已经生成有效的输入字符,则忽略该定义。如果有效的控制字符映射到键盘布局中的键,
C 则尤其如此。例如,如果在键盘上添加 Ctrl+Shift+minus 和 Shift+minus 的定义"
C _"(下划线) ,则用户定义的键函数将被忽略,以防止 Ctrl +_的输入被禁止。

E Supported actions are described as follows:
C 受支持的操作描述如下:
  .br
E - \fB"\fP\fIstring\fP\fB"\fP or \fB\(aq\fP\fIstring\fP\fB\(aq\fP: enters the literal string
C -"string"或'string': 输入字符串 
  .br
E - \fB^\fP\fIchar\fP: enters a control char ('@'...'_' or '?' for DEL)
C -^char: 输入控制 char (’@’...’_’或’？’for DEL)
  .br
E - \fB\`\fP\fIcommand\fP\fB\`\fP (**): enters the output of the command
C -`command`(**) : 输入命令的输出
  .br
E - \fInumber\fP (***): enters the escape sequence CSI\fInumber\fP[;\fImod\fP]~
C - number(***): 输入转义序列 CSInumber [;mod] ~
  .br
E - \fBfullscreen\fP (*): switches to fullscreen mode
C - fullscreen (*) : 全屏模式
  .br
E - \fBtoggle-fullscreen\fP (*): toggles fullscreen mode
C - toggle-fullscreen (*) : 切换全屏模式
  .br
E - \fBwin-max\fP: resizes to window size
C -win-max: 调整大小到窗口大小
  .br
E - \fBwin-restore\fP: resizes to normal size
C -win-restore: 调整大小到正常大小
  .br
E - \fBwin-toggle-max\fP: toggles maximized / normal size
C -win-toggle-max: 切换最大化/正常大小
  .br
E - \fBwin-toggle-keep-screen-on\fP: toggles disabling of screen saver (use with care)
C -win-toggle-keep-screen-on: 切换禁用屏幕保护程序(小心使用)
  .br
E - \fBwin-toggle-always-on-top\fP: toggles window always-on-top
C -win-toggle-always-on-top: 切换窗口总是在顶部
  .br
E - \fBwin-icon\fP: turns window into icon
C -win-icon: 将窗口变成图标
  .br
E - \fBclose\fP: closes terminal window
C -close: 关闭终端窗口
  .br
E - \fBnew-key\fP: opens a new terminal window when key is released
C -new-key: 当键被释放时打开一个新的终端窗口
  .br
E - \fBnew-window\fP: opens a new terminal window
C -new-window: 打开一个新的终端窗口
  .br
E - \fBnew-window-cwd\fP: opens a new terminal window in working directory of current foreground process
C -new-window-cwd: 在当前前台进程的工作目录打开一个新的终端窗口
  .br
E - \fBoptions\fP: opens the Options dialog
C -options:  打开选项对话框
  .br
E - \fBmenu-text\fP (*): opens the context menu at the cursor position
C -menu-text (*) : 打开光标位置上的上下文菜单
  .br
E - \fBmenu-pointer\fP (*): opens the context menu at the mouse position
C -menu-pointer (*) : 打开鼠标位置上的上下文菜单
  .br
E - \fBsearch\fP: opens the search bar
C -search: 打开搜索栏
  .br
E - \fBdefault-size\fP (*): switches to default terminal size
C -default-size (*) : switch设置为默认终端尺寸
  .br
E - \fBscrollbar-outer\fP: toggles the scrollbar (xterm compatible)
C -scrollbar-outer: 切换 scrollbar (xterm compatible)
  .br
E - \fBscrollbar-inner\fP: toggles the scrollbar (mintty legacy)
C -scrollbar-inner: 切换 scrollbar (mintty legacy)
  .br
E - \fBcycle-pointer-style\fP: cycles the pointer style
C -cycle-pointer-style: 循环指针样式
  .br
E - \fBcycle-transparency-level\fP: cycles the transparency level
C -cycle-transparency-level: 循环透明度级别
  .br
E - \fBcopy\fP: copies the selection to the clipboard
C -copy : 复制选定内容到剪贴板
  .br
E - \fBcopy-text\fP: copies text only
C -copy-text : 只复制文本
  .br
E - \fBcopy-tabs\fP: copies text only, including TAB characters
C -copy-tab: 只复制文本,包括tab字符
  .br
E - \fBcopy-plain\fP: copies text only, TAB characters expanded as on screen
C -copy-plain: 只复制文本,tab在屏幕上展开
  .br
E - \fBcopy-rtf\fP: copies rich text format
E -copy-rtf
  .br
E - \fBcopy-html-text\fP: copies HTML text only (no font information)
C -copy-html-text: 只复制 HTML 文本(无字体信息)
  .br
E - \fBcopy-html-format\fP: copies HTML text (no global background)
C -copy-html-format: 复制 HTML 文本(无全局背景)
  .br
E - \fBcopy-html-full\fP: copies HTML (close to screen layout)
C -copy-html-full:复制 HTML (接近屏幕布局)
  .br
E - \fBpaste\fP: pastes from the clipboard
C -paste: 从剪贴板
  .br
E - \fBpaste-path\fP: pastes and tries to convert path syntax
C -paste-path: 粘贴并尝试转换路径语法
  .br
E - \fBcopy-paste\fP: copies and pastes
C -copy-paste: 副本和粘贴
  .br
E - \fBselect-all\fP: selects all text including scrollback
C -select-all: 选择所有文本包括滚动回滚
  .br
E - \fBclear-scrollback\fP: clears the scrollback
C -clear-scrollback:清除-滚动回滚: 清除滚动回滚
  .br
E - \fBtoggle-vt220\fP: toggles VT220 keyboard mode
C -toggle-vt220: 切换 vt220键盘模式
  .br
E - \fBtoggle-auto-repeat\fP: toggles auto-repeat keys mode
C -toggle-auto-repeat:切换自动重复键模式
  .br
E - \fBcopy-title\fP: copies the window title to the clipboard
C -copy-title: 复制窗口标题到剪贴板
  .br
E - \fBclear-title\fP: clears the window title
C -clear-title: 清除窗口标题
  .br
E - \fBlock-title\fP: locks the window title from being changed
C -lock-title:  锁定窗口标题被更改
  .br
E - \fBreset\fP: resets the terminal
C -reset:  重置终端
  .br
E - \fBtek-reset\fP: Tek mode RESET
C -tek-reset: Tek 模式 RESET
  .br
E - \fBtek-page\fP: Tek mode PAGE key (~soft reset)
C -tek-page: Tek 模式 PAGE 键(软重置)
  .br
E - \fBtek-copy\fP: Tek mode COPY key (image "hard" copy to file)
C -tek-copy: Tek 模式 COPY 键(图片"硬"复制到文件)
  .br
E - \fBsave-image\fP: Save terminal image to file
C -save-image:  将终端图片保存到文件
  .br
E - \fBbreak\fP: sends a break condition to the application
C -break:  向应用程序发送一个break
  .br
E - \fBflipscreen\fP: switches the alternate screen
C -flipscreen:  切换备用屏幕
  .br
E - \fBno-scroll\fP: locks output until input key is pressed
C -no-scroll: 锁定输出直到输入键被按下
  .br
E - \fBtoggle-no-scroll\fP: toggles locked output
C -toggle-no-scroll: 切换锁定的输出
  .br
E - \fBscroll-mode\fP: enables unmodified cursor scrolling until input
C -scroll-mode: 启用未修改的光标滚动直到输入
  .br
E - \fBtoggle-scroll-mode\fP: toggles unmodified cursor key scrolling
C -toggle-scroll-mode: 切换未修改的光标键
  .br
E - \fBopen\fP: opens the selection, e.g. a URL or filename
C -open: 打开选择,例如:。一个 URL 或者文件名
  .br
E - \fBtoggle-logging\fP: toggles logfile logging
C -toggle-logging:切换日志记录
  .br
E - \fBtoggle-char-info\fP: toggles character info display
C -toggle-char-info: 切换字符信息 display
  .br
E - \fBexport-html\fP (*): exports the screen as an HTML file
C -export-HTML (*) : exports 屏幕作为一个 HTML 文件
  .br
E - \fBprint-screen\fP: print screen contents
E -print-screen: print screen contents
  .br
E - \fBtoggle-bidi\fP: toggles (global) bidi disabling
E -toggle-bidi: toggles (global) bidi dishibing
  .br
E - \fBrefresh\fP: refresh terminal display
E -refresh: refresh terminal display
  .br
E - \fBvoid\fP: do nothing
E -void: do nothing
  .br
E - \fBsuper\fP: use this key as Super modifier key
C -Super: 使用这个键作为 Super key
  .br
E - \fBhyper\fP: use this key as Hyper modifier key
C -modifier: 使用这个键作为修饰符超修改键
  .br
  - \fBkb-select\fP: activate keyboard selection
  .br
  - \fBscroll_top\fP: scroll scrollback view to beginning
  .br
  - \fBscroll_end\fP: scroll scrollback view to end
  .br
  - \fBscroll_pgup\fP: scroll scrollback view one page up
  .br
  - \fBscroll_pgdn\fP: scroll scrollback view one page down
  .br
  - \fBscroll_lnup\fP: scroll scrollback view one line up
  .br
  - \fBscroll_lndn\fP: scroll scrollback view one line down
  .br
  - \fBscroll_prev\fP: scroll scrollback view to previous marker
  .br
  - \fBscroll_next\fP: scroll scrollback view to next marker
  .br

E - \fBswitch-prev\fP: switch to previous virtual tab
C - switch-prev: 切换到上一个标签
  .br
E - \fBswitch-next\fP: switch to next virtual tab
C - switch-next: 切换到下一个标签
  .br
E - \fBswitch-visible-prev\fP: switch to previous virtual tab which is not iconized
C - switch-visible-prev: 切换到上一个不是图标化的切标签
  .br
E - \fBswitch-visible-next\fP: switch to next virtual tab which is not iconized
C - switch-visible-next: 切换到下一个不是图标化的标签
  .br

E \fINote (*):\fP The exact behaviour of some actions depends on the 
E state of the Shift key.
C 注意(*) : 某些操作的确切行为取决于 Shift 键的状态。

E \fINote (**):\fP For external commands as key functions, the same 
E additional functionality is provided as for context menu user commands 
E (option \fBUserCommands\fP): environment variables and PATH substitution;
E the PATH environment for the external command can be set up 
E with option \fBUserCommandsPath\fP.
C 注意(**) : 对于作为关键函数的外部命令,提供了与上下文菜单用户命令(选项
C UserCommands)相同的附加功能: 环境变量和 PATH 替换; 可以使用选项 UserCommandsPath
C 设置外部命令的 PATH 环境。

E \fINote (***):\fP An unquoted \fInumber\fP causes mintty to form a 
E function key sequence, applying all modifiers.
C 注意(***) : 一个未加引号的数字会导致 mintty 形成一个函数键序列,应用所有修饰符。

E \fINote:\fP To just disable the built-in shortcut (and not override it 
E with a user-defined one), but further process the key as normal input, 
E leave the action empty, but include the colon.
C \fB注意:\fP  要禁用内置的快捷方式(而不是使用用户定义的快捷方式覆盖它) ,但要进一步处理
C 作为正常输入的键,保持操作为空,但包括冒号。

E \fINote:\fP To disable the built-in shortcut and not process the key either, 
E use the "\fBvoid\fP" dummy action.
C \fB注意:\fP  要禁用内置的快捷方式,也不处理键,请使用" void"虚拟操作。

E \fINote:\fP An invalid action (like "foo") will make mintty beep on the key.
C \fB注意:\fP  一个无效的操作(比如" foo")会在键上发出 mintty beep。

E \fINote:\fP If an assignment to any of the Lock keys 
E is defined, mintty will compensate for its implicit state change effect.
C \fB注意:\fP  如果定义了对任何锁键的赋值,mintty 将补偿其隐含的状态更改效果。

E Examples:
C 例子:
  .br
  - \fBKeyFunctions=d:\`echo -n \`date\`\`;A+F4:;CA+F12:break;-:"minus"\fP
  will input the current date on Ctrl+Shift+d, disable window closing with Alt+F4,
  send a BRK on Ctrl+Alt+F12, but likely not input "minus" on Ctrl+Shift+minus 
  because Shift+minus is an underline on many keyboard layouts which has a 
  Ctrl+_ assignment already
  .br
  - \fBKeyFunctions=c:copy;v:paste\fP in combination with setting 
  \fB-o CtrlExchangeShift=true\fP will assign copy/paste to ^C and ^V 
  for Windows addicts
  .br
  - \fBKeyFunctions=AS+Insert:paste-path;AS+KP_Insert:paste-path\fP
  will always try to convert pasted paths to POSIX syntax on Alt+Shift+Insert
  .br
  - \fBKeyFunctions=A+Enter:void;A+KP_Enter:\fP will disable zooming 
  on Alt+Enter and also disable it on Alt+keypad-Enter but enter ESC Return 
  in the latter case
  .br
  - \fBKeyFunctions=*CapsLock:super\fP assigns the Super modifier to 
  the CapsLock key
  .br
  - \fBKeyFunctions=*Menu:29\fP turns the Menu key into an F16 function key 
  (xterm default) and applies all modifiers to it
  .br
  - \fBKeyFunctions=A+Left:switch-prev;A+Right:switch-next;\\
  	A+C+Left:switch-visible-prev;A+C+Right:switch-visible-next\fP
  enables window switching with [Ctrl+]Alt+Left/Right keys on the 
  "editing keypad" (prefix KP_ for the numeric keypad)
  .br
  - \fBKeyFunctions=S+KP_Prior:scroll_pgup;C+KP_Prior:scroll_pgup;\\
  	C+KP_Next:scroll_pgdn;S+KP_Next:scroll_pgdn\fP 
  enables scrollback scrolling with either of Shift or Control modifiers
  .br
  - \fBKeyFunctions=ScrollLock:toggle-no-scroll\fP enables NoScroll key

  .TP
E \fBManage keyboard LEDs\fP (ManageLEDs=7)
C \fB管理键盘灯 \fP(ManageLEDs=7)
E Mintty manages the keyboard indicator lights (LEDs) for the CapsLock, Numlock, 
E and ScrollLock state in order to achieve consistent indication.
C Mintty 管理 CapsLock、 Numlock 和 ScrollLock 状态的键盘指示灯(led) ,以实现一致
C 的指示。
E If any of these keys have a user-defined function attached, there usage 
E shall not affect the visual keyboard modifier indication. Also, if a 
E scroll feature is activated (no-scroll or scroll-mode), the ScrollLock 
E indication shall indicate the current state of the terminal window. The 
E ScrollLock light is restored to its previous state if the terminal window 
E gets out of focus or terminates.
C 如果任何这些键有用户定义的功能附加,使用不应影响视觉键盘修饰符指示。此外,如果激
C 活了滚动特性(无滚动或滚动模式) ,ScrollLock 指示应指示终端窗口的当前状态。如果终
C 端窗口失焦或终止,ScrollLock 光将恢复到以前的状态。
E This setting can disable LED management for ScrollLock (ManageLEDs=3) or 
E for all modifiers (ManageLEDs=0).
C 此设置可以禁用ScrollLock (ManageLEDs=3)或所有修饰符(ManageLEDs=0)的 LED 管理

  .TP
E \fBUse system colours\fP (UseSystemColours=no)
C \fB使用系统颜色\fP(UseSystemColours=no)
E If this is set, the Windows-wide colour settings are used
E instead of the foreground, background, and cursor colours chosen on the Looks
E page of the Options dialog.
C 如果设置此选项,则使用 windows 范围的颜色设置,而不是在"选项"对话框的"查找"页上
C 选择的前景色、背景色和光标色。

  .TP
E \fBIME cursor colour\fP (IMECursorColour=)
C \fB输入法光标颜色\fP(IMECursorColour=)
E The cursor colour can be set to change when the Input Method Editor (IME) for
E entering characters not available directly on the keyboard is active.
E The setting is a RGB triplet such as 255,0,0 for bright red.
C 当用于输入键盘上不直接可用字符的输入法编辑器(IME)处于活动状态时,可以将光标颜色
C 设置为更改。设置为 RGB 三元组,如255,0,0表示亮红色。

E By default, this is unset, which means that the cursor colour does not change.
C 默认情况下,这是未设置的,这意味着光标颜色不会改变。

  .TP
E \fBANSI colours\fP
C \fBANSI 颜色\fP
E These are the 16 ANSI colour settings along with their default values.
E Colours are represented as comma-separated RGB triples with decimal 8-bit values
E ranging from 0 to 255. 
C 这些是16种 ANSI 颜色设置以及它们的默认值。颜色表示为
C 逗号分隔的 RGB 三元组,其十进制8位值范围为0到255;
E X-style hexadecimal colour specifications such as #RRGGBB, 
C X 型十六进制颜色规范,如 #RRGGBB,
E rgb:RR/GG/BB or rgb:RRRR/GGGG/BBBB, 
C rgb: RR/GG/BB 或 rgb: rrr/GGGG/BBBB,
E cmy:C.C/M.M/Y.Y or cmyk:C.C/M.M/Y.Y/K.K can be used as well.
C cmy: C.C/M.M/Y.Y 或 cmyk: C.C/M.M/Y.Y/K.K 。
E Also X11 color names are supported.
C 还支持 x11颜色名称。
  .br
  - \fBBlack\fP=0,0,0
  .br
  - \fBRed\fP=191,0,0
  .br
  - \fBGreen\fP=0,191,0
  .br
  - \fBYellow\fP=191,191,0
  .br
  - \fBBlue\fP=0,0,191
  .br
  - \fBMagenta\fP=191,0,191
  .br
  - \fBCyan\fP=0,191,191
  .br
  - \fBWhite\fP=191,191,191
  .br
  - \fBBoldBlack\fP=64,64,64
  .br
  - \fBBoldRed\fP=255,64,64
  .br
  - \fBBoldGreen\fP=64,255,64
  .br
  - \fBBoldYellow\fP=255,255,64
  .br
  - \fBBoldBlue\fP=96,96,255
  .br
  - \fBBoldMagenta\fP=255,64,255
  .br
  - \fBBoldCyan\fP=64,255,255
  .br
  - \fBBoldWhite\fP=255,255,255

  .TP
E \fBTektronix mode colours\fP
C \fB泰克模式颜色\fP
E For Tektronix 4014 emulation, colours can be overridden;
E \fBTekWriteThruColour\fP and \fBTekDefocusedColour\fP can be used 
E to visualize Write-Thru and Defocused modes.
C 对于 Tektronix 4014模拟器,颜色可以被覆盖; tekwriteethrucolour 和
C TekDefocusedColour 可用于可视化 Write-Thru 和 defocusedcolour 模式。
  .br
  - \fBTekForegroundColour\fP=\fI\fP
  .br
  - \fBTekBackgroundColour\fP=\fI\fP
  .br
  - \fBTekCursorColour\fP=\fI\fP
  .br
  - \fBTekWriteThruColour\fP=\fI\fP
  .br
  - \fBTekDefocusedColour\fP=\fI\fP

  .TP
E \fBTektronix mode font\fP (TekFont=)
C \fB泰克模式字体\fP(TekFont=)
E For Tektronix 4014 emulation, a dedicated font can be selected.
E The terminal default font is used otherwise.
C 对于 Tektronix 4014模拟器,可以选择专用字体,否则将使用终端默认字体。

  .TP
E \fBTektronix mode effect\fP (TekGlow=1)
C \fB泰克模式效应\fP(TekGlow=1)
E The Tektronix drawing beam glow can be switched with this setting.
C 泰克公司的绘图光束辉光可以开关与此设置。

  .TP
E \fBTektronix "strap option"\fP (TekStrap=0)
C \fB泰克公司的"皮带选项"\fP(TekStrap=0)
E Number of characters appended after GIN mode address reports;
E valid values are 0, 1 (CR) and 2 (CR ^C).
C GIN 模式地址报告后附加的字符数; 有效值为0、1(CR)和2(CR ^c)。
  .br
E (Corresponds to the xterm resource \fBginTerminator\fP.)
C (对应于 xterm 资源ginTerminator.)

  .TP
E \fBDownloaded colour scheme\fP (ColourScheme=)
C \fB下载配色方案\fP(ColourScheme=)
E This setting is not intended for manual configuration. It can store a 
E colour scheme as downloaded from the Color Scheme Configurator or from a 
E theme file on the web via drag-and-drop to the Theme of the Options menu.
E After the colour scheme is stored to a colour scheme file, this setting 
E is not used anymore.
C 此设置不适用于手动配置。它可以存储从配色方案配置器下载的配色方案,或者通过拖放到
C 选项菜单的主题在网络上的主题文件。将配色方案存储到配色方案文件后,不再使用此设置
C 。

E See the Tips wiki page \fIhttps://github.com/mintty/mintty/wiki/Tips#using-colour-schemes-themes\fP 
E about this mechanism.
C 关于这个机制,请参阅 Tips wiki
C https://github.com/mintty/mintty/wiki/Tips#using-colour-schemes-themes。

  .TP
E \fBSelection highlight colours\fP
C \fB选择高亮颜色\fP
E The highlighting colours of selected text can be configured.
C 可以配置选定文本的高亮颜色。
  .br
E - \fBHighlightBackgroundColour\fP= selected text background 
E (corresponds to the xterm resource \fBhighlightColor\fP)
  .br
E - \fBHighlightForegroundColour\fP= selected text colour 
E (corresponds to the xterm resource \fBhighlightTextColor\fP 
E with \fBhighlightColorMode\fP); only effective if both are configured
C 只有在两者都配置好的情况下才有效

  .TP
E \fBScrollback search colours\fP
C \fB回滚搜索颜色\fP
E The highlighting colours of search matches can be configured.
C 可以配置搜索匹配的高亮颜色。
  .br
E - \fBSearchForegroundColour\fP=\fIblack\fP
  .br
E - \fBSearchBackgroundColour\fP=\fIlight yellow\fP
  .br
E - \fBSearchCurrentColour\fP=\fIbright yellow\fP

  .TP
E \fBBackground image or texture\fP (Background=)
C \fB背景图像或纹理\fP(Background=)
E With this option, an image can be chosen as background.
C 使用此选项,可以选择图像作为背景。
E With an image file name, absolute (with an optional \fB~\fP prefix) 
E or relative to the current terminal foreground process, 
C 使用图像文件名、绝对路径(带有可选的 ~ 前缀)或相对路径于当前终端前台进程,
E the option either uses the image as a background picture, scaled to 
E the terminal size (optional prefix \fB_\fP to the filename), 
C 选项可以使用图像作为背景图片,缩放到终端大小(可选的_前缀为文件名) ,
E or initially scaling the terminal to the aspect ratio of the image 
E (prefix \fB%\fP to the filename), 
C 或者最初缩放终端到图像的长宽比(前缀为%) ,
E or as a tiled background texture (prefix \fB*\fP to the filename), 
C 或者作为背景纹理(* 前缀为文件名) ,
E or it uses the current desktop background, achieving a virtual 
E floating window effect (\fB=\fP without filename, currently only applicable 
E if desktop wallpaper is set as being "tiled" and unscaled).
C 或者使用当前的桌面背景,实现虚拟浮动窗口效果(= 无文件名,目前只适用于桌
C 面壁纸设置为"平铺"和无缩放)。

E The background can be changed with an OSC 11 escape sequence, 
E instead of a colour using a background specification 
E prefixed with either of \fB_\fP, \fB%\fP, \fB*\fP, \fB=\fP.
C 可以使用 OSC 11转义序列改变背景,而不是使用以% ,% ,* ,= 为前缀的背景规范。

E If the background filename is followed by a comma and a number between 1 and 254, 
E the background image will be dimmed towards the background colour;
E with a value of 255, the alpha transparency values of the image will be used.
C 如果背景文件名后面跟着一个逗号和一个介于1到254之间的数字,背景图像将变暗为背景色
C ; 如果值为255,将使用图像的 alpha 透明度值。

  .TP
E \fBScrollback search bar\fP (SearchBar=)
C \fB回滚搜索栏\fP(SearchBar=)
E This string option can customize the order of items in the search bar.
E Use x (close button), </> (previous/next buttons), s (search string) to 
E select the order of these fields in the search bar; missing fields will 
E be appended in a default order.
C 此字符串选项可以自定义搜索栏中项目的顺序。使用 x (关闭按钮)、 </> (上一个/下一个
C 按钮)、 s (搜索字符串)在搜索栏中选择这些字段的顺序; 缺少的字段将按默认顺序追加。
E Also button symbols in the range U+25B2 ... U+25C5 can be used, as well as 
E some other arrow and pointing index symbols and wide angle brackets, which 
E when pointing up or left define the previous button symbol and its position, 
E or when pointing down or right define the next button symbol and its position.
E Also button symbols U+2717 or U+2718 can be used to define the 
E close button and its position.
C 还可以使用 u+25 B2... u+25 c5范围内的按钮符号,以及一些其他箭头和指向索引符
C 号和广角括号,当指向上或左定义前一个按钮符号及其位置,或当指向下或右定义下一个按
C 钮符号及其位置。还可以使用按钮符号 u+2717或 u+2718来定义关闭按钮及其位置。

  .TP
E \fBScrollback search context\fP (SearchContext=0)
C \fB回滚搜索上下文\fP(SearchContext=0)
E This option will place the search result at the given distance from 
E the terminal top/bottom border when scrolling to the result location.
E If the value is negative, it will also keep the result at the (positive) 
E distance if the result is already visible.
C 在滚动到结果位置时,此选项将搜索结果放置在距离终端顶/底边框的给定距离处。如果值
C 为负,那么如果结果已经可见,它也会将结果保持在(正)距离上。

  .TP
E \fBWrite if exited\fP (ExitWrite=no)
C \fB退出时输出退出提示\fP(ExitWrite=no)
E Together with a hold option that keeps the terminal open after its child 
E process terminated, this option always writes an exit indication to the 
E screen. By default, only an error exit code is displayed.
C 此选项与一个在其子进程终止后保持终端打开的保持选项一起,始终向屏幕写入退出指示。
C 默认情况下,只显示错误退出代码。

  .TP
E \fBChange title if exited\fP (ExitTitle=)
C \fB退出时更改标题\fP(ExitTitle=)
E Together with a hold option that keeps the terminal open after its child 
E process terminated, this option prefixes the window title with its string, 
E for example -o ExitTitle="TERMINATED: ".
C 此选项与一个在其子进程终止后保持终端打开的 hold 选项一起,用它的字符串作为窗口标
C 题的前缀,例如-o ExitTitle=" TERMINATED:"。

  .TP
E \fBMouse pointer styles\fP (MousePointer=ibeam, AppMousePointer=arrow)
C \fB鼠标指针样式\fP(MousePointer=ibeam,AppMousePointer=箭头)
E This setting defines the mouse position indicator (i.e. not the text cursor) 
E from the given resource. Note that mintty maintains two different mouse 
E pointer shapes, to distinguish application mouse reporting modes.
E Valid values are Windows predefined cursor names 
E (appstarting, arrow, cross, hand, help, ibeam, icon, no, size, sizeall, sizenesw, sizens, sizenwse, sizewe, uparrow, wait).
E or cursor file names which are looked up in subdirectory \fIpointers\fP of 
E a mintty resource directory; supported file types are .cur, .ico, .ani.
E (Corresponds to the xterm resource \fBpointerShape\fP.)
C 此设置定义给定资源的鼠标位置指示器(即不是文本光标)。注意,mintty 维护两个不同的
C 鼠标指针形状,以区分应用程序鼠标报告模式。有效值是 Windows 预定义的游标名
C (appstarting、 arrow、 cross、 hand、 help、 ibeam、 icon、 no、 size、 sizenesw
C 、 sizenesw、 sizenwse、 sizewe、 uparrow、 wait)。在 mintty 资源目录的子目录指
C 针中查找的文件名或游标文件名; 支持的文件类型为。杂种。Ico.阿尼。(对应于 xterm 资
C 源 pointerShape.)

  .TP
E \fBConfigure document opening by mouse click\fP (OpeningClicks=1)
C \fB通过鼠标点击配置文档打开\fP(OpeningClicks=1)
E Enabling opening files, directories or URLs with mouse clicking, 
E in addition to the context menu. Values 1, 2, or 3 require Ctrl+mouse-click, 
E double-click, or triple-click, respectively, to invoke the document opening.
E Value 0 disables click-opening.
C 除了上下文菜单之外,还可以通过鼠标点击打开文件、目录或 url。值1、2或3分别需要
C Ctrl+鼠标单击、双击或三击来调用文档打开。值0禁用单击打开。

  .TP
E \fBControl key and shortcut Shift exchange\fP (CtrlExchangeShift=no)
C \fB控制键和快捷键 Shift exchange \fP(ctrl/lexchangeshift=no)
E Exchange the range of Control characters with the range of 
E Ctrl+Shift shortcuts, so that for example Ctrl+V will paste and 
E Ctrl+Shift+V will enter a Control+V character.
C 用 Ctrl+Shift 快捷键来交换 Control 字符的范围,例如 Ctrl+v 将被粘贴,Ctrl +
C Shift+v 将输入 Control+v 字符。

  .TP
E \fBMouse zooming\fP (ZoomMouse=yes)
C \fB鼠标缩放\fP(ZoomMouse=yes)
E Enabling font zooming with \fBCtrl+mouse-wheel/middle-mouse-click\fP.
C 使用 Ctrl+鼠标滚轮/鼠标中键进行字体缩放。

  .TP
E \fBScroll lines per mouse wheel notch\fP (LinesPerMouseWheelNotch=0)
C \fB每个鼠标滚轮切口的滚动线\fP(LinesPerMouseWheelNotch=0)
E With this setting, the number of lines counted per notch of the mouse wheel 
E can be set to a maximum of the terminal height - 1. This applies to 
E scrollback scrolling as well as to mousewheel reporting but not to 
E mouse tracking reports.
C 通过此设置,可以将鼠标滚轮每个凹口计数的行数设置为终端高度 -1的最大值。这适用于
C 滚动/回滚以及鼠标滚轮报告,但不适用于鼠标跟踪报告。
E The default is to take the value from a system setting, typically 3.
C 默认是从系统设置中获取值,通常是3。

  .TP
E \fBDisable Shift-coupled implicit font zooming\fP (ZoomFontWithWindow=yes)
C \fB禁用 Shift 耦合的隐式字体缩放 \fP(ZoomFontWithWindow=yes)
E If this option is set to false, implicit font zooming coupled with 
E window zooming by the Shift key is disabled, except for the 
E keyboard zoom functions Shift+Alt+Enter and the Shift+menu function.
C 如果此选项设置为 false,则除了键盘缩放功能 Shift+Alt+Enter 和 Shift+menu 功能外
C ,隐式字体缩放和 Shift 键窗口缩放将被禁用。

  .TP
E \fBHandling of DPI changes\fP (HandleDPI=2)
C \fB处理 DPI 更改 \fP(HandleDPI=2)
E When the window is moved to another monitor that has a different DPI 
E value ("scaling factor") configured, newer Windows 10 versions support 
E semi-automatic compensation by appropriate scaling.
C 当窗口移动到另一个配置了不同 DPI 值("缩放因子")的显示器时,较新的 Windows 10
C 版本支持通过适当缩放进行半自动补偿。
E This option can be set to support either DPI handling modes 1 or 2 
E (if supported, respectively), or set to 0/false to suppress DPI adjustments.
C 此选项可设置为支持 DPI 处理模式 1 或 2(如果分别支持),或设置为 0/false 以抑制
C DPI 调整。

  .TP
E \fBCheck availability of mintty version update\fP (CheckVersionUpdate=0)
C \fB检查 mintty 版本更新的可用性 \fP(CheckVersionUpdate=0)
E If non-zero (e.g. 900), mintty checks whether there is a version 
E update available whenever the Options dialog is opened and this was 
E not checked within the last given number of seconds.
C 如果非零(例如 900),每当打开选项对话框时,mintty 都会检查是否有可用的版本更新
C ,并且在最后给定的秒数内不检查。

  .TP
E \fBSixel image clipboard substitution\fP (SixelClipChars=\fIspace\fP)
C \fBSixel 图像剪贴板替换\fP(SixelClipChars=space)
E Characters to copy to clipboard as a substitute for Sixel image graphics,
E to indicate their positions. With an empty value, U+FFFC will be used.
E Double-width characters should not be used here.
C 复制到剪贴板的字符以替代 Sixel 图像图形,以指示其位置。对于空值,将使用 U+FFFC。
C 此处不应使用全角字符。

  .TP
E \fBDrag-and-drop application-targetted commands\fP (DropCommands=)
C \fB拖放命令 \fP(DropCommands=)
E With this setting, a set of string patterns can be configured for paste insertion, 
E in dependence of the program running in the terminal foreground. 
C 使用此设置,可以根据在终端前台运行的程序配置一组字符串模式用于粘贴插入。

E \fINote:\fP Detection of terminal foreground processes works only locally; 
E this features does not work with WSL or after remote login.
C \fB注意:\fP 终端前台进程的检测只能在本地进行;此功能不适用于 WSL 或远程登录后。

E The value is a series of semicolon-separated, colon-combined 
E pairs of program name and drop pattern. The pattern is pasted; a single 
E placeholder "%s" is replaced with the clipboard contents, 
E paths converted into cygwin format; a single placeholder "%w" is replaced 
E with the clipboard contents, paths left in Windows format. Using capital 
E placeholders "%S" or "%W" embeds the pasted paths into respective quotes 
E if needed.
C 该值是一系列以分号分隔、冒号组合的程序名称和删除模式对。图案已粘贴;单个占位符"
C %s"被剪贴板内容替换,路径转换为 cygwin 格式;单个占位符"%w"被剪贴板内容替换,路
C 径以 Windows 格式保留。如果需要,使用大写占位符"%S"或"%W"将粘贴的路径嵌入到相应的引号中。
E If a semicolon shall be embedded into any of the drop patterns, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it.
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 如果分号应嵌入到任何放置模式中,则可以通过用它开始整个设置来指定非空白
C 控制字符(即没有 ^I^J^K^L^M)作为替代分隔符。如果分隔符后跟反斜杠、换行符和可选
C 的空白缩进,则定义列表可以分成多行。

E \fINote:\fP This feature potentially makes mintty vulnerable against command injection.
E Be careful what commands you configure! For shell commands, it is 
E advisable to embed the "%s" parameter placeholder in single quotation 
E marks explicitly, both to avoid trouble with special characters, and 
E to reduce the risk of injecting commands via tricky filenames.
C \fB注意:\fP 此功能可能会使 mintty 容易受到命令注入的攻击。小心你配置的命令！对于 shell
C 命令,建议将 "%s" 参数占位符显式嵌入单引号中,既可以避免特殊字符的问题,又可以降
C 低通过棘手的文件名注入命令的风险。

E Examples:
C 例子:
  .br
  - \fBDropCommands=bash:cd \(aq%s\(aq^M;mined:^[fo^M%s^M;vim:^[:e %s^M\fP
  .br
  - \fBDropCommands=^_bash:cd \(aq%s\(aq;echo $PWD^M^_vim:^[:e %s^M^_\fP
  .br
  - \fBDropCommands=cmd:cd /D %W^M\fP

E \fINote:\fP An "Enter" key has to be specified with the CR character code, 
E control characters need to be embedded verbatim 
E (indicated above as "^M" or "^["); there is no escape notation.
C \fB注意:\fP "回车"键必须与 CR 字符代码一起指定,控制字符需要逐字嵌入(上面表示为"^M"或
C "^[");没有转义符号。

E \fINote:\fP If different actions for directories/folders or even different 
E command invocations depending on file name pattern are desired, this should 
E be handled by a suitable cooperating shell function.
C \fB注意:\fP 如果需要根据文件名模式对目录/文件夹进行不同的操作,甚至需要不同的命令调用
C ,这应该由合适的协作 shell 函数来处理。

  .TP
E \fBExit application-targetted commands\fP (ExitCommands=)
C \fB退出命令 \fP(ExitCommands=)
E With this setting, a set of strings can be configured to be sent to 
E respective applications,
E in dependence of the program running in the terminal foreground,
E if the window is instructed to "Close" from its menu or close button.
C 使用此设置,如果窗口被指示从其菜单或关闭按钮"关闭",则可以将一组字符串配置为发送
C 到相应的应用程序,这取决于在终端前台运行的程序。

E \fINote:\fP Detection of terminal foreground processes works only locally; 
E this features does not work with WSL or after remote login.
C \fB注意:\fP 终端前台进程的检测只能在本地进行;此功能不适用于 WSL 或远程登录后。

E The value is a series of semicolon-separated, colon-combined 
E pairs of program name and (control) string. The string is sent to the 
E client application.
E If a semicolon shall be embedded into any of the drop patterns, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it.
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 该值是一系列以分号分隔、以冒号组合的程序名称和(控制)字符串对。该字符串被发送到
C 客户端应用程序。如果分号应嵌入到任何放置模式中,则可以通过用它开始整个设置来指定
C 非空白控制字符(即没有 ^I^J^K^L^M)作为替代分隔符。如果分隔符后跟反斜杠、换行符
C 和可选的空白缩进,则定义列表可以分成多行。

E \fINote:\fP This feature potentially makes mintty vulnerable against command injection.
E Be careful what strings you configure!
C \fB注意:\fP 此功能可能会使 mintty 容易受到命令注入的攻击。小心你配置的字符串！

E Example:
C 例子:
  .br
  - \fBExitCommands=bash:exit^M;mined:^[q;emacs:^X^C\fP

E \fINote:\fP An "Enter" key has to be specified with the CR character code, 
E control characters need to be embedded verbatim 
E (indicated above as "^M", "^[", "^X", "^C"); there is no escape notation.
C \fB注意:\fP "回车"键必须与 CR 字符代码一起指定,控制字符需要逐字嵌入(如上所示"^M"、"
C ^["、"^X"、"^C");没有转义符号。

  .TP
E \fBUser commands\fP (UserCommands=) [DEPRECATED, see \fBCtxMenuFunctions\fP]
C \fB用户命令 \fP(UserCommands=) [已弃用,请参阅 CtxMenuFunctions]
E This setting lists user-defined commands for the extended context menu.
E The value is a series of semicolon-separated, colon-combined 
E pairs of menu item label and command pattern; the command is invoked and its 
E standard output is pasted into the terminal, applying bracketed-paste mode 
E if enabled.
C 此设置列出了扩展上下文菜单的用户定义命令。该值是一系列以分号分隔、冒号组合的菜单
C 项标签和命令模式对;调用命令并将其标准输出粘贴到终端中,如果启用则应用括号粘贴模
C 式。
E If a semicolon shall be embedded into any of the command patterns, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it.
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 如果分号应嵌入到任何命令模式中,则可以通过用它开始整个设置来指定非空白控制字
C 符(即没有 ^I^J^K^L^M)作为替代分隔符。如果分隔符后跟反斜杠、换行符和可选的空白
C 缩进,则定义列表可以分成多行。

E Mintty provides useful information in environment variables:
C Mintty 在环境变量中提供了有用的信息:
  .br
E MINTTY_SELECT for the current selection
C MINTTY_SELECT 当前选择的 
  .br
E MINTTY_BUFFER for the complete terminal contents including scrollback buffer
C MINTTY_BUFFER 用于完整的终端内容,包括回滚缓冲区
  .br
E MINTTY_SCREEN for the current screen; if scrolled back, starting at the current scroll position
C MINTTY_SCREEN 当前屏幕的 如果向后滚动,则从当前滚动位置开始
  .br
E MINTTY_OUTPUT for the output of the previous command, if prompt lines are marked
C MINTTY_OUTPUT 为上一条命令的输出,如果提示行被标记
  .br
E MINTTY_TITLE for the window title text
C MINTTY_TITLE 用于窗口标题文本
  .br
E MINTTY_PID for the program ID of the terminal foreground process
C MINTTY_PID 为终端前台进程的程序ID
  .br
E MINTTY_PROG for the program name of the terminal foreground process
C MINTTY_PROG 为终端前台进程的程序名
  .br
E MINTTY_CWD for the current working directory of the foreground process
C MINTTY_CWD 用于前台进程的当前工作目录

E \fINote:\fP Menu item labels are subject to localization if they are 
E added to the localization file of the selected UI localization language 
E (in subdirectory \fIlang\fP of a mintty resource directory).
C \fB注意:\fP 如果将菜单项标签添加到所选 UI 本地化语言的本地化文件中(在 mintty 资源目录
C 的子目录 lang 中),则菜单项标签会受到本地化的影响。

E \fINote:\fP Menu item labels can contain a \fB&\fP sign to indicate a 
E key shortcut for menu item selection.
C \fB注意:\fP 菜单项标签可以包含 & 符号以指示菜单项选择的快捷键。

E \fINote:\fP The previous command can be detected if prompt lines are marked 
E with the escape sequence ^[[?7711h.
E See the Control Sequences wiki page \fIhttps://github.com/mintty/mintty/wiki/CtrlSeqs#scroll-markers\fP.
C \fB注意:\fP 如果提示行用转义序列 ^[[?7711h.请参阅控制序列维基页面
C https://github.com/mintty/mintty/wiki/CtrlSeqs#scroll-markers。

E \fINote:\fP The PATH environment for the external command can be set up 
E with option \fBUserCommandsPath\fP.
C \fB注意:\fP 可以使用 UserCommandsPath 选项设置外部命令的 PATH 环境。

E \fINote:\fP This is an experimental feature, with an experimental configuration format.
C \fB注意:\fP 这是一个实验性功能,具有实验性配置格式。

E \fINote:\fP Normal terminal interaction continues after the invoked commands 
E have terminated. Be careful not to configure commands that can stall or block!
C \fB注意:\fP 在调用的命令终止后,正常的终端交互将继续。注意不要配置可能会停止或阻塞的命
C 令！

E \fINote:\fP This feature potentially makes mintty vulnerable against command injection.
E Be careful what commands you configure! Especially do not embed 
E environment variable parameters unquoted (like \fBecho $MINTTY_SELECT\fP), 
E in order to avoid the risk of injecting commands via tricky selected text.
C \fB注意:\fP 此功能可能会使 mintty 容易受到命令注入的攻击。小心你配置的命令！特别是不要
C 嵌入未加引号的环境变量参数(如 echo $MINTTY_SELECT),以避免通过棘手的选定文本注
C 入命令的风险。

E Examples:
C 例子:
  .br
  - \fBUserCommands=Paste capital:echo -n "$MINTTY_SELECT" | tr \(aqa-z\(aq \(aqA-Z\(aq;Paste small:echo -n "$MINTTY_SELECT" | tr \(aqA-Z\(aq \(aqa-z\(aq\fP
  .br
  - \fBUserCommands=google:cygstart https://www.google.de/search?q="$MINTTY_SELECT"\fP

E \fINote:\fP Control characters need to be embedded verbatim; there is no escape notation.
C \fB注意:\fP 控制字符需要逐字嵌入;没有转义符号。

  .TP
E \fBUser commands PATH expansion\fP (UserCommandsPath=/bin:%s)
C \fB用户命令路径扩展 \fP(UserCommandsPath=/bin:%s)
E This setting defines the PATH environment for user-defined external commands,
E applicable to extended context menu commands (UserCommands=...:...)
E and key-attached external commands (KeyFunctions=...:\`...\`).
E If the value contains a single \fB%s\fP placeholder, the current 
E environment PATH is substituted for it.
C 此设置为用户定义的外部命令定义 PATH 环境,适用于扩展上下文菜单命令
C (UserCommands=...:...) 和键附加外部命令 (KeyFunctions=...:`...`)。如果该值包含单
C 个 %s 占位符,则当前环境 PATH 将替换它。

  .TP
E \fBContext menu user commands\fP (CtxMenuFunctions=)
C \fB上下文菜单用户命令 \fP(CtxMenuFunctions=)
E This setting lists user-defined functions or commands for the context menus 
E (right mouse click in text area).
E If it is configured, it is by default included in the extended context menu 
E (Control+right-click) but can be configured for other context menu 
E invocations as well (see configuration of \fIMenu contents\fP with options 
E \fBMenu*\fP), along with the deprecated configured user commands (\fBUserCommands\fP).
C \fB此设置为上下文菜单列出用户定义的功能或命令\fP(在文本区域中单击鼠标右键)。如果已配
C 置,默认情况下它包含在扩展上下文菜单中(Control+右键单击),但也可以为其他上下文
C 菜单调用进行配置(请参阅带有选项 Menu* 的菜单内容配置),以及不推荐使用的配置用
C 户命令(UserCommands)。

E The value is a series of semicolon-separated, colon-combined 
E pairs of key and action descriptors
E (if a semicolon shall be embedded into any of the action descriptors, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it).
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 该值是一系列以分号分隔、以冒号组合的键和动作描述符对(如果分号应嵌入到任何动作描
C 述符中,则为非空白控制字符(即没有 ^I^J^K^L^M) 可以通过用它开始整个设置来指定为
C 替代分隔符)。如果分隔符后跟反斜杠、换行符和可选的空白缩进,则定义列表可以分成多
C 行。

E The configuration is similar to the \fBUserCommands\fP setting with respect 
E to menu labels, and to \fBKeyFunctions\fP setting with respect to function 
E designations; respective notes and warnings apply.
C 该配置类似于关于菜单标签的 UserCommands 设置,以及关于功能名称的 KeyFunctions 设
C 置;相应的注意事项和警告适用。

  .TP
E \fBSystem menu user commands\fP (SysMenuFunctions=)
C \fB系统菜单用户命令 \fP(SysMenuFunctions=)
E This setting lists user-defined functions or commands for the system menu 
E (right mouse click on title bar or left click on title bar icon).
E If it is configured, the middle items of the menu (including Options... 
E and New) are replaced by the configured functions.
C 此设置列出用户定义的系统菜单功能或命令(鼠标右键单击标题栏或左键单击标题栏图标)
C 。如果已配置,则菜单的中间项(包括选项...和新建)将被配置的功能替换。

E The value is a series of semicolon-separated, colon-combined 
E pairs of key and action descriptors
E (if a semicolon shall be embedded into any of the action descriptors, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it).
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 该值是一系列以分号分隔、以冒号组合的键和动作描述符对(如果分号应嵌入到任何动作描
C 述符中,则为非空白控制字符(即没有 ^I^J^K^L^M) 可以通过用它开始整个设置来指定为
C 替代分隔符)。如果分隔符后跟反斜杠、换行符和可选的空白缩进,则定义列表可以分成多
C 行。

E The configuration is similar to the \fBUserCommands\fP setting with respect 
E to menu labels, and to \fBKeyFunctions\fP setting with respect to function 
E designations; respective notes and warnings apply.
E \fINote:\fP To include default items and keep their language localization 
E enabled, their label strings need to be reproduced exactly as registered 
E in the localization pattern file \fBmessages.pot\fP, including the position 
E of a \fB&\fP marker which indicates a key shortcut for menu item selection.
C 该配置类似于关于菜单标签的 UserCommands 设置,以及关于功能名称的 KeyFunctions 设
C 置;相应的注意事项和警告适用。注意:要包含默认项目并保持其语言本地化启用,它们的
C 标签字符串需要完全按照在本地化模式文件 messages.pot 中注册的方式进行复制,包括 &
C 标记的位置,该标记指示菜单项选择的快捷键。

E Examples:
C 例子:
  .br
  - \fBSysMenuFunctions=&Lock Title:lock-title;Copy &Title:copy-title;&Options...:options;Ne&w:new-window\fP

  .TP
E \fBSession launcher commands\fP (SessionCommands=)
C \fB会话启动器命令 \fP(SessionCommands=)
E This setting lists mintty invocation parameters for the session launcher.
E The value is a series of semicolon-separated, colon-combined 
E pairs of session launch names (used as menu item labels) and 
E invocation parameter lists; when selecting one of the launch names, 
E mintty is invoked with the respective parameters.
C 此设置列出了会话启动器的 mintty 调用参数。该值是一系列以分号分隔、冒号组合的会话
C 启动名称(用作菜单项标签)和调用参数列表;选择其中一个启动名称时,会使用相应的参
C 数调用 mintty。 
E (If a semicolon shall be embedded into any of the command patterns, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it.)
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C (如果分号应嵌入到任何命令模式中,则可以通过用它开始整个设置来指
C 定非空白控制字符(即没有 ^I^J^K^L^M)作为替代分隔符。 ) 如果分隔符后跟反斜杠、换
C 行符和可选的空白缩进,则定义列表可以分成多行。

E \fINote:\fP Session launch names are subject to localization if they are 
E added to the localization file of the selected UI localization language 
E (in subdirectory \fIlang\fP of a mintty resource directory).
C \fB注意:\fP 如果会话启动名称被添加到所选 UI 本地化语言的本地化文件中(在 mintty 资源目
C 录的子目录 lang 中),则它们会受到本地化的影响。

E Examples:
C 例子:
  .br
  - \fBSessionCommands=big:-w max;Ubuntu:--WSL=Ubuntu;mybox:ssh mybox\fP
  .br
  - \fBSessionCommands=mycolours:-C ~/.minttyrc.mycolours\fP

E \fINote:\fP Control characters need to be embedded verbatim; there is no escape notation.
C \fB注意:\fP 控制字符需要逐字嵌入;没有转义符号。

  .TP
E \fBTaskbar commands\fP (TaskCommands=)
C \fB任务栏命令 \fP(TaskCommands=)
E This setting lists mintty invocation parameters for the "Tasks" list in the 
E taskbar icon, also known as "jump list".
E The value is a series of semicolon-separated, colon-combined 
E pairs of task names and invocation parameter lists; 
E when selecting one of the tasks from the taskbar icon, 
E mintty is invoked with the respective parameters.
E (If a semicolon shall be embedded into any of the command patterns, 
E a non-whitespace control character (i.e. none of \fB^I^J^K^L^M\fP) can be 
E specified as an alternative separator by starting the whole setting with it.)
E The definition list can be split over multiple lines if a separator is 
E followed by a backslash, newline, and optional whitespace indentation.
C 此设置为任务栏图标中的"任务"列表(也称为"跳转列表")列出了 mintty 调用参数。该值
C 是一系列以分号分隔、冒号组合的任务名称和调用参数列表对;当从任务栏图标中选择一项
C 任务时,mintty 将使用相应的参数调用。 (如果分号应嵌入到任何命令模式中,则可以通
C 过用它开始整个设置来指定非空白控制字符(即没有 ^I^J^K^L^M)作为替代分隔符。 ) 如
C 果分隔符后跟反斜杠、换行符和可选的空白缩进,则定义列表可以分成多行。

E \fINote:\fP This feature only works in combination with a parameter 
E \fB-o AppID=...\fP. If the taskbar icon is "pinned" to the taskbar, 
E the task list is retained with it, initially...
C \fB注意:\fP 此功能仅与参数 -o AppID=...结合使用。如果任务栏图标"固定"到任务栏,任务列
C 表将与其一起保留,最初...

E \fINote:\fP To make the jump list persistent, it is necessary to carefully 
E apply additional tricks to satisfy the insane taskbar configuration paradigm of Windows.
E First, also configure a default taskbar icon command using options 
E AppName and AppLaunchCmd.
E Second, choose a unique value for AppID and also add it to 
E the (default) launch command and all (jumplist) task commands.
E Third, invoke mintty with the chosen AppID and option --store-taskbar-properties.
C \fB注意:\fP 为了使跳转列表持久化,需要仔细应用额外的技巧来满足 Windows 疯狂的任务栏配
C 置范式。首先,还使用选项 AppName 和 AppLaunchCmd 配置默认任务栏图标命令。
C 其次,为 AppID 选择一个唯一值,并将其添加到(默认)启动命令和所有(跳转列表)任务命令
C 中。
C 第三,使用选定的 AppID 和选项 --store-taskbar-properties 调用 mintty。

E \fINote:\fP Task names are subject to localization if they are 
E added to the localization file of the selected UI localization language 
E (in subdirectory \fIlang\fP of a mintty resource directory).
C \fB注意:\fP 如果将任务名称添加到所选 UI 本地化语言的本地化文件中(在 mintty 资源目录的
C 子目录 lang 中),则任务名称会受到本地化的影响。

E \fINote:\fP If the parameter list contains "--WSL", mintty will try to 
E determine a suitable WSL distribution icon for the jump list, or use the 
E WSLtty default icon from the mintty resource subdirectory \fIicon\fP, 
E or from the WSLtty package if installed.
C \fB注意:\fP 如果参数列表包含"--WSL",mintty 将尝试为跳转列表确定合适的 WSL 分发图标,
C 或者使用来自 mintty 资源子目录图标的 WSLtty 默认图标,或者来自 WSLtty 包(如果已
C 安装)。

E Examples:
C 例子:
  .br
  - \fBTaskCommands=big:-w max;Ubuntu:--WSL=Ubuntu;mybox:ssh mybox\fP
  .br
  - \fBTaskCommands=mycolours:-C ~/.minttyrc.mycolours\fP

E \fINote:\fP Control characters need to be embedded verbatim; there is no escape notation.
C \fB注意:\fP 控制字符需要逐字嵌入;没有转义符号。

  .TP
E \fBMenu contents\fP
C \fB菜单内容\fP
E These settings allow to customize the context menu as opened in various ways.
C 这些设置允许自定义以各种方式打开的上下文菜单。
  .br
E - \fBMouse\fP (MenuMouse=b); the normal mouse-right-click context menu
C - 鼠标(MenuMouse=b);普通的鼠标右键单击上下文菜单
  .br
E - \fBCtrl+Mouse\fP (MenuCtrlMouse=e|ls); the Ctrl+right-click menu
C - Ctrl+鼠标(MenuCtrlMouse=e|ls); Ctrl+右键菜单
  .br
E - \fBMouse button 5\fP (MenuMouse5=ls); the mouse button 5 menu
C - 鼠标按钮 5 (MenuMouse5=ls);鼠标按键 5 菜单
  .br
E - \fBMenu key\fP (MenuMenu=bs); the Menu key (unless redefined)
C - 菜单键(MenuMenu=bs);菜单键(除非重新定义)
  .br
E - \fBCtrl+Menu key\fP (MenuCtrlMenu=e|ls); the Ctrl+Menu-key
C - Ctrl+菜单键(MenuCtrlMenu=e|ls); Ctrl+菜单键
  .br
E - \fBCtrl+Mouse title\fP (MenuTitleCtrlRight=Ws); Ctrl+right on title
C - Ctrl+鼠标标题(MenuTitleCtrlRight=Ws); Ctrl+在标题上向右
  .br
E - \fBCtrl+left-Mouse title\fP (MenuTitleCtrlLeft=Ws); Ctrl+left title
C - Ctrl+鼠标左键标题(MenuTitleCtrlLeft=Ws); Ctrl+左标题

E Menu contents can be configured by a sequence of characters with the following meaning:
C 菜单内容可以由具有以下含义的字符序列配置:
  .br
E - \fBb\fP: basic context menu
C -b:基本上下文菜单
  .br
E - \fBx\fP: extended context menu without user commands
C -x:扩展上下文菜单,没有用户命令
  .br
E - \fBe\fP: extended context menu with user commands (if configured)
C -e:带有用户命令的扩展上下文菜单(如果已配置)
  .br
E - \fBu\fP: user commands (\fBCtxMenuFunctions\fP, \fBUserCommands\fP)
C u:用户命令(CtxMenuFunctions、UserCommands)
  .br
E - \fBl\fP: session launcher
C -l:会话启动器
  .br
E - \fBs\fP: session switcher (Virtual Tabs)
C -s:会话切换器(虚拟选项卡)
  .br
E - \fB|\fP: vertical separator, adding a new column
C -|:垂直分隔符,添加新列
  .br
E - \fBT\fP: the menu is opened at the text cursor position
C -T:在文本光标位置打开菜单
  .br
E - \fBP\fP: the menu is opened at the mouse pointer position
C -P:在鼠标指针位置打开菜单
  .br
E - \fBW\fP: show window icon for uniconized windows in session switcher
C -W:在会话切换器中为未图标化的窗口显示窗口图标

E \fINote:\fP With empty values for \fBMenuTitleCtrlLeft\fP/\fBRight\fP 
E the default session launcher for Ctrl+left/right-click on title bar can be disabled.
C \fB注意:\fP 如果 MenuTitleCtrlLeft/Right 值为空,则可以禁用 Ctrl+左/右键单击标题栏的默
C 认会话启动器。

E \fINote:\fP In multi-column layout (using a \fB|\fP vertical separator), 
E a Windows bug causes fallback to a default theme, affecting colours and icons.
C \fB注意:\fP 在多列布局中(使用 | 垂直分隔符),Windows 错误会导致退回到默认主题,从而
C 影响颜色和图标。

  .TP
E \fBSession geometry synchronization / Virtual tabs\fP (SessionGeomSync=0)
C \fB会话几何同步/虚拟选项卡 \fP(SessionGeomSync=0)
E This setting defines the level of approximation of "tabbed" window 
E operation within the Virtual Tabs feature:
C 此设置定义了虚拟选项卡功能中"选项卡式"窗口操作的近似级别:
  .br
E - \fB0\fP: no geometry handling; terminal session windows are separate
C - 0:无几何处理;终端会话窗口是分开的
  .br
E - \fB1\fP: sync. position/size when switching/launching/closing a session
C - 1:同步。切换/启动/关闭会话时的位置/大小
  .br
E - \fB2\fP: sync. also when window is moved or resized
C - 2:同步。当窗口移动或调整大小时
  .br
E - \fB3\fP: sync. also when window is minimized
C - 3:同步。当窗口最小化时
  .br
E - \fB4\fP: sync. also when window is started separately
C - 4:同步。当窗口单独启动时

  .TP
E \fBTabbar and tab synchronization\fP (TabBar=0)
C \fBTabbar 和 Tab 同步\fP(TabBar=0)
E Setting \fBTabBar=\fP\fIlevel\fP enables an interactive tabbar as 
E an alternative session switcher. It raises the effective window position 
E synchronization to the given level as if also setting 
E \fBSessionGeomSync=\fP\fIlevel\fP. It is recommended to use level 3 or higher.
C 设置 TabBar=level 启用交互式标签栏作为替代会话切换器。它将有效窗口位置同步提高到
C 给定级别,就好像还设置了 SessionGeomSync=level。建议使用3级或更高级别。

  .TP
E \fBTabbar highlighting\fP
C \fB标签栏高亮\fP
E With these settings, colour highlighting of the active tab in the tabbar 
E can be configured.
C 通过这些设置,可以配置选项卡栏中活动选项卡的颜色突出显示。
  .br
  - \fBTabForegroundColour\fP=\fI\fP
  .br
  - \fBTabBackgroundColour\fP=\fI\fP

  .SH
E SCOPE AND LIMITATIONS
C 范围和限制

  .SS
E \fBConsole issue\fP
C \fB控制台问题\fP

E Mintty, like xterm and rxvt and other terminals, communicates with the 
E child process through a pseudo terminal device, which Cygwin emulates 
E using Windows pipes, causing issues with native Windows command line programs.
E Cygwin 3.1.0 compensates for this issue via the ConPTY API of Windows 10.
E See \fIhttps://github.com/mintty/mintty/wiki/Tips#inputoutput-interaction-with-alien-programs\fP 
E for further hints, especially on the \fIwinpty\fP wrapper.
C Mintty 与 xterm 和 rxvt 以及其他终端一样,通过伪终端设备与子进程通信,Cygwin 使
C 用 Windows 管道模拟该设备,从而导致本地 Windows 命令行程序出现问题。 Cygwin
C 3.1.0 通过 Windows 10 的 ConPTY API 补偿了这个问题。请参阅
E https://github.com/mintty/mintty/wiki/Tips#inputoutput-interaction-with-alien-programs
C 以获得进一步的提示,尤其是关于 winpty包。

  .SS
  \fBTermcap/terminfo\fP

E Mintty has two \fItermcap\fP or \fIterminfo\fP entries, \fBmintty\fP and 
E \fBmintty-direct\fP (the latter reflecting true-colour capability).
E However, it sets the environment variable \fBTERM\fP to \fBxterm\fP 
E by default in order to provide maximal seamless compatibility also in case 
E of remote login.
C Mintty 有两个 termcap 或 terminfo 条目,mintty 和 mintty-direct(后者反映真彩色能力)。但是,它默认将环境变量 TERM 设置为 xterm,以便在远程登录的情况下也提供最大的无缝兼容性。

  .SS
E \fBScreen control features, DEC and xterm compatibility\fP
C \fB屏幕控制功能,DEC 和 xterm 兼容性 \fP

E Mintty is compatible with xterm screen control.
C Mintty 兼容 xterm 屏幕控制。
E It supports DEC terminal screen features up to the VT500 series 
E except DECRLM (right-to-left cursor motion), 
E also supporting VT52 mode, thus being fully VT100-compatible.
C 它支持 DEC 终端屏幕功能直到 vt500系列除了 DECRLM (从右到左的光标运动) ,也支持
C vt52模式,因此完全vt100兼容。
E It also includes most other xterm-specific control sequences and modes.
C 它还包括大多数其他特定于 xterm 的控制序列和模式。

E In addition, mintty supports a maximum of ANSI and ECMA-48 character attribute controls 
E (including RGB and CMYK true-colour support, italic, overline, 
E strikeout, rapid blinking, alternative fonts) and additional 
E rendering attributes (underline styles and colours, superscript and subscript, 
E shadowed and overstrike).
C 此外,mintty 支持最大的 ANSI 和 ecma-48字符属性控件(包括 RGB 和 CMYK 真彩支持、
C 斜体、过线、删除线、快速闪烁、可选字体)和额外的渲染属性(下划线样式和颜色、上标和
C 下标、阴影和过删除)。
E Mintty provides Sixel graphics, image support according to the iTerm2 
E protocol (including png, jpeg, gif output), Emoji support, and Bidi 
E reordering according to the Unicode Bidi Algorithm UBA, amended with 
E flexible bidi controls according to the draft bidi mode model of the 
\fB\fBE \fBBiDi in Terminal Emulators\fP recommendation 
E (\fIhttps://terminal-wg.pages.freedesktop.org/bidi/\fP).
C Mintty 提供 Sixel 图形、根据 iterm2协议的图像支持(包括 png、 jpeg、 gif 输出)、
C Emoji 支持,以及根据 Unicode BiDi Algorithm UBA 的 BiDi 重新排序,并根据终端仿真
C 器推荐中的 BiDi 模式草案使用灵活的 BiDi 控件进行修改(
C https://Terminal-wg.pages.freedesktop.org/BiDi/)。
E However, emoji rendering does not work properly within right-to-left text.
C 然而,表情符号渲染在从右到左的文本中不能正常工作。

E Mintty also provides emulation of the Tektronix 4014 vector graphics terminal,
E including "writethru" and "defocused" beam modes (for which colour indication 
E can be configured), write beam glow and GIN mode, and APL character mode.
C Mintty 还提供了 Tektronix 4014矢量图形终端的仿真,包括" writeethru"和" defocted"
C 光束模式(可配置颜色指示)、写光束发光和 GIN 模式以及 APL 字符模式。

E Mintty is not as configurable as xterm; it offers essential configuration 
E features, many of which are "hidden settings", i.e. they do not appear in 
E the interactive "Options" configuration dialog.
C Mintty 不像 xterm 那样可配置;它提供了基本的配置功能,其中许多是"隐藏设置",即它
C 们不会出现在交互式"选项"配置对话框中。
E Of xterm's keyboard modes, only the default PC-style and VT220-style are available.
C 在 xterm 的键盘模式中,只有默认的 PC-style和 VT220-style 可用。
E 8-bit control characters are not supported.
C 不支持 8 位控制字符。
E Mouse highlighting mode is not implemented.
C 未实现鼠标突出显示模式。

  .SH
E SEE ALSO
C 参见

E Additional information can be found on the wiki on the mintty project page 
E \fIhttps://github.com/mintty/mintty/wiki\fP.
C 可以在 mintty 项目页面 https://github.com/mintty/mintty/wiki 上的 wiki 上找到其
C 他信息。

  .SH
E LICENSE
C 许可证

E Copyright (C) 2013 Andy Koppe (C) 2020 Thomas Wolff
C 版权所有 (C) 2013 Andy Koppe (C) 2020 Thomas Wolff

E Mintty is released under the terms of the the \fIGNU General Public License\fP
E version 3.
E See \fIhttp://gnu.org/licenses/gpl\fP for the license text.
C Mintty 是根据 GNU 通用公共许可证第 3 版的条款发布的。有关许可证文本,请参阅
C http://gnu.org/licenses/gpl。

E There is NO WARRANTY, to the extent permitted by law.
C 在法律允许的范围内,不提供任何保证。

  .SH
E CONTACT
C 联系

E Please report bugs or suggest enhancements via the issue tracker at
E \fIhttps://github.com/mintty/mintty/issues\fP.
E Questions can be sent to the Cygwin mailing list at \fIcygwin@cygwin.com\fP, 
E to the Mintty chat issue \fIhttps://github.com/mintty/mintty/issues/777\fP, 
E or to the Gitter chat (experimental) \fIhttps://gitter.im/mintty/mintty\fP.
C 请通过 https://github.com/mintty/mintty/issues 上的问题跟踪器报告错误或提出改进
C 建议。
C 问题可以通过 cygwin@cygwin.com 发送到 Cygwin 邮件列表、Mintty 聊天问题
C https://github.com/mintty/mintty/issues/777 或 Gitter 聊天(实验)
C https://gitter.im/mintty/mintty 。
  .\" vim:tw=80:ft=groff
